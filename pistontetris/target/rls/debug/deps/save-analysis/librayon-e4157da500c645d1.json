{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0","program":"C:\\Users\\Zimmerle\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","rayon","C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=e4157da500c645d1","-C","extra-filename=-e4157da500c645d1","--out-dir","e:\\SIMON\\Dokumente\\Programieren\\rust\\games\\pistontetris\\pistontetris\\pistontetris\\target\\rls\\debug\\deps","-L","dependency=e:\\SIMON\\Dokumente\\Programieren\\rust\\games\\pistontetris\\pistontetris\\pistontetris\\target\\rls\\debug\\deps","--extern","crossbeam_deque=e:\\SIMON\\Dokumente\\Programieren\\rust\\games\\pistontetris\\pistontetris\\pistontetris\\target\\rls\\debug\\deps\\libcrossbeam_deque-5d48c35218e5fabd.rmeta","--extern","either=e:\\SIMON\\Dokumente\\Programieren\\rust\\games\\pistontetris\\pistontetris\\pistontetris\\target\\rls\\debug\\deps\\libeither-520bb20181e621c7.rmeta","--extern","rayon_core=e:\\SIMON\\Dokumente\\Programieren\\rust\\games\\pistontetris\\pistontetris\\pistontetris\\target\\rls\\debug\\deps\\librayon_core-8df6e7e91d99217f.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Zimmerle\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"e:\\SIMON\\Dokumente\\Programieren\\rust\\games\\pistontetris\\pistontetris\\pistontetris\\target\\rls\\debug\\deps\\librayon-e4157da500c645d1.rmeta"},"prelude":{"crate_id":{"name":"rayon","disambiguator":[4907557082229767674,6984373511525713763]},"crate_root":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src","external_crates":[{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13454279496936976369,256594374343364064]}},{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[10635428080862470944,4053010167158610789]}},{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2397070696586021034,1787692942867494326]}},{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13215350897914660053,4762041400992555299]}},{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8309206586370028958,10530789326598529563]}},{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12844497061290288730,1165546255938205329]}},{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17370511097861102976,8088456066398622915]}},{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":8,"id":{"name":"hashbrown","disambiguator":[1985867887572050615,3717448080532913995]}},{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":9,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10045986561377339069,14963295625130836827]}},{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14681916437073319406,9740076823699971540]}},{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":11,"id":{"name":"panic_unwind","disambiguator":[4514194809136982995,14217700833302823945]}},{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":12,"id":{"name":"crossbeam_deque","disambiguator":[13204853999374946674,9291484611669670602]}},{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":13,"id":{"name":"crossbeam_epoch","disambiguator":[5437111178761086376,18398099151858053802]}},{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":14,"id":{"name":"cfg_if","disambiguator":[9892403052926457981,12199495752406605354]}},{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":15,"id":{"name":"arrayvec","disambiguator":[9742200224502025928,1665981593285059283]}},{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":16,"id":{"name":"nodrop","disambiguator":[3731771727497719198,13489708442398182793]}},{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":17,"id":{"name":"crossbeam_utils","disambiguator":[13328241532570596262,1407893011031932723]}},{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":18,"id":{"name":"lazy_static","disambiguator":[8311875922454522998,15465922901661398489]}},{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":19,"id":{"name":"memoffset","disambiguator":[736243595676418036,1126588728772268113]}},{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":20,"id":{"name":"scopeguard","disambiguator":[14116879031634278910,16025134346367935318]}},{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":21,"id":{"name":"either","disambiguator":[4442650862764834147,11612143026168459370]}},{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":22,"id":{"name":"rayon_core","disambiguator":[15810427790255556756,3291947618133498797]}},{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":23,"id":{"name":"crossbeam_queue","disambiguator":[6874646197853042720,11405169212682829833]}},{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":24,"id":{"name":"num_cpus","disambiguator":[1454782163737823092,15506429651928045942]}}],"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":0,"byte_end":4546,"line_start":1,"line_end":129,"column_start":1,"column_end":41}},"imports":[{"kind":"Use","ref_id":{"krate":21,"index":167},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":25941,"byte_end":25947,"line_start":78,"line_end":78,"column_start":17,"column_end":23},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":5175},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":26668,"byte_end":26678,"line_start":95,"line_end":95,"column_start":28,"column_end":38},"alias_span":null,"name":"IterBridge","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":26680,"byte_end":26694,"line_start":95,"line_end":95,"column_start":40,"column_end":54},"alias_span":null,"name":"ParallelBridge","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":5184},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":26761,"byte_end":26766,"line_start":100,"line_end":100,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":5205},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":26802,"byte_end":26808,"line_start":102,"line_end":102,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":5215},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":26863,"byte_end":26872,"line_start":105,"line_end":105,"column_start":26,"column_end":35},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":5224},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":26908,"byte_end":26914,"line_start":107,"line_end":107,"column_start":23,"column_end":29},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":5233},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":26958,"byte_end":26967,"line_start":109,"line_end":109,"column_start":27,"column_end":36},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":5242},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27007,"byte_end":27014,"line_start":111,"line_end":111,"column_start":25,"column_end":32},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":5251},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27052,"byte_end":27059,"line_start":113,"line_end":113,"column_start":24,"column_end":31},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":5260},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27143,"byte_end":27147,"line_start":118,"line_end":118,"column_start":22,"column_end":26},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":5272},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27149,"byte_end":27157,"line_start":118,"line_end":118,"column_start":28,"column_end":36},"alias_span":null,"name":"FoldWith","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":5295},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27199,"byte_end":27206,"line_start":120,"line_end":120,"column_start":26,"column_end":33},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":5310},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27208,"byte_end":27219,"line_start":120,"line_end":120,"column_start":35,"column_end":46},"alias_span":null,"name":"TryFoldWith","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":5322},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27301,"byte_end":27305,"line_start":125,"line_end":125,"column_start":21,"column_end":25},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":1530},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27346,"byte_end":27351,"line_start":127,"line_end":127,"column_start":26,"column_end":31},"alias_span":null,"name":"split","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":5332},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27353,"byte_end":27358,"line_start":127,"line_end":127,"column_start":33,"column_end":38},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":5341},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27391,"byte_end":27395,"line_start":129,"line_end":129,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":5351},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27425,"byte_end":27428,"line_start":131,"line_end":131,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":5372},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27469,"byte_end":27476,"line_start":133,"line_end":133,"column_start":26,"column_end":33},"alias_span":null,"name":"MapInit","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":5360},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27478,"byte_end":27485,"line_start":133,"line_end":133,"column_start":35,"column_end":42},"alias_span":null,"name":"MapWith","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":5384},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27516,"byte_end":27519,"line_start":135,"line_end":135,"column_start":20,"column_end":23},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":5397},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27555,"byte_end":27560,"line_start":137,"line_end":137,"column_start":23,"column_end":28},"alias_span":null,"name":"ZipEq","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":5409},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27604,"byte_end":27614,"line_start":139,"line_end":139,"column_start":27,"column_end":37},"alias_span":null,"name":"Interleave","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":5422},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27676,"byte_end":27694,"line_start":141,"line_end":141,"column_start":36,"column_end":54},"alias_span":null,"name":"InterleaveShortest","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":5434},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27740,"byte_end":27751,"line_start":143,"line_end":143,"column_start":28,"column_end":39},"alias_span":null,"name":"Intersperse","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":5444},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27787,"byte_end":27793,"line_start":145,"line_end":145,"column_start":23,"column_end":29},"alias_span":null,"name":"Update","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":5466},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27834,"byte_end":27837,"line_start":149,"line_end":149,"column_start":20,"column_end":23},"alias_span":null,"name":"Rev","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":5485},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27868,"byte_end":27874,"line_start":151,"line_end":151,"column_start":21,"column_end":27},"alias_span":null,"name":"MaxLen","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":5475},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27876,"byte_end":27882,"line_start":151,"line_end":151,"column_start":29,"column_end":35},"alias_span":null,"name":"MinLen","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":5495},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27941,"byte_end":27947,"line_start":155,"line_end":155,"column_start":23,"column_end":29},"alias_span":null,"name":"Cloned","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":5504},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27985,"byte_end":27992,"line_start":157,"line_end":157,"column_start":24,"column_end":31},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":5513},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":28036,"byte_end":28045,"line_start":159,"line_end":159,"column_start":27,"column_end":36},"alias_span":null,"name":"PanicFuse","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":5529},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":28089,"byte_end":28098,"line_start":161,"line_end":161,"column_start":27,"column_end":36},"alias_span":null,"name":"WhileSome","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":3200},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":28158,"byte_end":28164,"line_start":165,"line_end":165,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":5538},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":28166,"byte_end":28172,"line_start":165,"line_end":165,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":3221},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":28198,"byte_end":28205,"line_start":166,"line_end":166,"column_start":24,"column_end":31},"alias_span":null,"name":"repeatn","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":5547},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":28207,"byte_end":28214,"line_start":166,"line_end":166,"column_start":33,"column_end":40},"alias_span":null,"name":"RepeatN","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":3469},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":28251,"byte_end":28256,"line_start":169,"line_end":169,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":3471},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":28258,"byte_end":28263,"line_start":169,"line_end":169,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":3511},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":28297,"byte_end":28301,"line_start":171,"line_end":171,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":5557},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":28303,"byte_end":28307,"line_start":171,"line_end":171,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":3784},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\prelude.rs","byte_start":362515,"byte_end":362535,"line_start":5,"line_end":5,"column_start":15,"column_end":35},"alias_span":null,"name":"FromParallelIterator","value":"","parent":{"krate":0,"index":3870}},{"kind":"Use","ref_id":{"krate":0,"index":3727},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\prelude.rs","byte_start":362551,"byte_end":362574,"line_start":6,"line_end":6,"column_start":15,"column_end":38},"alias_span":null,"name":"IndexedParallelIterator","value":"","parent":{"krate":0,"index":3870}},{"kind":"Use","ref_id":{"krate":0,"index":3529},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\prelude.rs","byte_start":362590,"byte_end":362610,"line_start":7,"line_end":7,"column_start":15,"column_end":35},"alias_span":null,"name":"IntoParallelIterator","value":"","parent":{"krate":0,"index":3870}},{"kind":"Use","ref_id":{"krate":0,"index":3533},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\prelude.rs","byte_start":362626,"byte_end":362649,"line_start":8,"line_end":8,"column_start":15,"column_end":38},"alias_span":null,"name":"IntoParallelRefIterator","value":"","parent":{"krate":0,"index":3870}},{"kind":"Use","ref_id":{"krate":0,"index":3544},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\prelude.rs","byte_start":362665,"byte_end":362691,"line_start":9,"line_end":9,"column_start":15,"column_end":41},"alias_span":null,"name":"IntoParallelRefMutIterator","value":"","parent":{"krate":0,"index":3870}},{"kind":"Use","ref_id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\prelude.rs","byte_start":362707,"byte_end":362721,"line_start":10,"line_end":10,"column_start":15,"column_end":29},"alias_span":null,"name":"ParallelBridge","value":"","parent":{"krate":0,"index":3870}},{"kind":"Use","ref_id":{"krate":0,"index":3788},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\prelude.rs","byte_start":362737,"byte_end":362751,"line_start":11,"line_end":11,"column_start":15,"column_end":29},"alias_span":null,"name":"ParallelExtend","value":"","parent":{"krate":0,"index":3870}},{"kind":"Use","ref_id":{"krate":0,"index":3555},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\prelude.rs","byte_start":362767,"byte_end":362783,"line_start":12,"line_end":12,"column_start":15,"column_end":31},"alias_span":null,"name":"ParallelIterator","value":"","parent":{"krate":0,"index":3870}},{"kind":"Use","ref_id":{"krate":0,"index":4132},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\prelude.rs","byte_start":362800,"byte_end":362813,"line_start":13,"line_end":13,"column_start":16,"column_end":29},"alias_span":null,"name":"ParallelSlice","value":"","parent":{"krate":0,"index":3870}},{"kind":"Use","ref_id":{"krate":0,"index":4142},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\prelude.rs","byte_start":362830,"byte_end":362846,"line_start":14,"line_end":14,"column_start":16,"column_end":32},"alias_span":null,"name":"ParallelSliceMut","value":"","parent":{"krate":0,"index":3870}},{"kind":"Use","ref_id":{"krate":0,"index":4408},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\prelude.rs","byte_start":362861,"byte_end":362875,"line_start":15,"line_end":15,"column_start":14,"column_end":28},"alias_span":null,"name":"ParallelString","value":"","parent":{"krate":0,"index":3870}},{"kind":"Use","ref_id":{"krate":22,"index":830},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4159,"byte_end":4168,"line_start":120,"line_end":120,"column_start":21,"column_end":30},"alias_span":null,"name":"FnContext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":230},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4190,"byte_end":4203,"line_start":121,"line_end":121,"column_start":21,"column_end":34},"alias_span":null,"name":"ThreadBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":510},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4225,"byte_end":4235,"line_start":122,"line_end":122,"column_start":21,"column_end":31},"alias_span":null,"name":"ThreadPool","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":818},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4257,"byte_end":4277,"line_start":123,"line_end":123,"column_start":21,"column_end":41},"alias_span":null,"name":"ThreadPoolBuildError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":599},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4299,"byte_end":4316,"line_start":124,"line_end":124,"column_start":21,"column_end":38},"alias_span":null,"name":"ThreadPoolBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":598},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4339,"byte_end":4358,"line_start":125,"line_end":125,"column_start":22,"column_end":41},"alias_span":null,"name":"current_num_threads","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":549},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4360,"byte_end":4380,"line_start":125,"line_end":125,"column_start":43,"column_end":63},"alias_span":null,"name":"current_thread_index","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":110},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4404,"byte_end":4408,"line_start":126,"line_end":126,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":117},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4410,"byte_end":4422,"line_start":126,"line_end":126,"column_start":28,"column_end":40},"alias_span":null,"name":"join_context","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":392},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4446,"byte_end":4451,"line_start":127,"line_end":127,"column_start":22,"column_end":27},"alias_span":null,"name":"scope","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":378},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4453,"byte_end":4458,"line_start":127,"line_end":127,"column_start":29,"column_end":34},"alias_span":null,"name":"Scope","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":399},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4482,"byte_end":4492,"line_start":128,"line_end":128,"column_start":22,"column_end":32},"alias_span":null,"name":"scope_fifo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":381},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4494,"byte_end":4503,"line_start":128,"line_end":128,"column_start":34,"column_end":43},"alias_span":null,"name":"ScopeFifo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":479},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4527,"byte_end":4532,"line_start":129,"line_end":129,"column_start":22,"column_end":27},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":486},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4534,"byte_end":4544,"line_start":129,"line_end":129,"column_start":29,"column_end":39},"alias_span":null,"name":"spawn_fifo","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":0,"byte_end":4546,"line_start":1,"line_end":129,"column_start":1,"column_end":41},"name":"","qualname":"::","value":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":23},{"krate":0,"index":60},{"krate":0,"index":151},{"krate":0,"index":3814},{"krate":0,"index":3870},{"krate":0,"index":3882},{"krate":0,"index":3905},{"krate":0,"index":3920},{"krate":0,"index":3956},{"krate":0,"index":4401},{"krate":0,"index":4632},{"krate":0,"index":4691},{"krate":0,"index":4693},{"krate":0,"index":4720},{"krate":0,"index":4731},{"krate":0,"index":4732},{"krate":0,"index":4733},{"krate":0,"index":4734},{"krate":0,"index":4735},{"krate":0,"index":4736},{"krate":0,"index":4739},{"krate":0,"index":4742},{"krate":0,"index":4745},{"krate":0,"index":4748}],"decl_id":null,"docs":" Data-parallelism library that makes it easy to convert sequential\n computations into parallel","sig":null,"attributes":[{"value":"deny(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":53,"byte_end":92,"line_start":2,"line_end":2,"column_start":1,"column_end":40}},{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":93,"byte_end":115,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"deny(unreachable_pub)","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":116,"byte_end":141,"line_start":4,"line_end":4,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":19},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\private.rs","byte_start":7062,"byte_end":7075,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"PrivateMarker","qualname":"::private::PrivateMarker","value":"","parent":null,"children":[],"decl_id":null,"docs":" If this type is pub but not publicly reachable, third parties\n can't name it and can't implement traits using it.\n","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\private.rs","byte_start":7011,"byte_end":7050,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"collections","qualname":"::collections","value":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\mod.rs","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":76},{"krate":0,"index":86},{"krate":0,"index":95},{"krate":0,"index":108},{"krate":0,"index":120},{"krate":0,"index":129}],"decl_id":null,"docs":" Parallel iterator types for [standard collections][std::collections]","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\binary_heap.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"binary_heap","qualname":"::collections::binary_heap","value":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\binary_heap.rs","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":4751},{"krate":0,"index":4757},{"krate":0,"index":4754},{"krate":0,"index":67},{"krate":0,"index":4767},{"krate":0,"index":4760},{"krate":0,"index":4773},{"krate":0,"index":4777},{"krate":0,"index":72},{"krate":0,"index":4781},{"krate":0,"index":4796},{"krate":0,"index":4788}],"decl_id":null,"docs":" This module contains the parallel iterator types for heaps\n (`BinaryHeap<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4751},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\binary_heap.rs","byte_start":12942,"byte_end":12950,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::binary_heap::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":4753}],"decl_id":null,"docs":" Parallel iterator over a binary heap\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4773},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\binary_heap.rs","byte_start":13416,"byte_end":13420,"line_start":36,"line_end":36,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::binary_heap::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4776}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a binary heap\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\btree_map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"btree_map","qualname":"::collections::btree_map","value":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\btree_map.rs","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":4803},{"krate":0,"index":4807},{"krate":0,"index":4811},{"krate":0,"index":4818},{"krate":0,"index":4825},{"krate":0,"index":4830},{"krate":0,"index":81},{"krate":0,"index":4835},{"krate":0,"index":4843},{"krate":0,"index":4851},{"krate":0,"index":4856},{"krate":0,"index":4861},{"krate":0,"index":4869}],"decl_id":null,"docs":" This module contains the parallel iterator types for B-Tree maps\n (`BTreeMap<K, V>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4803},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\btree_map.rs","byte_start":14234,"byte_end":14242,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::btree_map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":4806}],"decl_id":null,"docs":" Parallel iterator over a B-Tree map\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4825},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\btree_map.rs","byte_start":14577,"byte_end":14581,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::btree_map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4829}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a B-Tree map\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4851},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\btree_map.rs","byte_start":15128,"byte_end":15135,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::btree_map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":4855}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a B-Tree map\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\btree_set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"btree_set","qualname":"::collections::btree_set","value":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\btree_set.rs","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":4877},{"krate":0,"index":4880},{"krate":0,"index":4883},{"krate":0,"index":4889},{"krate":0,"index":4895},{"krate":0,"index":4899},{"krate":0,"index":91},{"krate":0,"index":4903},{"krate":0,"index":4910}],"decl_id":null,"docs":" This module contains the parallel iterator types for B-Tree sets\n (`BTreeSet<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4877},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\btree_set.rs","byte_start":15816,"byte_end":15824,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::btree_set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":4879}],"decl_id":null,"docs":" Parallel iterator over a B-Tree set\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4895},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\btree_set.rs","byte_start":16113,"byte_end":16117,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::btree_set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4898}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a B-Tree set\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\hash_map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hash_map","qualname":"::collections::hash_map","value":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\hash_map.rs","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":4917},{"krate":0,"index":4921},{"krate":0,"index":4925},{"krate":0,"index":4933},{"krate":0,"index":4940},{"krate":0,"index":4945},{"krate":0,"index":103},{"krate":0,"index":4950},{"krate":0,"index":4959},{"krate":0,"index":4967},{"krate":0,"index":4972},{"krate":0,"index":4977},{"krate":0,"index":4986}],"decl_id":null,"docs":" This module contains the parallel iterator types for hash maps\n (`HashMap<K, V>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4917},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\hash_map.rs","byte_start":16954,"byte_end":16962,"line_start":15,"line_end":15,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::hash_map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":4920}],"decl_id":null,"docs":" Parallel iterator over a hash map\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4940},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\hash_map.rs","byte_start":17331,"byte_end":17335,"line_start":31,"line_end":31,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::hash_map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4944}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a hash map\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4967},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\hash_map.rs","byte_start":17922,"byte_end":17929,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::hash_map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":4971}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a hash map\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\hash_set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hash_set","qualname":"::collections::hash_set","value":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\hash_set.rs","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":4994},{"krate":0,"index":4997},{"krate":0,"index":5000},{"krate":0,"index":5007},{"krate":0,"index":5013},{"krate":0,"index":5017},{"krate":0,"index":116},{"krate":0,"index":5021},{"krate":0,"index":5029}],"decl_id":null,"docs":" This module contains the parallel iterator types for hash sets\n (`HashSet<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4994},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\hash_set.rs","byte_start":18676,"byte_end":18684,"line_start":15,"line_end":15,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::hash_set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":4996}],"decl_id":null,"docs":" Parallel iterator over a hash set\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5013},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\hash_set.rs","byte_start":19007,"byte_end":19011,"line_start":31,"line_end":31,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::hash_set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5016}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a hash set\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\linked_list.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"linked_list","qualname":"::collections::linked_list","value":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\linked_list.rs","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":5036},{"krate":0,"index":5042},{"krate":0,"index":5039},{"krate":0,"index":5045},{"krate":0,"index":5051},{"krate":0,"index":5057},{"krate":0,"index":5061},{"krate":0,"index":125},{"krate":0,"index":5065},{"krate":0,"index":5072},{"krate":0,"index":5079},{"krate":0,"index":5083},{"krate":0,"index":5087},{"krate":0,"index":5094}],"decl_id":null,"docs":" This module contains the parallel iterator types for linked lists\n (`LinkedList<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5036},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\linked_list.rs","byte_start":19843,"byte_end":19851,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::linked_list::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":5038}],"decl_id":null,"docs":" Parallel iterator over a linked list\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5057},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\linked_list.rs","byte_start":20125,"byte_end":20129,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::linked_list::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5060}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a linked list\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5079},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\linked_list.rs","byte_start":20579,"byte_end":20586,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::linked_list::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":5082}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a linked list\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\vec_deque.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vec_deque","qualname":"::collections::vec_deque","value":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\vec_deque.rs","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":5101},{"krate":0,"index":5107},{"krate":0,"index":5104},{"krate":0,"index":5110},{"krate":0,"index":5123},{"krate":0,"index":5116},{"krate":0,"index":5129},{"krate":0,"index":5133},{"krate":0,"index":135},{"krate":0,"index":139},{"krate":0,"index":5145},{"krate":0,"index":5137},{"krate":0,"index":5152},{"krate":0,"index":5156},{"krate":0,"index":145},{"krate":0,"index":5168},{"krate":0,"index":5160}],"decl_id":null,"docs":" This module contains the parallel iterator types for double-ended queues\n (`VecDeque<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5101},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\vec_deque.rs","byte_start":21200,"byte_end":21208,"line_start":15,"line_end":15,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::vec_deque::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":5103}],"decl_id":null,"docs":" Parallel iterator over a double-ended queue\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5129},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\vec_deque.rs","byte_start":21495,"byte_end":21499,"line_start":31,"line_end":31,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::vec_deque::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5132}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a double-ended queue\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5152},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\vec_deque.rs","byte_start":22187,"byte_end":22194,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::vec_deque::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":5155}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a double-ended queue\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":151},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iter","qualname":"::iter","value":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":211},{"krate":0,"index":214},{"krate":0,"index":309},{"krate":0,"index":366},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":580},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":965},{"krate":0,"index":1004},{"krate":0,"index":1090},{"krate":0,"index":1172},{"krate":0,"index":1175},{"krate":0,"index":1299},{"krate":0,"index":1302},{"krate":0,"index":1365},{"krate":0,"index":1396},{"krate":0,"index":1464},{"krate":0,"index":1523},{"krate":0,"index":1524},{"krate":0,"index":1558},{"krate":0,"index":1561},{"krate":0,"index":1591},{"krate":0,"index":1592},{"krate":0,"index":1705},{"krate":0,"index":1706},{"krate":0,"index":1976},{"krate":0,"index":1979},{"krate":0,"index":2041},{"krate":0,"index":2042},{"krate":0,"index":2064},{"krate":0,"index":2065},{"krate":0,"index":2159},{"krate":0,"index":2160},{"krate":0,"index":2182},{"krate":0,"index":2183},{"krate":0,"index":2294},{"krate":0,"index":2295},{"krate":0,"index":2421},{"krate":0,"index":2422},{"krate":0,"index":2453},{"krate":0,"index":2495},{"krate":0,"index":2496},{"krate":0,"index":2580},{"krate":0,"index":2583},{"krate":0,"index":2667},{"krate":0,"index":2716},{"krate":0,"index":2765},{"krate":0,"index":2766},{"krate":0,"index":2872},{"krate":0,"index":2873},{"krate":0,"index":2993},{"krate":0,"index":2994},{"krate":0,"index":3046},{"krate":0,"index":3047},{"krate":0,"index":3195},{"krate":0,"index":3261},{"krate":0,"index":3457},{"krate":0,"index":3460},{"krate":0,"index":3463},{"krate":0,"index":3505},{"krate":0,"index":3508},{"krate":0,"index":3526},{"krate":0,"index":3529},{"krate":0,"index":3533},{"krate":0,"index":3538},{"krate":0,"index":3544},{"krate":0,"index":3549},{"krate":0,"index":3555},{"krate":0,"index":3722},{"krate":0,"index":3727},{"krate":0,"index":3784},{"krate":0,"index":3788},{"krate":0,"index":3792}],"decl_id":null,"docs":" Traits for writing parallel programs using an iterator-style interface","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":114655,"byte_end":114669,"line_start":46,"line_end":46,"column_start":11,"column_end":25},"name":"ParallelBridge","qualname":"::iter::par_bridge::ParallelBridge","value":"ParallelBridge: Sized","parent":null,"children":[{"krate":0,"index":184}],"decl_id":null,"docs":" Conversion trait to convert an `Iterator` to a `ParallelIterator`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":114750,"byte_end":114760,"line_start":48,"line_end":48,"column_start":8,"column_end":18},"name":"par_bridge","qualname":"::iter::par_bridge::ParallelBridge::par_bridge","value":"fn (self) -> IterBridge<Self>","parent":{"krate":0,"index":183},"children":[],"decl_id":null,"docs":" Create a bridge from this type to a `ParallelIterator`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5175},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":115259,"byte_end":115269,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"IterBridge","qualname":"::iter::par_bridge::IterBridge","value":"IterBridge {  }","parent":null,"children":[{"krate":0,"index":5177}],"decl_id":null,"docs":" `IterBridge` is a parallel iterator that wraps a sequential iterator.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5184},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":120441,"byte_end":120446,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"Chain","qualname":"::iter::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":5187},{"krate":0,"index":5188}],"decl_id":null,"docs":" `Chain` is an iterator that joins `b` after `a` in one continuous iterator.\n This struct is created by the [`chain()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":120332,"byte_end":120405,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5205},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":137565,"byte_end":137571,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::iter::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":5207},{"krate":0,"index":5208}],"decl_id":null,"docs":" `Chunks` is an iterator that groups elements of an underlying iterator.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":137456,"byte_end":137529,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5215},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\enumerate.rs","byte_start":159538,"byte_end":159547,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"Enumerate","qualname":"::iter::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":5217}],"decl_id":null,"docs":" `Enumerate` is an iterator that returns the current count along with the element.\n This struct is created by the [`enumerate()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\enumerate.rs","byte_start":159429,"byte_end":159502,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5224},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter.rs","byte_start":162973,"byte_end":162979,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"Filter","qualname":"::iter::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":5227},{"krate":0,"index":5228}],"decl_id":null,"docs":" `Filter` takes a predicate `filter_op` and filters out elements that match.\n This struct is created by the [`filter()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter.rs","byte_start":162871,"byte_end":162944,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5233},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter_map.rs","byte_start":166519,"byte_end":166528,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"FilterMap","qualname":"::iter::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":5236},{"krate":0,"index":5237}],"decl_id":null,"docs":" `FilterMap` creates an iterator that uses `filter_op` to both filter and map elements.\n This struct is created by the [`filter_map()`] method on [`ParallelIterator`].","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter_map.rs","byte_start":166417,"byte_end":166490,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5242},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flat_map.rs","byte_start":170226,"byte_end":170233,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"FlatMap","qualname":"::iter::flat_map::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":5245},{"krate":0,"index":5246}],"decl_id":null,"docs":" `FlatMap` maps each element to an iterator, then flattens these iterators together.\n This struct is created by the [`flat_map()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flat_map.rs","byte_start":170124,"byte_end":170197,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5251},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flatten.rs","byte_start":174285,"byte_end":174292,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Flatten","qualname":"::iter::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":5253}],"decl_id":null,"docs":" `Flatten` turns each element to an iterator, then flattens these iterators\n together. This struct is created by the [`flatten()`] method on\n [`ParallelIterator`].","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flatten.rs","byte_start":174176,"byte_end":174249,"line_start":10,"line_end":10,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5260},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":175659,"byte_end":175663,"line_start":29,"line_end":29,"column_start":12,"column_end":16},"name":"Fold","qualname":"::iter::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":5264},{"krate":0,"index":5265},{"krate":0,"index":5266}],"decl_id":null,"docs":" `Fold` is an iterator that applies a function over an iterator producing a single value.\n This struct is created by the [`fold()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":175557,"byte_end":175630,"line_start":27,"line_end":27,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5272},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":179627,"byte_end":179635,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"FoldWith","qualname":"::iter::fold::FoldWith","value":"FoldWith {  }","parent":null,"children":[{"krate":0,"index":5276},{"krate":0,"index":5277},{"krate":0,"index":5278}],"decl_id":null,"docs":" `FoldWith` is an iterator that applies a function over an iterator producing a single value.\n This struct is created by the [`fold_with()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":179525,"byte_end":179598,"line_start":195,"line_end":195,"column_start":1,"column_end":74}}]},{"kind":"Mod","id":{"krate":0,"index":1090},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"plumbing","qualname":"::iter::plumbing","value":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","parent":null,"children":[{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1100},{"krate":0,"index":1109},{"krate":0,"index":1117},{"krate":0,"index":1125},{"krate":0,"index":1128},{"krate":0,"index":1132},{"krate":0,"index":5284},{"krate":0,"index":5287},{"krate":0,"index":5286},{"krate":0,"index":1137},{"krate":0,"index":5289},{"krate":0,"index":5293},{"krate":0,"index":5292},{"krate":0,"index":1140},{"krate":0,"index":1143},{"krate":0,"index":1156},{"krate":0,"index":1164},{"krate":0,"index":1167}],"decl_id":null,"docs":" Traits and functions used to implement parallel iteration.  These are\n low-level details -- users of parallel iterators should not need to\n interact with them directly.  See [the `plumbing` README][r] for a high-level overview.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1095},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":190120,"byte_end":190136,"line_start":20,"line_end":20,"column_start":11,"column_end":27},"name":"ProducerCallback","qualname":"::iter::plumbing::ProducerCallback","value":"ProducerCallback<T>","parent":null,"children":[{"krate":0,"index":1097},{"krate":0,"index":1098}],"decl_id":null,"docs":" The `ProducerCallback` trait is a kind of generic closure,\n [analogous to `FnOnce`][FnOnce]. See [the corresponding section in\n the plumbing README][r] for more details.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1097},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":190369,"byte_end":190375,"line_start":25,"line_end":25,"column_start":10,"column_end":16},"name":"Output","qualname":"::iter::plumbing::ProducerCallback::Output","value":"type Output;","parent":{"krate":0,"index":1095},"children":[],"decl_id":null,"docs":" The type of value returned by this callback. Analogous to\n [`Output` from the `FnOnce` trait][Output].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1098},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":190593,"byte_end":190601,"line_start":30,"line_end":30,"column_start":8,"column_end":16},"name":"callback","qualname":"::iter::plumbing::ProducerCallback::callback","value":"fn <P> (self, producer: P) -> Self::Output","parent":{"krate":0,"index":1095},"children":[],"decl_id":null,"docs":" Invokes the callback with the given producer as argument. The\n key point of this trait is that this method is generic over\n `P`, and hence implementors must be defined for any producer.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1100},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":192075,"byte_end":192083,"line_start":59,"line_end":59,"column_start":11,"column_end":19},"name":"Producer","qualname":"::iter::plumbing::Producer","value":"Producer: Send + Sized","parent":null,"children":[{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107}],"decl_id":null,"docs":" A `Producer` is effectively a \"splittable `IntoIterator`\". That\n is, a producer is a value which can be converted into an iterator\n at any time: at that point, it simply produces items on demand,\n like any iterator. But what makes a `Producer` special is that,\n *before* we convert to an iterator, we can also **split** it at a\n particular point using the `split_at` method. This will yield up\n two producers, one producing the items before that point, and one\n producing the items after that point (these two producers can then\n independently be split further, or be converted into iterators).\n In Rayon, this splitting is used to divide between threads.\n See [the `plumbing` README][r] for further details.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1101},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":192220,"byte_end":192224,"line_start":62,"line_end":62,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::plumbing::Producer::Item","value":"type Item;","parent":{"krate":0,"index":1100},"children":[],"decl_id":null,"docs":" The type of item that will be produced by this producer once\n it is converted into an iterator.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1102},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":192281,"byte_end":192289,"line_start":65,"line_end":65,"column_start":10,"column_end":18},"name":"IntoIter","qualname":"::iter::plumbing::Producer::IntoIter","value":"type IntoIter: Iterator<Item = Self::Item> + DoubleEndedIterator + ExactSizeIterator;","parent":{"krate":0,"index":1100},"children":[],"decl_id":null,"docs":" The type of iterator we will become.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1103},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":192472,"byte_end":192481,"line_start":69,"line_end":69,"column_start":8,"column_end":17},"name":"into_iter","qualname":"::iter::plumbing::Producer::into_iter","value":"fn (self) -> Self::IntoIter","parent":{"krate":0,"index":1100},"children":[],"decl_id":null,"docs":" Convert `self` into an iterator; at this point, no more parallel splits\n are possible.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":193084,"byte_end":193091,"line_start":81,"line_end":81,"column_start":8,"column_end":15},"name":"min_len","qualname":"::iter::plumbing::Producer::min_len","value":"fn (&self) -> usize","parent":{"krate":0,"index":1100},"children":[],"decl_id":null,"docs":" The minimum number of items that we will process\n sequentially. Defaults to 1, which means that we will split\n all the way down to a single item. This can be raised higher\n using the [`with_min_len`] method, which will force us to\n create sequential tasks at a larger granularity. Note that\n Rayon automatically normally attempts to adjust the size of\n parallel splits to reduce overhead, so this should not be\n needed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1105},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":193656,"byte_end":193663,"line_start":94,"line_end":94,"column_start":8,"column_end":15},"name":"max_len","qualname":"::iter::plumbing::Producer::max_len","value":"fn (&self) -> usize","parent":{"krate":0,"index":1100},"children":[],"decl_id":null,"docs":" The maximum number of items that we will process\n sequentially. Defaults to MAX, which means that we can choose\n not to split at all. This can be lowered using the\n [`with_max_len`] method, which will force us to create more\n parallel tasks. Note that Rayon automatically normally\n attempts to adjust the size of parallel splits to reduce\n overhead, so this should not be needed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1106},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":193851,"byte_end":193859,"line_start":100,"line_end":100,"column_start":8,"column_end":16},"name":"split_at","qualname":"::iter::plumbing::Producer::split_at","value":"fn (self, index: usize) -> (Self, Self)","parent":{"krate":0,"index":1100},"children":[],"decl_id":null,"docs":" Split into two producers; one produces items `0..index`, the\n other `index..N`. Index must be less than or equal to `N`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1107},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":194126,"byte_end":194135,"line_start":106,"line_end":106,"column_start":8,"column_end":17},"name":"fold_with","qualname":"::iter::plumbing::Producer::fold_with","value":"fn <F> (self, folder: F) -> F","parent":{"krate":0,"index":1100},"children":[],"decl_id":null,"docs":" Iterate the producer, feeding each element to `folder`, and\n stop when the folder is full (or all elements have been consumed).","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1109},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":195083,"byte_end":195091,"line_start":128,"line_end":128,"column_start":11,"column_end":19},"name":"Consumer","qualname":"::iter::plumbing::Consumer","value":"Consumer<Item>: Send + Sized","parent":null,"children":[{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1116}],"decl_id":null,"docs":" A consumer is effectively a [generalized \"fold\" operation][fold],\n and in fact each consumer will eventually be converted into a\n [`Folder`]. What makes a consumer special is that, like a\n [`Producer`], it can be **split** into multiple consumers using\n the `split_at` method. When a consumer is split, it produces two\n consumers, as well as a **reducer**. The two consumers can be fed\n items independently, and when they are done the reducer is used to\n combine their two results into one. See [the `plumbing`\n README][r] for further details.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1111},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":195192,"byte_end":195198,"line_start":130,"line_end":130,"column_start":10,"column_end":16},"name":"Folder","qualname":"::iter::plumbing::Consumer::Folder","value":"type Folder: Folder<Item, Result = Self::Result>;","parent":{"krate":0,"index":1109},"children":[],"decl_id":null,"docs":" The type of folder that this consumer can be converted into.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1112},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":195319,"byte_end":195326,"line_start":133,"line_end":133,"column_start":10,"column_end":17},"name":"Reducer","qualname":"::iter::plumbing::Consumer::Reducer","value":"type Reducer: Reducer<Self::Result>;","parent":{"krate":0,"index":1109},"children":[],"decl_id":null,"docs":" The type of reducer that is produced if this consumer is split.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1113},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":195432,"byte_end":195438,"line_start":136,"line_end":136,"column_start":10,"column_end":16},"name":"Result","qualname":"::iter::plumbing::Consumer::Result","value":"type Result: Send;","parent":{"krate":0,"index":1109},"children":[],"decl_id":null,"docs":" The type of result that this consumer will ultimately produce.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1114},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":195674,"byte_end":195682,"line_start":142,"line_end":142,"column_start":8,"column_end":16},"name":"split_at","qualname":"::iter::plumbing::Consumer::split_at","value":"fn (self, index: usize) -> (Self, Self, Self::Reducer)","parent":{"krate":0,"index":1109},"children":[],"decl_id":null,"docs":" Divide the consumer into two consumers, one processing items\n `0..index` and one processing items from `index..`. Also\n produces a reducer that can be used to reduce the results at\n the end.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1115},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":195868,"byte_end":195879,"line_start":146,"line_end":146,"column_start":8,"column_end":19},"name":"into_folder","qualname":"::iter::plumbing::Consumer::into_folder","value":"fn (self) -> Self::Folder","parent":{"krate":0,"index":1109},"children":[],"decl_id":null,"docs":" Convert the consumer into a folder that can consume items\n sequentially, eventually producing a final result.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1116},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":196038,"byte_end":196042,"line_start":150,"line_end":150,"column_start":8,"column_end":12},"name":"full","qualname":"::iter::plumbing::Consumer::full","value":"fn (&self) -> bool","parent":{"krate":0,"index":1109},"children":[],"decl_id":null,"docs":" Hint whether this `Consumer` would like to stop processing\n further items, e.g. if a search has been completed.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1117},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":196405,"byte_end":196411,"line_start":159,"line_end":159,"column_start":11,"column_end":17},"name":"Folder","qualname":"::iter::plumbing::Folder","value":"Folder<Item>: Sized","parent":null,"children":[{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1123},{"krate":0,"index":1124}],"decl_id":null,"docs":" The `Folder` trait encapsulates [the standard fold\n operation][fold].  It can be fed many items using the `consume`\n method. At the end, once all items have been consumed, it can then\n be converted (using `complete`) into a final value.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1119},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":196511,"byte_end":196517,"line_start":161,"line_end":161,"column_start":10,"column_end":16},"name":"Result","qualname":"::iter::plumbing::Folder::Result","value":"type Result;","parent":{"krate":0,"index":1117},"children":[],"decl_id":null,"docs":" The type of result that will ultimately be produced by the folder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":196586,"byte_end":196593,"line_start":164,"line_end":164,"column_start":8,"column_end":15},"name":"consume","qualname":"::iter::plumbing::Folder::consume","value":"fn (self, item: Item) -> Self","parent":{"krate":0,"index":1117},"children":[],"decl_id":null,"docs":" Consume next item and return new sequential state.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1121},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":197022,"byte_end":197034,"line_start":174,"line_end":174,"column_start":8,"column_end":20},"name":"consume_iter","qualname":"::iter::plumbing::Folder::consume_iter","value":"fn <I> (mut self, iter: I) -> Self","parent":{"krate":0,"index":1117},"children":[],"decl_id":null,"docs":" Consume items from the iterator until full, and return new sequential state.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1123},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":197342,"byte_end":197350,"line_start":188,"line_end":188,"column_start":8,"column_end":16},"name":"complete","qualname":"::iter::plumbing::Folder::complete","value":"fn (self) -> Self::Result","parent":{"krate":0,"index":1117},"children":[],"decl_id":null,"docs":" Finish consuming items, produce final result.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1124},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":197507,"byte_end":197511,"line_start":192,"line_end":192,"column_start":8,"column_end":12},"name":"full","qualname":"::iter::plumbing::Folder::full","value":"fn (&self) -> bool","parent":{"krate":0,"index":1117},"children":[],"decl_id":null,"docs":" Hint whether this `Folder` would like to stop processing\n further items, e.g. if a search has been completed.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1125},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":197941,"byte_end":197948,"line_start":202,"line_end":202,"column_start":11,"column_end":18},"name":"Reducer","qualname":"::iter::plumbing::Reducer","value":"Reducer<Result>","parent":null,"children":[{"krate":0,"index":1127}],"decl_id":null,"docs":" The reducer is the final step of a `Consumer` -- after a consumer\n has been split into two parts, and each of those parts has been\n fully processed, we are left with two results. The reducer is then\n used to combine those two results into one. See [the `plumbing`\n README][r] for further details.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":198049,"byte_end":198055,"line_start":205,"line_end":205,"column_start":8,"column_end":14},"name":"reduce","qualname":"::iter::plumbing::Reducer::reduce","value":"fn (self, left: Result, right: Result) -> Result","parent":{"krate":0,"index":1125},"children":[],"decl_id":null,"docs":" Reduce two final results into one; this is executed after a\n split.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1128},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":198417,"byte_end":198434,"line_start":213,"line_end":213,"column_start":11,"column_end":28},"name":"UnindexedConsumer","qualname":"::iter::plumbing::UnindexedConsumer","value":"UnindexedConsumer<I>: Consumer<I>","parent":null,"children":[{"krate":0,"index":1130},{"krate":0,"index":1131}],"decl_id":null,"docs":" A stateless consumer can be freely copied. These consumers can be\n used like regular consumers, but they also support a\n `split_off_left` method that does not take an index to split, but\n simply splits at some arbitrary point (`for_each`, for example,\n produces an unindexed consumer).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1130},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":198910,"byte_end":198924,"line_start":221,"line_end":221,"column_start":8,"column_end":22},"name":"split_off_left","qualname":"::iter::plumbing::UnindexedConsumer::split_off_left","value":"fn (&self) -> Self","parent":{"krate":0,"index":1128},"children":[],"decl_id":null,"docs":" Splits off a \"left\" consumer and returns it. The `self`\n consumer should then be used to consume the \"right\" portion of\n the data. (The ordering matters for methods like find_first --\n values produced by the returned value are given precedence\n over values produced by `self`.) Once the left and right\n halves have been fully consumed, you should reduce the results\n with the result of `to_reducer`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1131},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":199046,"byte_end":199056,"line_start":225,"line_end":225,"column_start":8,"column_end":18},"name":"to_reducer","qualname":"::iter::plumbing::UnindexedConsumer::to_reducer","value":"fn (&self) -> Self::Reducer","parent":{"krate":0,"index":1128},"children":[],"decl_id":null,"docs":" Creates a reducer that can be used to combine the results from\n a split consumer.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1132},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":199533,"byte_end":199550,"line_start":236,"line_end":236,"column_start":11,"column_end":28},"name":"UnindexedProducer","qualname":"::iter::plumbing::UnindexedProducer","value":"UnindexedProducer: Send + Sized","parent":null,"children":[{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1135}],"decl_id":null,"docs":" A variant on `Producer` which does not know its exact length or\n cannot represent it in a `usize`. These producers act like\n ordinary producers except that they cannot be told to split at a\n particular point. Instead, you just ask them to split 'somewhere'.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1133},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":199628,"byte_end":199632,"line_start":238,"line_end":238,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::plumbing::UnindexedProducer::Item","value":"type Item;","parent":{"krate":0,"index":1132},"children":[],"decl_id":null,"docs":" The type of item returned by this producer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1134},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":199721,"byte_end":199726,"line_start":241,"line_end":241,"column_start":8,"column_end":13},"name":"split","qualname":"::iter::plumbing::UnindexedProducer::split","value":"fn (self) -> (Self, Option<Self>)","parent":{"krate":0,"index":1132},"children":[],"decl_id":null,"docs":" Split midway into a new producer if possible, otherwise return `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1135},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":199909,"byte_end":199918,"line_start":245,"line_end":245,"column_start":8,"column_end":17},"name":"fold_with","qualname":"::iter::plumbing::UnindexedProducer::fold_with","value":"fn <F> (self, folder: F) -> F","parent":{"krate":0,"index":1132},"children":[],"decl_id":null,"docs":" Iterate the producer, feeding each element to `folder`, and\n stop when the folder is full (or all elements have been consumed).\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1143},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":203727,"byte_end":203733,"line_start":351,"line_end":351,"column_start":8,"column_end":14},"name":"bridge","qualname":"::iter::plumbing::bridge","value":"fn <I, C> (par_iter: I, consumer: C) -> C::Result","parent":null,"children":[],"decl_id":null,"docs":" This helper function is used to \"connect\" a parallel iterator to a\n consumer. It will convert the `par_iter` into a producer P and\n then pull items from P and feed them to `consumer`, splitting and\n creating parallel threads as needed.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1156},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":204979,"byte_end":205003,"line_start":391,"line_end":391,"column_start":8,"column_end":32},"name":"bridge_producer_consumer","qualname":"::iter::plumbing::bridge_producer_consumer","value":"fn <P, C> (len: usize, producer: P, consumer: C) -> C::Result","parent":null,"children":[],"decl_id":null,"docs":" This helper function is used to \"connect\" a producer and a\n consumer. You may prefer to call [`bridge`], which wraps this\n function. This function will draw items from `producer` and feed\n them to `consumer`, splitting and creating parallel tasks when\n needed.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1164},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":206779,"byte_end":206795,"line_start":446,"line_end":446,"column_start":8,"column_end":24},"name":"bridge_unindexed","qualname":"::iter::plumbing::bridge_unindexed","value":"fn <P, C> (producer: P, consumer: C) -> C::Result","parent":null,"children":[],"decl_id":null,"docs":" A variant of [`bridge_producer_consumer`] where the producer is an unindexed producer.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5295},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":209076,"byte_end":209083,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"TryFold","qualname":"::iter::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":5300},{"krate":0,"index":5301},{"krate":0,"index":5302},{"krate":0,"index":5303}],"decl_id":null,"docs":" `TryFold` is an iterator that applies a function over an iterator producing a single value.\n This struct is created by the [`try_fold()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":208974,"byte_end":209047,"line_start":30,"line_end":30,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5310},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":213047,"byte_end":213058,"line_start":188,"line_end":188,"column_start":12,"column_end":23},"name":"TryFoldWith","qualname":"::iter::try_fold::TryFoldWith","value":"TryFoldWith {  }","parent":null,"children":[{"krate":0,"index":5314},{"krate":0,"index":5315},{"krate":0,"index":5316}],"decl_id":null,"docs":" `TryFoldWith` is an iterator that applies a function over an iterator producing a single value.\n This struct is created by the [`try_fold_with()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":212945,"byte_end":213018,"line_start":186,"line_end":186,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5322},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\skip.rs","byte_start":218308,"byte_end":218312,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"Skip","qualname":"::iter::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":5324},{"krate":0,"index":5325}],"decl_id":null,"docs":" `Skip` is an iterator that skips over the first `n` elements.\n This struct is created by the [`skip()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\skip.rs","byte_start":218199,"byte_end":218272,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":1530},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":230174,"byte_end":230179,"line_start":106,"line_end":106,"column_start":8,"column_end":13},"name":"split","qualname":"::iter::splitter::split","value":"fn <D, S> (data: D, splitter: S) -> Split<D, S>","parent":null,"children":[],"decl_id":null,"docs":" The `split` function takes arbitrary data and a closure that knows how to\n split it, and turns this into a `ParallelIterator`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5332},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":230516,"byte_end":230521,"line_start":119,"line_end":119,"column_start":12,"column_end":17},"name":"Split","qualname":"::iter::splitter::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":5335},{"krate":0,"index":5336}],"decl_id":null,"docs":" `Split` is a parallel iterator using arbitrary data and a splitting function.\n This struct is created by the [`split()`] function.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5341},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\take.rs","byte_start":232199,"byte_end":232203,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Take","qualname":"::iter::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":5343},{"krate":0,"index":5344}],"decl_id":null,"docs":" `Take` is an iterator that iterates over the first `n` elements.\n This struct is created by the [`take()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\take.rs","byte_start":232090,"byte_end":232163,"line_start":10,"line_end":10,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5351},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":234227,"byte_end":234230,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"Map","qualname":"::iter::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":5354},{"krate":0,"index":5355}],"decl_id":null,"docs":" `Map` is an iterator that transforms the elements of an underlying iterator.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":234125,"byte_end":234198,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5360},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":240216,"byte_end":240223,"line_start":14,"line_end":14,"column_start":12,"column_end":19},"name":"MapWith","qualname":"::iter::map_with::MapWith","value":"MapWith {  }","parent":null,"children":[{"krate":0,"index":5364},{"krate":0,"index":5365},{"krate":0,"index":5366}],"decl_id":null,"docs":" `MapWith` is an iterator that transforms the elements of an underlying iterator.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":240114,"byte_end":240187,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5372},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":248166,"byte_end":248173,"line_start":341,"line_end":341,"column_start":12,"column_end":19},"name":"MapInit","qualname":"::iter::map_with::MapInit","value":"MapInit {  }","parent":null,"children":[{"krate":0,"index":5376},{"krate":0,"index":5377},{"krate":0,"index":5378}],"decl_id":null,"docs":" `MapInit` is an iterator that transforms the elements of an underlying iterator.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":248064,"byte_end":248137,"line_start":339,"line_end":339,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5384},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip.rs","byte_start":254366,"byte_end":254369,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"Zip","qualname":"::iter::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":5387},{"krate":0,"index":5388}],"decl_id":null,"docs":" `Zip` is an iterator that zips up `a` and `b` into a single iterator\n of pairs. This struct is created by the [`zip()`] method on\n [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip.rs","byte_start":254257,"byte_end":254330,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5397},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip_eq.rs","byte_start":258355,"byte_end":258360,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"ZipEq","qualname":"::iter::zip_eq::ZipEq","value":"ZipEq {  }","parent":null,"children":[{"krate":0,"index":5400}],"decl_id":null,"docs":" An [`IndexedParallelIterator`] that iterates over two parallel iterators of equal\n length simultaneously.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip_eq.rs","byte_start":258246,"byte_end":258319,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5409},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":260107,"byte_end":260117,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"Interleave","qualname":"::iter::interleave::Interleave","value":"Interleave {  }","parent":null,"children":[{"krate":0,"index":5412},{"krate":0,"index":5413}],"decl_id":null,"docs":" `Interleave` is an iterator that interleaves elements of iterators\n `i` and `j` in one continuous iterator. This struct is created by\n the [`interleave()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":259998,"byte_end":260071,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5422},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave_shortest.rs","byte_start":269073,"byte_end":269091,"line_start":15,"line_end":15,"column_start":12,"column_end":30},"name":"InterleaveShortest","qualname":"::iter::interleave_shortest::InterleaveShortest","value":"InterleaveShortest {  }","parent":null,"children":[{"krate":0,"index":5425}],"decl_id":null,"docs":" `InterleaveShortest` is an iterator that works similarly to\n `Interleave`, but this version stops returning elements once one\n of the iterators run out.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave_shortest.rs","byte_start":268964,"byte_end":269037,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5434},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":271309,"byte_end":271320,"line_start":14,"line_end":14,"column_start":12,"column_end":23},"name":"Intersperse","qualname":"::iter::intersperse::Intersperse","value":"Intersperse {  }","parent":null,"children":[{"krate":0,"index":5436},{"krate":0,"index":5437}],"decl_id":null,"docs":" `Intersperse` is an iterator that inserts a particular item between each\n item of the adapted iterator.  This struct is created by the\n [`intersperse()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":271200,"byte_end":271273,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5444},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":281538,"byte_end":281544,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"Update","qualname":"::iter::update::Update","value":"Update {  }","parent":null,"children":[{"krate":0,"index":5447},{"krate":0,"index":5448}],"decl_id":null,"docs":" `Update` is an iterator that mutates the elements of an\n underlying iterator before they are yielded.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":281436,"byte_end":281509,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5466},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\rev.rs","byte_start":290452,"byte_end":290455,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"Rev","qualname":"::iter::rev::Rev","value":"Rev {  }","parent":null,"children":[{"krate":0,"index":5468}],"decl_id":null,"docs":" `Rev` is an iterator that produces elements in reverse order. This struct\n is created by the [`rev()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\rev.rs","byte_start":290343,"byte_end":290416,"line_start":10,"line_end":10,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5475},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":293281,"byte_end":293287,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"MinLen","qualname":"::iter::len::MinLen","value":"MinLen {  }","parent":null,"children":[{"krate":0,"index":5477},{"krate":0,"index":5478}],"decl_id":null,"docs":" `MinLen` is an iterator that imposes a minimum length on iterator splits.\n This struct is created by the [`min_len()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":293172,"byte_end":293245,"line_start":10,"line_end":10,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5485},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":296365,"byte_end":296371,"line_start":146,"line_end":146,"column_start":12,"column_end":18},"name":"MaxLen","qualname":"::iter::len::MaxLen","value":"MaxLen {  }","parent":null,"children":[{"krate":0,"index":5487},{"krate":0,"index":5488}],"decl_id":null,"docs":" `MaxLen` is an iterator that imposes a maximum length on iterator splits.\n This struct is created by the [`max_len()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":296256,"byte_end":296329,"line_start":144,"line_end":144,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5495},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":299479,"byte_end":299485,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Cloned","qualname":"::iter::cloned::Cloned","value":"Cloned {  }","parent":null,"children":[{"krate":0,"index":5497}],"decl_id":null,"docs":" `Cloned` is an iterator that clones the elements of an underlying iterator.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":299370,"byte_end":299443,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5504},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":308756,"byte_end":308763,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"name":"Inspect","qualname":"::iter::inspect::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":5507},{"krate":0,"index":5508}],"decl_id":null,"docs":" `Inspect` is an iterator that calls a function with a reference to each\n element before yielding it.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":308654,"byte_end":308727,"line_start":14,"line_end":14,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5513},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":314928,"byte_end":314937,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"PanicFuse","qualname":"::iter::panic_fuse::PanicFuse","value":"PanicFuse {  }","parent":null,"children":[{"krate":0,"index":5515}],"decl_id":null,"docs":" `PanicFuse` is an adaptor that wraps an iterator with a fuse in case\n of panics, to halt all threads as soon as possible.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":314819,"byte_end":314892,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5529},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\while_some.rs","byte_start":322504,"byte_end":322513,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"WhileSome","qualname":"::iter::while_some::WhileSome","value":"WhileSome {  }","parent":null,"children":[{"krate":0,"index":5531}],"decl_id":null,"docs":" `WhileSome` is an iterator that yields the `Some` elements of an iterator,\n halting as soon as any `None` is produced.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\while_some.rs","byte_start":322395,"byte_end":322468,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5538},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":335712,"byte_end":335718,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::iter::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":5540}],"decl_id":null,"docs":" Iterator adaptor for [the `repeat()` function](fn.repeat.html).\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3200},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":336270,"byte_end":336276,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"repeat","qualname":"::iter::repeat::repeat","value":"fn <T> (elt: T) -> Repeat<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a parallel iterator that endlessly repeats `elt` (by\n cloning it). Note that this iterator has \"infinite\" length, so\n typically you would want to use `zip` or `take` or some other\n means to shorten it, or consider using\n [the `repeatn()` function](fn.repeatn.html) instead.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3204},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":336673,"byte_end":336677,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"name":"take","qualname":"<Repeat<T>>::take","value":"fn (self, n: usize) -> RepeatN<T>","parent":null,"children":[],"decl_id":null,"docs":" Take only `n` repeats of the element, similar to the general\n [`take()`](trait.IndexedParallelIterator.html#method.take).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3205},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":336937,"byte_end":336940,"line_start":46,"line_end":46,"column_start":12,"column_end":15},"name":"zip","qualname":"<Repeat<T>>::zip","value":"fn <Z> (self, zip_op: Z) -> Zip<RepeatN<T>, Z::Iter>","parent":null,"children":[],"decl_id":null,"docs":" Iterate tuples repeating the element with items from another\n iterator, similar to the general\n [`zip()`](trait.IndexedParallelIterator.html#method.zip).\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5547},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":338209,"byte_end":338216,"line_start":103,"line_end":103,"column_start":12,"column_end":19},"name":"RepeatN","qualname":"::iter::repeat::RepeatN","value":"RepeatN {  }","parent":null,"children":[{"krate":0,"index":5549},{"krate":0,"index":5550}],"decl_id":null,"docs":" Iterator adaptor for [the `repeatn()` function](fn.repeatn.html).\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3221},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":338581,"byte_end":338588,"line_start":119,"line_end":119,"column_start":8,"column_end":15},"name":"repeatn","qualname":"::iter::repeat::repeatn","value":"fn <T> (elt: T, n: usize) -> RepeatN<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a parallel iterator that produces `n` repeats of `elt`\n (by cloning it).","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3266},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":341425,"byte_end":341429,"line_start":9,"line_end":9,"column_start":10,"column_end":14},"name":"Left","qualname":"::iter::unzip::UnzipOp::Left","value":"type Left: Send;","parent":{"krate":0,"index":3264},"children":[],"decl_id":null,"docs":" The type of item expected by the left consumer.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3267},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":341504,"byte_end":341509,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Right","qualname":"::iter::unzip::UnzipOp::Right","value":"type Right: Send;","parent":{"krate":0,"index":3264},"children":[],"decl_id":null,"docs":" The type of item expected by the right consumer.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3469},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":353671,"byte_end":353676,"line_start":25,"line_end":25,"column_start":8,"column_end":13},"name":"empty","qualname":"::iter::empty::empty","value":"fn <T> () -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a parallel iterator that produces nothing.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3471},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":353829,"byte_end":353834,"line_start":32,"line_end":32,"column_start":12,"column_end":17},"name":"Empty","qualname":"::iter::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":3473}],"decl_id":null,"docs":" Iterator adaptor for [the `empty()` function](fn.empty.html).\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3511},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\once.rs","byte_start":356002,"byte_end":356006,"line_start":24,"line_end":24,"column_start":8,"column_end":12},"name":"once","qualname":"::iter::once::once","value":"fn <T> (item: T) -> Once<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a parallel iterator that produces an element exactly once.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5557},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\once.rs","byte_start":356158,"byte_end":356162,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Once","qualname":"::iter::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":5559}],"decl_id":null,"docs":" Iterator adaptor for [the `once()` function](fn.once.html).\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3529},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":28783,"byte_end":28803,"line_start":184,"line_end":184,"column_start":11,"column_end":31},"name":"IntoParallelIterator","qualname":"::iter::IntoParallelIterator","value":"IntoParallelIterator","parent":null,"children":[{"krate":0,"index":3530},{"krate":0,"index":3531},{"krate":0,"index":3532}],"decl_id":null,"docs":" `IntoParallelIterator` implements the conversion to a [`ParallelIterator`].","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3530},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":28872,"byte_end":28876,"line_start":186,"line_end":186,"column_start":10,"column_end":14},"name":"Iter","qualname":"::iter::IntoParallelIterator::Iter","value":"type Iter: ParallelIterator<Item = Self::Item>;","parent":{"krate":0,"index":3529},"children":[],"decl_id":null,"docs":" The parallel iterator type that will be created.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3531},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":28991,"byte_end":28995,"line_start":189,"line_end":189,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::IntoParallelIterator::Item","value":"type Item: Send;","parent":{"krate":0,"index":3529},"children":[],"decl_id":null,"docs":" The type of item that the parallel iterator will produce.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3532},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":29646,"byte_end":29659,"line_start":213,"line_end":213,"column_start":8,"column_end":21},"name":"into_par_iter","qualname":"::iter::IntoParallelIterator::into_par_iter","value":"fn (self) -> Self::Iter","parent":{"krate":0,"index":3529},"children":[],"decl_id":null,"docs":" Converts `self` into a parallel iterator.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3533},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":30248,"byte_end":30271,"line_start":229,"line_end":229,"column_start":11,"column_end":34},"name":"IntoParallelRefIterator","qualname":"::iter::IntoParallelRefIterator","value":"IntoParallelRefIterator<'data>","parent":null,"children":[{"krate":0,"index":3535},{"krate":0,"index":3536},{"krate":0,"index":3537}],"decl_id":null,"docs":" `IntoParallelRefIterator` implements the conversion to a\n [`ParallelIterator`], providing shared references to the data.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3535},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":30355,"byte_end":30359,"line_start":231,"line_end":231,"column_start":10,"column_end":14},"name":"Iter","qualname":"::iter::IntoParallelRefIterator::Iter","value":"type Iter: ParallelIterator<Item = Self::Item>;","parent":{"krate":0,"index":3533},"children":[],"decl_id":null,"docs":" The type of the parallel iterator that will be returned.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3536},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":30535,"byte_end":30539,"line_start":235,"line_end":235,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::IntoParallelRefIterator::Item","value":"type Item: Send + 'data;","parent":{"krate":0,"index":3533},"children":[],"decl_id":null,"docs":" The type of item that the parallel iterator will produce.\n This will typically be an `&'data T` reference type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3537},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":31029,"byte_end":31037,"line_start":252,"line_end":252,"column_start":8,"column_end":16},"name":"par_iter","qualname":"::iter::IntoParallelRefIterator::par_iter","value":"fn (&'data self) -> Self::Iter","parent":{"krate":0,"index":3533},"children":[],"decl_id":null,"docs":" Converts `self` into a parallel iterator.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3544},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":31957,"byte_end":31983,"line_start":280,"line_end":280,"column_start":11,"column_end":37},"name":"IntoParallelRefMutIterator","qualname":"::iter::IntoParallelRefMutIterator","value":"IntoParallelRefMutIterator<'data>","parent":null,"children":[{"krate":0,"index":3546},{"krate":0,"index":3547},{"krate":0,"index":3548}],"decl_id":null,"docs":" `IntoParallelRefMutIterator` implements the conversion to a\n [`ParallelIterator`], providing mutable references to the data.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3546},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":32053,"byte_end":32057,"line_start":282,"line_end":282,"column_start":10,"column_end":14},"name":"Iter","qualname":"::iter::IntoParallelRefMutIterator::Iter","value":"type Iter: ParallelIterator<Item = Self::Item>;","parent":{"krate":0,"index":3544},"children":[],"decl_id":null,"docs":" The type of iterator that will be created.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3547},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":32209,"byte_end":32213,"line_start":286,"line_end":286,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::IntoParallelRefMutIterator::Item","value":"type Item: Send + 'data;","parent":{"krate":0,"index":3544},"children":[],"decl_id":null,"docs":" The type of item that will be produced; this is typically an\n `&'data mut T` reference.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3548},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":32527,"byte_end":32539,"line_start":299,"line_end":299,"column_start":8,"column_end":20},"name":"par_iter_mut","qualname":"::iter::IntoParallelRefMutIterator::par_iter_mut","value":"fn (&'data mut self) -> Self::Iter","parent":{"krate":0,"index":3544},"children":[],"decl_id":null,"docs":" Creates the parallel iterator from `self`.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3555},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":33516,"byte_end":33532,"line_start":328,"line_end":328,"column_start":11,"column_end":27},"name":"ParallelIterator","qualname":"::iter::ParallelIterator","value":"ParallelIterator: Sized + Send","parent":null,"children":[{"krate":0,"index":3556},{"krate":0,"index":3557},{"krate":0,"index":3559},{"krate":0,"index":3563},{"krate":0,"index":3568},{"krate":0,"index":3573},{"krate":0,"index":3579},{"krate":0,"index":3586},{"krate":0,"index":3588},{"krate":0,"index":3591},{"krate":0,"index":3595},{"krate":0,"index":3600},{"krate":0,"index":3603},{"krate":0,"index":3605},{"krate":0,"index":3607},{"krate":0,"index":3609},{"krate":0,"index":3612},{"krate":0,"index":3615},{"krate":0,"index":3616},{"krate":0,"index":3619},{"krate":0,"index":3625},{"krate":0,"index":3629},{"krate":0,"index":3632},{"krate":0,"index":3636},{"krate":0,"index":3639},{"krate":0,"index":3644},{"krate":0,"index":3648},{"krate":0,"index":3650},{"krate":0,"index":3652},{"krate":0,"index":3653},{"krate":0,"index":3656},{"krate":0,"index":3661},{"krate":0,"index":3662},{"krate":0,"index":3665},{"krate":0,"index":3670},{"krate":0,"index":3672},{"krate":0,"index":3674},{"krate":0,"index":3676},{"krate":0,"index":3678},{"krate":0,"index":3682},{"krate":0,"index":3686},{"krate":0,"index":3690},{"krate":0,"index":3692},{"krate":0,"index":3695},{"krate":0,"index":3698},{"krate":0,"index":3700},{"krate":0,"index":3701},{"krate":0,"index":3703},{"krate":0,"index":3708},{"krate":0,"index":3712},{"krate":0,"index":3718},{"krate":0,"index":3719},{"krate":0,"index":3721}],"decl_id":null,"docs":" Parallel version of the standard iterator trait.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3556},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":33798,"byte_end":33802,"line_start":334,"line_end":334,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::ParallelIterator::Item","value":"type Item: Send;","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" The type of item that this parallel iterator produces.\n For example, if you use the [`for_each`] method, this is the type of\n item that your closure will be invoked with.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3557},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":34058,"byte_end":34066,"line_start":345,"line_end":345,"column_start":8,"column_end":16},"name":"for_each","qualname":"::iter::ParallelIterator::for_each","value":"fn <OP> (self, op: OP) -> ()","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Executes `OP` on each item produced by the iterator, in parallel.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3559},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":34901,"byte_end":34914,"line_start":375,"line_end":375,"column_start":8,"column_end":21},"name":"for_each_with","qualname":"::iter::ParallelIterator::for_each_with","value":"fn <OP, T> (self, init: T, op: OP) -> ()","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Executes `OP` on the given `init` value with each item produced by\n the iterator, in parallel.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3563},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":35953,"byte_end":35966,"line_start":412,"line_end":412,"column_start":8,"column_end":21},"name":"for_each_init","qualname":"::iter::ParallelIterator::for_each_init","value":"fn <OP, INIT, T> (self, init: INIT, op: OP) -> ()","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Executes `OP` on a value returned by `init` with each item produced by\n the iterator, in parallel.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3568},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":37077,"byte_end":37089,"line_start":440,"line_end":440,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::iter::ParallelIterator::try_for_each","value":"fn <OP, R> (self, op: OP) -> R","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Executes a fallible `OP` on each item produced by the iterator, in parallel.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3573},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":38121,"byte_end":38138,"line_start":475,"line_end":475,"column_start":8,"column_end":25},"name":"try_for_each_with","qualname":"::iter::ParallelIterator::try_for_each_with","value":"fn <OP, T, R> (self, init: T, op: OP) -> R","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Executes a fallible `OP` on the given `init` value with each item\n produced by the iterator, in parallel.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3579},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":39361,"byte_end":39378,"line_start":517,"line_end":517,"column_start":8,"column_end":25},"name":"try_for_each_init","qualname":"::iter::ParallelIterator::try_for_each_init","value":"fn <OP, INIT, T, R> (self, init: INIT, op: OP) -> R","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Executes a fallible `OP` on a value returned by `init` with each item\n produced by the iterator, in parallel.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3586},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":39924,"byte_end":39929,"line_start":538,"line_end":538,"column_start":8,"column_end":13},"name":"count","qualname":"::iter::ParallelIterator::count","value":"fn (self) -> usize","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Counts the number of items in this parallel iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3588},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":40380,"byte_end":40383,"line_start":556,"line_end":556,"column_start":8,"column_end":11},"name":"map","qualname":"::iter::ParallelIterator::map","value":"fn <F, R> (self, map_op: F) -> Map<Self, F>","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Applies `map_op` to each item of this iterator, producing a new\n iterator with the results.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3591},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":41726,"byte_end":41734,"line_start":593,"line_end":593,"column_start":8,"column_end":16},"name":"map_with","qualname":"::iter::ParallelIterator::map_with","value":"fn <F, T, R> (self, init: T, map_op: F) -> MapWith<Self, T, F>","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Applies `map_op` to the given `init` value with each item of this\n iterator, producing a new iterator with the results.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3595},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":42980,"byte_end":42988,"line_start":633,"line_end":633,"column_start":8,"column_end":16},"name":"map_init","qualname":"::iter::ParallelIterator::map_init","value":"fn <F, INIT, T, R> (self, init: INIT, map_op: F) -> MapInit<Self, INIT, F>","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Applies `map_op` to a value returned by `init` with each item of this\n iterator, producing a new iterator with the results.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3600},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":43809,"byte_end":43815,"line_start":660,"line_end":660,"column_start":8,"column_end":14},"name":"cloned","qualname":"::iter::ParallelIterator::cloned","value":"fn <'a, T> (self) -> Cloned<Self>","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Creates an iterator which clones all of its elements.  This may be\n useful when you have an iterator over `&T`, but you need `T`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3603},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":45010,"byte_end":45017,"line_start":697,"line_end":697,"column_start":8,"column_end":15},"name":"inspect","qualname":"::iter::ParallelIterator::inspect","value":"fn <OP> (self, inspect_op: OP) -> Inspect<Self, OP>","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Applies `inspect_op` to a reference to each item of this iterator,\n producing a new iterator passing through the original items.  This is\n often useful for debugging to see what's happening in iterator stages.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3605},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":45526,"byte_end":45532,"line_start":717,"line_end":717,"column_start":8,"column_end":14},"name":"update","qualname":"::iter::ParallelIterator::update","value":"fn <F> (self, update_op: F) -> Update<Self, F>","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Mutates each item of this iterator before yielding it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3607},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":46127,"byte_end":46133,"line_start":738,"line_end":738,"column_start":8,"column_end":14},"name":"filter","qualname":"::iter::ParallelIterator::filter","value":"fn <P> (self, filter_op: P) -> Filter<Self, P>","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Applies `filter_op` to each item of this iterator, producing a new\n iterator with only the items that gave `true` results.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3609},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":46927,"byte_end":46937,"line_start":763,"line_end":763,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::iter::ParallelIterator::filter_map","value":"fn <P, R> (self, filter_op: P) -> FilterMap<Self, P>","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Applies `filter_op` to each item of this iterator to get an `Option`,\n producing a new iterator with only the items from `Some` results.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3612},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":47621,"byte_end":47629,"line_start":787,"line_end":787,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::iter::ParallelIterator::flat_map","value":"fn <F, PI> (self, map_op: F) -> FlatMap<Self, F>","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Applies `map_op` to each item of this iterator to get nested iterators,\n producing a new iterator that flattens these back into one.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3615},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":48163,"byte_end":48170,"line_start":807,"line_end":807,"column_start":8,"column_end":15},"name":"flatten","qualname":"::iter::ParallelIterator::flatten","value":"fn (self) -> Flatten<Self>","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" An adaptor that flattens iterable `Item`s into one large iterator","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3616},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":49855,"byte_end":49861,"line_start":844,"line_end":844,"column_start":8,"column_end":14},"name":"reduce","qualname":"::iter::ParallelIterator::reduce","value":"fn <OP, ID> (self, identity: ID, op: OP) -> Self::Item","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Reduces the items in the iterator into one item using `op`.\n The argument `identity` should be a closure that can produce\n \"identity\" value which may be inserted into the sequence as\n needed to create opportunities for parallel execution. So, for\n example, if you are doing a summation, then `identity()` ought\n to produce something that represents the zero for your type\n (but consider just calling `sum()` in that case).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3619},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":51202,"byte_end":51213,"line_start":878,"line_end":878,"column_start":8,"column_end":19},"name":"reduce_with","qualname":"::iter::ParallelIterator::reduce_with","value":"fn <OP> (self, op: OP) -> Option<Self::Item>","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Reduces the items in the iterator into one item using `op`.\n If the iterator is empty, `None` is returned; otherwise,\n `Some` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3625},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":53183,"byte_end":53193,"line_start":930,"line_end":930,"column_start":8,"column_end":18},"name":"try_reduce","qualname":"::iter::ParallelIterator::try_reduce","value":"fn <T, OP, ID> (self, identity: ID, op: OP) -> Self::Item","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Reduces the items in the iterator into one item using a fallible `op`.\n The `identity` argument is used the same way as in [`reduce()`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3629},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":54820,"byte_end":54835,"line_start":974,"line_end":974,"column_start":8,"column_end":23},"name":"try_reduce_with","qualname":"::iter::ParallelIterator::try_reduce_with","value":"fn <T, OP> (self, op: OP) -> Option<Self::Item>","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Reduces the items in the iterator into one item using a fallible `op`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3632},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":60613,"byte_end":60617,"line_start":1115,"line_end":1115,"column_start":8,"column_end":12},"name":"fold","qualname":"::iter::ParallelIterator::fold","value":"fn <T, ID, F> (self, identity: ID, fold_op: F) -> Fold<Self, ID, F>","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Parallel fold is similar to sequential fold except that the\n sequence of items may be subdivided before it is\n folded. Consider a list of numbers like `22 3 77 89 46`. If\n you used sequential fold to add them (`fold(0, |a,b| a+b)`,\n you would wind up first adding 0 + 22, then 22 + 3, then 25 +\n 77, and so forth. The **parallel fold** works similarly except\n that it first breaks up your list into sublists, and hence\n instead of yielding up a single sum at the end, it yields up\n multiple sums. The number of results is nondeterministic, as\n is the point where the breaks occur.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3636},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":61542,"byte_end":61551,"line_start":1143,"line_end":1143,"column_start":8,"column_end":17},"name":"fold_with","qualname":"::iter::ParallelIterator::fold_with","value":"fn <F, T> (self, init: T, fold_op: F) -> FoldWith<Self, T, F>","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Applies `fold_op` to the given `init` value with each item of this\n iterator, finally producing the value for further use.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3639},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":62683,"byte_end":62691,"line_start":1176,"line_end":1176,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::iter::ParallelIterator::try_fold","value":"fn <T, R, ID, F> (self, identity: ID, fold_op: F) -> TryFold<Self, R, ID, F>","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Perform a fallible parallel fold.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3644},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":63610,"byte_end":63623,"line_start":1203,"line_end":1203,"column_start":8,"column_end":21},"name":"try_fold_with","qualname":"::iter::ParallelIterator::try_fold_with","value":"fn <F, T, R> (self, init: T, fold_op: F) -> TryFoldWith<Self, R, F>","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Perform a fallible parallel fold with a cloneable `init` value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3648},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":64648,"byte_end":64651,"line_start":1236,"line_end":1236,"column_start":8,"column_end":11},"name":"sum","qualname":"::iter::ParallelIterator::sum","value":"fn <S> (self) -> S","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Sums up the items in the iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3650},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":65650,"byte_end":65657,"line_start":1269,"line_end":1269,"column_start":8,"column_end":15},"name":"product","qualname":"::iter::ParallelIterator::product","value":"fn <P> (self) -> P","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Multiplies all the items in the iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3652},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":66500,"byte_end":66503,"line_start":1299,"line_end":1299,"column_start":8,"column_end":11},"name":"min","qualname":"::iter::ParallelIterator::min","value":"fn (self) -> Option<Self::Item>","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Computes the minimum of all the items in the iterator. If the\n iterator is empty, `None` is returned; otherwise, `Some(min)`\n is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3653},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":67242,"byte_end":67248,"line_start":1323,"line_end":1323,"column_start":8,"column_end":14},"name":"min_by","qualname":"::iter::ParallelIterator::min_by","value":"fn <F> (self, f: F) -> Option<Self::Item>","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Computes the minimum of all the items in the iterator with respect to\n the given comparison function. If the iterator is empty, `None` is\n returned; otherwise, `Some(min)` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3656},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":68095,"byte_end":68105,"line_start":1350,"line_end":1350,"column_start":8,"column_end":18},"name":"min_by_key","qualname":"::iter::ParallelIterator::min_by_key","value":"fn <K, F> (self, f: F) -> Option<Self::Item>","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Computes the item that yields the minimum value for the given\n function. If the iterator is empty, `None` is returned;\n otherwise, `Some(item)` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3661},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":69056,"byte_end":69059,"line_start":1382,"line_end":1382,"column_start":8,"column_end":11},"name":"max","qualname":"::iter::ParallelIterator::max","value":"fn (self) -> Option<Self::Item>","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Computes the maximum of all the items in the iterator. If the\n iterator is empty, `None` is returned; otherwise, `Some(max)`\n is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3662},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":69812,"byte_end":69818,"line_start":1406,"line_end":1406,"column_start":8,"column_end":14},"name":"max_by","qualname":"::iter::ParallelIterator::max_by","value":"fn <F> (self, f: F) -> Option<Self::Item>","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Computes the maximum of all the items in the iterator with respect to\n the given comparison function. If the iterator is empty, `None` is\n returned; otherwise, `Some(min)` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3665},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":70666,"byte_end":70676,"line_start":1433,"line_end":1433,"column_start":8,"column_end":18},"name":"max_by_key","qualname":"::iter::ParallelIterator::max_by_key","value":"fn <K, F> (self, f: F) -> Option<Self::Item>","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Computes the item that yields the maximum value for the given\n function. If the iterator is empty, `None` is returned;\n otherwise, `Some(item)` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3670},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":71325,"byte_end":71330,"line_start":1458,"line_end":1458,"column_start":8,"column_end":13},"name":"chain","qualname":"::iter::ParallelIterator::chain","value":"fn <C> (self, chain: C) -> Chain<Self, C::Iter>","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Takes two iterators and creates a new iterator over both.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3672},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":72424,"byte_end":72432,"line_start":1488,"line_end":1488,"column_start":8,"column_end":16},"name":"find_any","qualname":"::iter::ParallelIterator::find_any","value":"fn <P> (self, predicate: P) -> Option<Self::Item>","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Searches for **some** item in the parallel iterator that\n matches the given predicate and returns it. This operation\n is similar to [`find` on sequential iterators][find] but\n the item returned may not be the **first** one in the parallel\n sequence which matches, since we search the entire sequence in parallel.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3674},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":73471,"byte_end":73481,"line_start":1518,"line_end":1518,"column_start":8,"column_end":18},"name":"find_first","qualname":"::iter::ParallelIterator::find_first","value":"fn <P> (self, predicate: P) -> Option<Self::Item>","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Searches for the sequentially **first** item in the parallel iterator\n that matches the given predicate and returns it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3676},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":74494,"byte_end":74503,"line_start":1547,"line_end":1547,"column_start":8,"column_end":17},"name":"find_last","qualname":"::iter::ParallelIterator::find_last","value":"fn <P> (self, predicate: P) -> Option<Self::Item>","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Searches for the sequentially **last** item in the parallel iterator\n that matches the given predicate and returns it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3678},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":75582,"byte_end":75594,"line_start":1577,"line_end":1577,"column_start":8,"column_end":20},"name":"find_map_any","qualname":"::iter::ParallelIterator::find_map_any","value":"fn <P, R> (self, predicate: P) -> Option<R>","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Applies the given predicate to the items in the parallel iterator\n and returns **any** non-None result of the map operation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3682},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":76727,"byte_end":76741,"line_start":1608,"line_end":1608,"column_start":8,"column_end":22},"name":"find_map_first","qualname":"::iter::ParallelIterator::find_map_first","value":"fn <P, R> (self, predicate: P) -> Option<R>","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Applies the given predicate to the items in the parallel iterator and\n returns the sequentially **first** non-None result of the map operation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3686},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":77871,"byte_end":77884,"line_start":1639,"line_end":1639,"column_start":8,"column_end":21},"name":"find_map_last","qualname":"::iter::ParallelIterator::find_map_last","value":"fn <P, R> (self, predicate: P) -> Option<R>","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Applies the given predicate to the items in the parallel iterator and\n returns the sequentially **last** non-None result of the map operation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3690},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":78244,"byte_end":78248,"line_start":1650,"line_end":1650,"column_start":8,"column_end":12},"name":"find","qualname":"::iter::ParallelIterator::find","value":"fn <P> (self, predicate: P) -> Option<Self::Item>","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note =\n                 \"parallel `find` does not search in order -- use `find_any`, \\\\\n                         `find_first`, or `find_last`\")","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":78096,"byte_end":78236,"line_start":1648,"line_end":1649,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3692},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":78953,"byte_end":78956,"line_start":1674,"line_end":1674,"column_start":8,"column_end":11},"name":"any","qualname":"::iter::ParallelIterator::any","value":"fn <P> (self, predicate: P) -> bool","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Searches for **some** item in the parallel iterator that\n matches the given predicate, and if so returns true.  Once\n a match is found, we'll attempt to stop process the rest\n of the items.  Proving that there's no match, returning false,\n does require visiting every item.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3695},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":79579,"byte_end":79582,"line_start":1696,"line_end":1696,"column_start":8,"column_end":11},"name":"all","qualname":"::iter::ParallelIterator::all","value":"fn <P> (self, predicate: P) -> bool","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Tests that every item in the parallel iterator matches the given\n predicate, and if so returns true.  If a counter-example is found,\n we'll attempt to stop processing more items, then return false.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3698},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":80479,"byte_end":80489,"line_start":1725,"line_end":1725,"column_start":8,"column_end":18},"name":"while_some","qualname":"::iter::ParallelIterator::while_some","value":"fn <T> (self) -> WhileSome<Self>","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Creates an iterator over the `Some` items of this iterator, halting\n as soon as any `None` is found.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3700},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":81800,"byte_end":81810,"line_start":1763,"line_end":1763,"column_start":8,"column_end":18},"name":"panic_fuse","qualname":"::iter::ParallelIterator::panic_fuse","value":"fn (self) -> PanicFuse<Self>","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Wraps an iterator with a fuse in case of panics, to halt all threads\n as soon as possible.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3701},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":82559,"byte_end":82566,"line_start":1786,"line_end":1786,"column_start":8,"column_end":15},"name":"collect","qualname":"::iter::ParallelIterator::collect","value":"fn <C> (self) -> C","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Create a fresh collection containing all the element produced\n by this parallel iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3703},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":83818,"byte_end":83823,"line_start":1827,"line_end":1827,"column_start":8,"column_end":13},"name":"unzip","qualname":"::iter::ParallelIterator::unzip","value":"fn <A, B, FromA, FromB> (self) -> (FromA, FromB)","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Unzips the items of a parallel iterator into a pair of arbitrary\n `ParallelExtend` containers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3708},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":84929,"byte_end":84938,"line_start":1857,"line_end":1857,"column_start":8,"column_end":17},"name":"partition","qualname":"::iter::ParallelIterator::partition","value":"fn <A, B, P> (self, predicate: P) -> (A, B)","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Partitions the items of a parallel iterator into a pair of arbitrary\n `ParallelExtend` containers.  Items for which the `predicate` returns\n true go into the first container, and the rest go into the second.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3712},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":86658,"byte_end":86671,"line_start":1909,"line_end":1909,"column_start":8,"column_end":21},"name":"partition_map","qualname":"::iter::ParallelIterator::partition_map","value":"fn <A, B, P, L, R> (self, predicate: P) -> (A, B)","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Partitions and maps the items of a parallel iterator into a pair of\n arbitrary `ParallelExtend` containers.  `Either::Left` items go into\n the first container, and `Either::Right` items go into the second.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3718},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":87304,"byte_end":87315,"line_start":1932,"line_end":1932,"column_start":8,"column_end":19},"name":"intersperse","qualname":"::iter::ParallelIterator::intersperse","value":"fn (self, element: Self::Item) -> Intersperse<Self>","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Intersperses clones of an element between items of this iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3719},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":87977,"byte_end":87992,"line_start":1951,"line_end":1951,"column_start":8,"column_end":23},"name":"drive_unindexed","qualname":"::iter::ParallelIterator::drive_unindexed","value":"fn <C> (self, consumer: C) -> C::Result","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Internal method used to define the behavior of this parallel\n iterator. You should not need to call this directly.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3721},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":88879,"byte_end":88886,"line_start":1969,"line_end":1969,"column_start":8,"column_end":15},"name":"opt_len","qualname":"::iter::ParallelIterator::opt_len","value":"fn (&self) -> Option<usize>","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" Internal method used to define the behavior of this parallel\n iterator. You should not need to call this directly.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3727},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":89329,"byte_end":89352,"line_start":1988,"line_end":1988,"column_start":11,"column_end":34},"name":"IndexedParallelIterator","qualname":"::iter::IndexedParallelIterator","value":"IndexedParallelIterator: ParallelIterator","parent":null,"children":[{"krate":0,"index":3728},{"krate":0,"index":3729},{"krate":0,"index":3732},{"krate":0,"index":3734},{"krate":0,"index":3736},{"krate":0,"index":3738},{"krate":0,"index":3740},{"krate":0,"index":3741},{"krate":0,"index":3745},{"krate":0,"index":3749},{"krate":0,"index":3752},{"krate":0,"index":3754},{"krate":0,"index":3756},{"krate":0,"index":3758},{"krate":0,"index":3760},{"krate":0,"index":3762},{"krate":0,"index":3763},{"krate":0,"index":3764},{"krate":0,"index":3765},{"krate":0,"index":3768},{"krate":0,"index":3771},{"krate":0,"index":3774},{"krate":0,"index":3776},{"krate":0,"index":3777},{"krate":0,"index":3778},{"krate":0,"index":3779},{"krate":0,"index":3780},{"krate":0,"index":3782}],"decl_id":null,"docs":" An iterator that supports \"random access\" to its data, meaning\n that you can split it at arbitrary indices and draw data from\n those points.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3728},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":89961,"byte_end":89977,"line_start":2007,"line_end":2007,"column_start":8,"column_end":24},"name":"collect_into_vec","qualname":"::iter::IndexedParallelIterator::collect_into_vec","value":"fn (self, target: &mut Vec<Self::Item>) -> ()","parent":{"krate":0,"index":3727},"children":[],"decl_id":null,"docs":" Collects the results of the iterator into the specified\n vector. The vector is always truncated before execution\n begins. If possible, reusing the vector across calls can lead\n to better performance since it reuses the same backing buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3729},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":90787,"byte_end":90802,"line_start":2032,"line_end":2032,"column_start":8,"column_end":23},"name":"unzip_into_vecs","qualname":"::iter::IndexedParallelIterator::unzip_into_vecs","value":"fn <A, B> (self, left: &mut Vec<A>, right: &mut Vec<B>) -> ()","parent":{"krate":0,"index":3727},"children":[],"decl_id":null,"docs":" Unzips the results of the iterator into the specified\n vectors. The vectors are always truncated before execution\n begins. If possible, reusing the vectors across calls can lead\n to better performance since they reuse the same backing buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3732},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":91613,"byte_end":91616,"line_start":2059,"line_end":2059,"column_start":8,"column_end":11},"name":"zip","qualname":"::iter::IndexedParallelIterator::zip","value":"fn <Z> (self, zip_op: Z) -> Zip<Self, Z::Iter>","parent":{"krate":0,"index":3727},"children":[],"decl_id":null,"docs":" Iterate over tuples `(A, B)`, where the items `A` are from\n this iterator and `B` are from the iterator given as argument.\n Like the `zip` method on ordinary iterators, if the two\n iterators are of unequal length, you only get the items they\n have in common.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3734},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":92390,"byte_end":92396,"line_start":2086,"line_end":2086,"column_start":8,"column_end":14},"name":"zip_eq","qualname":"::iter::IndexedParallelIterator::zip_eq","value":"fn <Z> (self, zip_op: Z) -> ZipEq<Self, Z::Iter>","parent":{"krate":0,"index":3727},"children":[],"decl_id":null,"docs":" The same as `Zip`, but requires that both iterators have the same length.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3736},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":93242,"byte_end":93252,"line_start":2110,"line_end":2110,"column_start":8,"column_end":18},"name":"interleave","qualname":"::iter::IndexedParallelIterator::interleave","value":"fn <I> (self, other: I) -> Interleave<Self, I::Iter>","parent":{"krate":0,"index":3727},"children":[],"decl_id":null,"docs":" Interleave elements of this iterator and the other given\n iterator. Alternately yields elements from this iterator and\n the given iterator, until both are exhausted. If one iterator\n is exhausted before the other, the last elements are provided\n from the other.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3738},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":93869,"byte_end":93888,"line_start":2129,"line_end":2129,"column_start":8,"column_end":27},"name":"interleave_shortest","qualname":"::iter::IndexedParallelIterator::interleave_shortest","value":"fn <I> (self, other: I) -> InterleaveShortest<Self, I::Iter>","parent":{"krate":0,"index":3727},"children":[],"decl_id":null,"docs":" Interleave elements of this iterator and the other given\n iterator, until one is exhausted.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3740},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":95068,"byte_end":95074,"line_start":2157,"line_end":2157,"column_start":8,"column_end":14},"name":"chunks","qualname":"::iter::IndexedParallelIterator::chunks","value":"fn (self, chunk_size: usize) -> Chunks<Self>","parent":{"krate":0,"index":3727},"children":[],"decl_id":null,"docs":" Split an iterator up into fixed-size chunks.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3741},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":95686,"byte_end":95689,"line_start":2176,"line_end":2176,"column_start":8,"column_end":11},"name":"cmp","qualname":"::iter::IndexedParallelIterator::cmp","value":"fn <I> (self, other: I) -> Ordering","parent":{"krate":0,"index":3727},"children":[],"decl_id":null,"docs":" Lexicographically compares the elements of this `ParallelIterator` with those of\n another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3745},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":96731,"byte_end":96742,"line_start":2206,"line_end":2206,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"::iter::IndexedParallelIterator::partial_cmp","value":"fn <I> (self, other: I) -> Option<Ordering>","parent":{"krate":0,"index":3727},"children":[],"decl_id":null,"docs":" Lexicographically compares the elements of this `ParallelIterator` with those of\n another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3749},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":97305,"byte_end":97307,"line_start":2222,"line_end":2222,"column_start":8,"column_end":10},"name":"eq","qualname":"::iter::IndexedParallelIterator::eq","value":"fn <I> (self, other: I) -> bool","parent":{"krate":0,"index":3727},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are equal to those of another\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3752},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":97701,"byte_end":97703,"line_start":2234,"line_end":2234,"column_start":8,"column_end":10},"name":"ne","qualname":"::iter::IndexedParallelIterator::ne","value":"fn <I> (self, other: I) -> bool","parent":{"krate":0,"index":3727},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are unequal to those of another\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3754},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":98020,"byte_end":98022,"line_start":2245,"line_end":2245,"column_start":8,"column_end":10},"name":"lt","qualname":"::iter::IndexedParallelIterator::lt","value":"fn <I> (self, other: I) -> bool","parent":{"krate":0,"index":3727},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are lexicographically less than those of another.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3756},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":98361,"byte_end":98363,"line_start":2256,"line_end":2256,"column_start":8,"column_end":10},"name":"le","qualname":"::iter::IndexedParallelIterator::le","value":"fn <I> (self, other: I) -> bool","parent":{"krate":0,"index":3727},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are less or equal to those of another.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3758},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":98771,"byte_end":98773,"line_start":2268,"line_end":2268,"column_start":8,"column_end":10},"name":"gt","qualname":"::iter::IndexedParallelIterator::gt","value":"fn <I> (self, other: I) -> bool","parent":{"krate":0,"index":3727},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are lexicographically greater than those of another.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3760},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":99115,"byte_end":99117,"line_start":2279,"line_end":2279,"column_start":8,"column_end":10},"name":"ge","qualname":"::iter::IndexedParallelIterator::ge","value":"fn <I> (self, other: I) -> bool","parent":{"krate":0,"index":3727},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are less or equal to those of another.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3762},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":99771,"byte_end":99780,"line_start":2304,"line_end":2304,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::iter::IndexedParallelIterator::enumerate","value":"fn (self) -> Enumerate<Self>","parent":{"krate":0,"index":3727},"children":[],"decl_id":null,"docs":" Yields an index along with each item.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3763},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":100183,"byte_end":100187,"line_start":2322,"line_end":2322,"column_start":8,"column_end":12},"name":"skip","qualname":"::iter::IndexedParallelIterator::skip","value":"fn (self, n: usize) -> Skip<Self>","parent":{"krate":0,"index":3727},"children":[],"decl_id":null,"docs":" Creates an iterator that skips the first `n` elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3764},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":100588,"byte_end":100592,"line_start":2340,"line_end":2340,"column_start":8,"column_end":12},"name":"take","qualname":"::iter::IndexedParallelIterator::take","value":"fn (self, n: usize) -> Take<Self>","parent":{"krate":0,"index":3727},"children":[],"decl_id":null,"docs":" Creates an iterator that yields the first `n` elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3765},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":101306,"byte_end":101318,"line_start":2362,"line_end":2362,"column_start":8,"column_end":20},"name":"position_any","qualname":"::iter::IndexedParallelIterator::position_any","value":"fn <P> (self, predicate: P) -> Option<usize>","parent":{"krate":0,"index":3727},"children":[],"decl_id":null,"docs":" Searches for **some** item in the parallel iterator that\n matches the given predicate, and returns its index.  Like\n `ParallelIterator::find_any`, the parallel search will not\n necessarily find the **first** match, and once a match is\n found we'll attempt to stop processing any more.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3768},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":102470,"byte_end":102484,"line_start":2394,"line_end":2394,"column_start":8,"column_end":22},"name":"position_first","qualname":"::iter::IndexedParallelIterator::position_first","value":"fn <P> (self, predicate: P) -> Option<usize>","parent":{"krate":0,"index":3727},"children":[],"decl_id":null,"docs":" Searches for the sequentially **first** item in the parallel iterator\n that matches the given predicate, and returns its index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3771},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":103602,"byte_end":103615,"line_start":2426,"line_end":2426,"column_start":8,"column_end":21},"name":"position_last","qualname":"::iter::IndexedParallelIterator::position_last","value":"fn <P> (self, predicate: P) -> Option<usize>","parent":{"krate":0,"index":3727},"children":[],"decl_id":null,"docs":" Searches for the sequentially **last** item in the parallel iterator\n that matches the given predicate, and returns its index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3774},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":104014,"byte_end":104022,"line_start":2439,"line_end":2439,"column_start":8,"column_end":16},"name":"position","qualname":"::iter::IndexedParallelIterator::position","value":"fn <P> (self, predicate: P) -> Option<usize>","parent":{"krate":0,"index":3727},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note =\n                 \"parallel `position` does not search in order -- use `position_any`, \\\\\n                `position_first`, or `position_last`\")","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":103845,"byte_end":104006,"line_start":2435,"line_end":2438,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":3776},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":104531,"byte_end":104534,"line_start":2461,"line_end":2461,"column_start":8,"column_end":11},"name":"rev","qualname":"::iter::IndexedParallelIterator::rev","value":"fn (self) -> Rev<Self>","parent":{"krate":0,"index":3727},"children":[],"decl_id":null,"docs":" Produces a new iterator with the elements of this iterator in\n reverse order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3777},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":105351,"byte_end":105363,"line_start":2487,"line_end":2487,"column_start":8,"column_end":20},"name":"with_min_len","qualname":"::iter::IndexedParallelIterator::with_min_len","value":"fn (self, min: usize) -> MinLen<Self>","parent":{"krate":0,"index":3727},"children":[],"decl_id":null,"docs":" Sets the minimum length of iterators desired to process in each\n thread.  Rayon will not split any smaller than this length, but\n of course an iterator could already be smaller to begin with.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3778},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":106302,"byte_end":106314,"line_start":2515,"line_end":2515,"column_start":8,"column_end":20},"name":"with_max_len","qualname":"::iter::IndexedParallelIterator::with_max_len","value":"fn (self, max: usize) -> MaxLen<Self>","parent":{"krate":0,"index":3727},"children":[],"decl_id":null,"docs":" Sets the maximum length of iterators desired to process in each\n thread.  Rayon will try to split at least below this length,\n unless that would put it below the length from `with_min_len()`.\n For example, given min=10 and max=15, a length of 16 will not be\n split any further.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3779},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":106802,"byte_end":106805,"line_start":2533,"line_end":2533,"column_start":8,"column_end":11},"name":"len","qualname":"::iter::IndexedParallelIterator::len","value":"fn (&self) -> usize","parent":{"krate":0,"index":3727},"children":[],"decl_id":null,"docs":" Produces an exact count of how many items this iterator will\n produce, presuming no panic occurs.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3780},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":107505,"byte_end":107510,"line_start":2549,"line_end":2549,"column_start":8,"column_end":13},"name":"drive","qualname":"::iter::IndexedParallelIterator::drive","value":"fn <C> (self, consumer: C) -> C::Result","parent":{"krate":0,"index":3727},"children":[],"decl_id":null,"docs":" Internal method used to define the behavior of this parallel\n iterator. You should not need to call this directly.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3782},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":108286,"byte_end":108299,"line_start":2566,"line_end":2566,"column_start":8,"column_end":21},"name":"with_producer","qualname":"::iter::IndexedParallelIterator::with_producer","value":"fn <CB> (self, callback: CB) -> CB::Output","parent":{"krate":0,"index":3727},"children":[],"decl_id":null,"docs":" Internal method used to define the behavior of this parallel\n iterator. You should not need to call this directly.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3784},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":109449,"byte_end":109469,"line_start":2605,"line_end":2605,"column_start":11,"column_end":31},"name":"FromParallelIterator","qualname":"::iter::FromParallelIterator","value":"FromParallelIterator<T>","parent":null,"children":[{"krate":0,"index":3786}],"decl_id":null,"docs":" `FromParallelIterator` implements the creation of a collection\n from a [`ParallelIterator`]. By implementing\n `FromParallelIterator` for a given type, you define how it will be\n created from an iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3786},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":110447,"byte_end":110460,"line_start":2624,"line_end":2624,"column_start":8,"column_end":21},"name":"from_par_iter","qualname":"::iter::FromParallelIterator::from_par_iter","value":"fn <I> (par_iter: I) -> Self","parent":{"krate":0,"index":3784},"children":[],"decl_id":null,"docs":" Creates an instance of the collection from the parallel iterator `par_iter`.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3788},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":111359,"byte_end":111373,"line_start":2660,"line_end":2660,"column_start":11,"column_end":25},"name":"ParallelExtend","qualname":"::iter::ParallelExtend","value":"ParallelExtend<T>","parent":null,"children":[{"krate":0,"index":3790}],"decl_id":null,"docs":" `ParallelExtend` extends an existing collection with items from a [`ParallelIterator`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3790},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":111801,"byte_end":111811,"line_start":2677,"line_end":2677,"column_start":8,"column_end":18},"name":"par_extend","qualname":"::iter::ParallelExtend::par_extend","value":"fn <I> (&mut self, par_iter: I) -> ()","parent":{"krate":0,"index":3788},"children":[],"decl_id":null,"docs":" Extends an instance of the collection with the elements drawn\n from the parallel iterator `par_iter`.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3793},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":112183,"byte_end":112186,"line_start":2688,"line_end":2688,"column_start":15,"column_end":18},"name":"Try","qualname":"::iter::private::Try","value":"Try","parent":null,"children":[{"krate":0,"index":5566},{"krate":0,"index":3794},{"krate":0,"index":3795},{"krate":0,"index":3796},{"krate":0,"index":3797},{"krate":0,"index":3798}],"decl_id":null,"docs":" Clone of `std::ops::Try`.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3794},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":112228,"byte_end":112230,"line_start":2691,"line_end":2691,"column_start":14,"column_end":16},"name":"Ok","qualname":"::iter::private::Try::Ok","value":"type Ok;","parent":{"krate":0,"index":3793},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3795},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":112245,"byte_end":112250,"line_start":2692,"line_end":2692,"column_start":14,"column_end":19},"name":"Error","qualname":"::iter::private::Try::Error","value":"type Error;","parent":{"krate":0,"index":3793},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3796},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":112263,"byte_end":112274,"line_start":2693,"line_end":2693,"column_start":12,"column_end":23},"name":"into_result","qualname":"::iter::private::Try::into_result","value":"fn (self) -> Result<Self::Ok, Self::Error>","parent":{"krate":0,"index":3793},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3797},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":112326,"byte_end":112333,"line_start":2694,"line_end":2694,"column_start":12,"column_end":19},"name":"from_ok","qualname":"::iter::private::Try::from_ok","value":"fn (v: Self::Ok) -> Self","parent":{"krate":0,"index":3793},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3798},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":112367,"byte_end":112377,"line_start":2695,"line_end":2695,"column_start":12,"column_end":22},"name":"from_error","qualname":"::iter::private::Try::from_error","value":"fn (v: Self::Error) -> Self","parent":{"krate":0,"index":3793},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3814},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"option","qualname":"::option","value":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","parent":null,"children":[{"krate":0,"index":3815},{"krate":0,"index":3816},{"krate":0,"index":3817},{"krate":0,"index":3818},{"krate":0,"index":5569},{"krate":0,"index":5575},{"krate":0,"index":5572},{"krate":0,"index":3821},{"krate":0,"index":3826},{"krate":0,"index":3832},{"krate":0,"index":5578},{"krate":0,"index":5582},{"krate":0,"index":3839},{"krate":0,"index":3843},{"krate":0,"index":5594},{"krate":0,"index":5586},{"krate":0,"index":5601},{"krate":0,"index":5605},{"krate":0,"index":3849},{"krate":0,"index":5617},{"krate":0,"index":5609},{"krate":0,"index":3855},{"krate":0,"index":3858},{"krate":0,"index":3864}],"decl_id":null,"docs":" Parallel iterator types for [options][std::option]","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5569},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":357816,"byte_end":357824,"line_start":23,"line_end":23,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::option::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":5571}],"decl_id":null,"docs":" A parallel iterator over the value in [`Some`] variant of an [`Option`].","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5578},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":359466,"byte_end":359470,"line_start":88,"line_end":88,"column_start":12,"column_end":16},"name":"Iter","qualname":"::option::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5581}],"decl_id":null,"docs":" A parallel iterator over a reference to the [`Some`] variant of an [`Option`].","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5601},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":360509,"byte_end":360516,"line_start":126,"line_end":126,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::option::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":5604}],"decl_id":null,"docs":" A parallel iterator over a mutable reference to the [`Some`] variant of an [`Option`].","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3870},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\prelude.rs","parent":null,"children":[{"krate":0,"index":3871},{"krate":0,"index":3872},{"krate":0,"index":3873},{"krate":0,"index":3874},{"krate":0,"index":3875},{"krate":0,"index":3876},{"krate":0,"index":3877},{"krate":0,"index":3878},{"krate":0,"index":3879},{"krate":0,"index":3880},{"krate":0,"index":3881}],"decl_id":null,"docs":" The rayon prelude imports the various `ParallelIterator` traits.\n The intention is that one can include `use rayon::prelude::*` and\n have easy access to the various traits and methods you will need.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3882},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"range","qualname":"::range","value":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","parent":null,"children":[{"krate":0,"index":3883},{"krate":0,"index":3884},{"krate":0,"index":3885},{"krate":0,"index":3886},{"krate":0,"index":5624},{"krate":0,"index":5630},{"krate":0,"index":5627},{"krate":0,"index":3887},{"krate":0,"index":3892},{"krate":0,"index":3895},{"krate":0,"index":3900},{"krate":0,"index":3901},{"krate":0,"index":3904},{"krate":0,"index":5633},{"krate":0,"index":5638},{"krate":0,"index":5644},{"krate":0,"index":5649},{"krate":0,"index":5654},{"krate":0,"index":5660},{"krate":0,"index":5665},{"krate":0,"index":5670},{"krate":0,"index":5676},{"krate":0,"index":5681},{"krate":0,"index":5686},{"krate":0,"index":5692},{"krate":0,"index":5697},{"krate":0,"index":5702},{"krate":0,"index":5708},{"krate":0,"index":5713},{"krate":0,"index":5718},{"krate":0,"index":5724},{"krate":0,"index":5729},{"krate":0,"index":5734},{"krate":0,"index":5740},{"krate":0,"index":5745},{"krate":0,"index":5750},{"krate":0,"index":5756},{"krate":0,"index":5761},{"krate":0,"index":5763},{"krate":0,"index":5769},{"krate":0,"index":5774},{"krate":0,"index":5776},{"krate":0,"index":5782},{"krate":0,"index":5787},{"krate":0,"index":5789},{"krate":0,"index":5795},{"krate":0,"index":5800},{"krate":0,"index":5802},{"krate":0,"index":5808}],"decl_id":null,"docs":" Parallel iterator types for [ranges][std::range],\n the type for values created by `a..b` expressions","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5624},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":364210,"byte_end":364214,"line_start":46,"line_end":46,"column_start":12,"column_end":16},"name":"Iter","qualname":"::range::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5626}],"decl_id":null,"docs":" Parallel iterator over a range, implemented for all integer types.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3905},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"range_inclusive","qualname":"::range_inclusive","value":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","parent":null,"children":[{"krate":0,"index":3906},{"krate":0,"index":3907},{"krate":0,"index":3908},{"krate":0,"index":5813},{"krate":0,"index":5819},{"krate":0,"index":5816},{"krate":0,"index":3909},{"krate":0,"index":3912},{"krate":0,"index":3917},{"krate":0,"index":3918},{"krate":0,"index":3919},{"krate":0,"index":5828},{"krate":0,"index":5822},{"krate":0,"index":5839},{"krate":0,"index":5833},{"krate":0,"index":5850},{"krate":0,"index":5844},{"krate":0,"index":5861},{"krate":0,"index":5855},{"krate":0,"index":5866},{"krate":0,"index":5871},{"krate":0,"index":5876},{"krate":0,"index":5881},{"krate":0,"index":5886},{"krate":0,"index":5891},{"krate":0,"index":5896},{"krate":0,"index":5901}],"decl_id":null,"docs":" Parallel iterator types for [inclusive ranges][std::range],\n the type for values created by `a..=b` expressions","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5813},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":372823,"byte_end":372827,"line_start":45,"line_end":45,"column_start":12,"column_end":16},"name":"Iter","qualname":"::range_inclusive::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5815}],"decl_id":null,"docs":" Parallel iterator over an inclusive range, implemented for all integer types.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3920},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\result.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"result","qualname":"::result","value":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\result.rs","parent":null,"children":[{"krate":0,"index":3921},{"krate":0,"index":3922},{"krate":0,"index":3923},{"krate":0,"index":3924},{"krate":0,"index":5906},{"krate":0,"index":5912},{"krate":0,"index":5909},{"krate":0,"index":3925},{"krate":0,"index":5922},{"krate":0,"index":5915},{"krate":0,"index":5928},{"krate":0,"index":5932},{"krate":0,"index":3931},{"krate":0,"index":3935},{"krate":0,"index":5944},{"krate":0,"index":5936},{"krate":0,"index":5951},{"krate":0,"index":5955},{"krate":0,"index":3942},{"krate":0,"index":5967},{"krate":0,"index":5959},{"krate":0,"index":3949}],"decl_id":null,"docs":" Parallel iterator types for [results][std::result]","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5906},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\result.rs","byte_start":377786,"byte_end":377794,"line_start":16,"line_end":16,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::result::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":5908}],"decl_id":null,"docs":" Parallel iterator over a result\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5928},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\result.rs","byte_start":378236,"byte_end":378240,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"Iter","qualname":"::result::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5931}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a result\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5951},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\result.rs","byte_start":378867,"byte_end":378874,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::result::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":5954}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a result\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3956},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"slice","qualname":"::slice","value":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","parent":null,"children":[{"krate":0,"index":3957},{"krate":0,"index":4039},{"krate":0,"index":4121},{"krate":0,"index":4122},{"krate":0,"index":4123},{"krate":0,"index":4124},{"krate":0,"index":4125},{"krate":0,"index":4126},{"krate":0,"index":4127},{"krate":0,"index":4128},{"krate":0,"index":4131},{"krate":0,"index":4132},{"krate":0,"index":4139},{"krate":0,"index":4142},{"krate":0,"index":4166},{"krate":0,"index":4169},{"krate":0,"index":4175},{"krate":0,"index":4181},{"krate":0,"index":4187},{"krate":0,"index":5994},{"krate":0,"index":5998},{"krate":0,"index":4193},{"krate":0,"index":4197},{"krate":0,"index":4204},{"krate":0,"index":4212},{"krate":0,"index":4216},{"krate":0,"index":6002},{"krate":0,"index":6007},{"krate":0,"index":4223},{"krate":0,"index":4227},{"krate":0,"index":4234},{"krate":0,"index":4242},{"krate":0,"index":4247},{"krate":0,"index":6011},{"krate":0,"index":6016},{"krate":0,"index":4254},{"krate":0,"index":4258},{"krate":0,"index":4265},{"krate":0,"index":4273},{"krate":0,"index":4278},{"krate":0,"index":6020},{"krate":0,"index":6024},{"krate":0,"index":4285},{"krate":0,"index":4292},{"krate":0,"index":4300},{"krate":0,"index":4304},{"krate":0,"index":6028},{"krate":0,"index":6033},{"krate":0,"index":4311},{"krate":0,"index":4318},{"krate":0,"index":4326},{"krate":0,"index":4331},{"krate":0,"index":4338},{"krate":0,"index":4344},{"krate":0,"index":4349},{"krate":0,"index":4354},{"krate":0,"index":4361},{"krate":0,"index":4372},{"krate":0,"index":4378},{"krate":0,"index":4383},{"krate":0,"index":4390}],"decl_id":null,"docs":" Parallel iterator types for [slices][std::slice]","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4132},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":381227,"byte_end":381240,"line_start":25,"line_end":25,"column_start":11,"column_end":24},"name":"ParallelSlice","qualname":"::slice::ParallelSlice","value":"ParallelSlice<T: Sync>","parent":null,"children":[{"krate":0,"index":4134},{"krate":0,"index":4135},{"krate":0,"index":4137},{"krate":0,"index":4138}],"decl_id":null,"docs":" Parallel extensions for slices.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4134},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":381359,"byte_end":381376,"line_start":28,"line_end":28,"column_start":8,"column_end":25},"name":"as_parallel_slice","qualname":"::slice::ParallelSlice::as_parallel_slice","value":"fn (&self) -> &[T]","parent":{"krate":0,"index":4132},"children":[],"decl_id":null,"docs":" Returns a plain slice, which is used to implement the rest of the\n parallel methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4135},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":381809,"byte_end":381818,"line_start":43,"line_end":43,"column_start":8,"column_end":17},"name":"par_split","qualname":"::slice::ParallelSlice::par_split","value":"fn <P> (&self, separator: P) -> Split<'_, T, P>","parent":{"krate":0,"index":4132},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over subslices separated by elements that\n match the separator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4137},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":382352,"byte_end":382363,"line_start":63,"line_end":63,"column_start":8,"column_end":19},"name":"par_windows","qualname":"::slice::ParallelSlice::par_windows","value":"fn (&self, window_size: usize) -> Windows<'_, T>","parent":{"krate":0,"index":4132},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over all contiguous windows of length\n `window_size`. The windows overlap.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4138},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":383076,"byte_end":383086,"line_start":84,"line_end":84,"column_start":8,"column_end":18},"name":"par_chunks","qualname":"::slice::ParallelSlice::par_chunks","value":"fn (&self, chunk_size: usize) -> Chunks<'_, T>","parent":{"krate":0,"index":4132},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over at most `chunk_size` elements of\n `self` at a time. The chunks do not overlap.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4142},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":383475,"byte_end":383491,"line_start":101,"line_end":101,"column_start":11,"column_end":27},"name":"ParallelSliceMut","qualname":"::slice::ParallelSliceMut","value":"ParallelSliceMut<T: Send>","parent":null,"children":[{"krate":0,"index":4144},{"krate":0,"index":4145},{"krate":0,"index":4147},{"krate":0,"index":4148},{"krate":0,"index":4150},{"krate":0,"index":4153},{"krate":0,"index":4157},{"krate":0,"index":4159},{"krate":0,"index":4162}],"decl_id":null,"docs":" Parallel extensions for mutable slices.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4144},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":383618,"byte_end":383639,"line_start":104,"line_end":104,"column_start":8,"column_end":29},"name":"as_parallel_slice_mut","qualname":"::slice::ParallelSliceMut::as_parallel_slice_mut","value":"fn (&mut self) -> &mut [T]","parent":{"krate":0,"index":4142},"children":[],"decl_id":null,"docs":" Returns a plain mutable slice, which is used to implement the rest of\n the parallel methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4145},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":384088,"byte_end":384101,"line_start":118,"line_end":118,"column_start":8,"column_end":21},"name":"par_split_mut","qualname":"::slice::ParallelSliceMut::par_split_mut","value":"fn <P> (&mut self, separator: P) -> SplitMut<'_, T, P>","parent":{"krate":0,"index":4142},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over mutable subslices separated by\n elements that match the separator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4147},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":384927,"byte_end":384941,"line_start":144,"line_end":144,"column_start":8,"column_end":22},"name":"par_chunks_mut","qualname":"::slice::ParallelSliceMut::par_chunks_mut","value":"fn (&mut self, chunk_size: usize) -> ChunksMut<'_, T>","parent":{"krate":0,"index":4142},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over at most `chunk_size` elements of\n `self` at a time. The chunks are mutable and do not overlap.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4148},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":386630,"byte_end":386638,"line_start":185,"line_end":185,"column_start":8,"column_end":16},"name":"par_sort","qualname":"::slice::ParallelSliceMut::par_sort","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":4142},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4150},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":388373,"byte_end":388384,"line_start":228,"line_end":228,"column_start":8,"column_end":19},"name":"par_sort_by","qualname":"::slice::ParallelSliceMut::par_sort_by","value":"fn <F> (&mut self, compare: F) -> ()","parent":{"krate":0,"index":4142},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a comparator function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4153},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":390120,"byte_end":390135,"line_start":270,"line_end":270,"column_start":8,"column_end":23},"name":"par_sort_by_key","qualname":"::slice::ParallelSliceMut::par_sort_by_key","value":"fn <B, F> (&mut self, f: F) -> ()","parent":{"krate":0,"index":4142},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a key extraction function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4157},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":391580,"byte_end":391597,"line_start":309,"line_end":309,"column_start":8,"column_end":25},"name":"par_sort_unstable","qualname":"::slice::ParallelSliceMut::par_sort_unstable","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":4142},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel, but may not preserve the order of equal elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4159},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":393157,"byte_end":393177,"line_start":351,"line_end":351,"column_start":8,"column_end":28},"name":"par_sort_unstable_by","qualname":"::slice::ParallelSliceMut::par_sort_unstable_by","value":"fn <F> (&mut self, compare: F) -> ()","parent":{"krate":0,"index":4142},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a comparator function, but may not preserve the order of\n equal elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4162},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":394721,"byte_end":394745,"line_start":392,"line_end":392,"column_start":8,"column_end":32},"name":"par_sort_unstable_by_key","qualname":"::slice::ParallelSliceMut::par_sort_unstable_by_key","value":"fn <B, F> (&mut self, f: F) -> ()","parent":{"krate":0,"index":4142},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a key extraction function, but may not preserve the order\n of equal elements.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5994},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":395995,"byte_end":395999,"line_start":446,"line_end":446,"column_start":12,"column_end":16},"name":"Iter","qualname":"::slice::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5997}],"decl_id":null,"docs":" Parallel iterator over immutable items in a slice\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6002},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":397525,"byte_end":397531,"line_start":511,"line_end":511,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::slice::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":6005},{"krate":0,"index":6006}],"decl_id":null,"docs":" Parallel iterator over immutable non-overlapping chunks of a slice\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6011},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":399500,"byte_end":399507,"line_start":591,"line_end":591,"column_start":12,"column_end":19},"name":"Windows","qualname":"::slice::Windows","value":"Windows {  }","parent":null,"children":[{"krate":0,"index":6014},{"krate":0,"index":6015}],"decl_id":null,"docs":" Parallel iterator over immutable overlapping windows of a slice\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6020},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":401560,"byte_end":401567,"line_start":673,"line_end":673,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::slice::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":6023}],"decl_id":null,"docs":" Parallel iterator over mutable items in a slice\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6028},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":403062,"byte_end":403071,"line_start":735,"line_end":735,"column_start":12,"column_end":21},"name":"ChunksMut","qualname":"::slice::ChunksMut","value":"ChunksMut {  }","parent":null,"children":[{"krate":0,"index":6031},{"krate":0,"index":6032}],"decl_id":null,"docs":" Parallel iterator over mutable non-overlapping chunks of a slice\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4338},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":404946,"byte_end":404951,"line_start":808,"line_end":808,"column_start":12,"column_end":17},"name":"Split","qualname":"::slice::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":4342},{"krate":0,"index":4343}],"decl_id":null,"docs":" Parallel iterator over slices separated by a predicate\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4372},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":406827,"byte_end":406835,"line_start":884,"line_end":884,"column_start":12,"column_end":20},"name":"SplitMut","qualname":"::slice::SplitMut","value":"SplitMut {  }","parent":null,"children":[{"krate":0,"index":4376},{"krate":0,"index":4377}],"decl_id":null,"docs":" Parallel iterator over mutable slices separated by a predicate\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4401},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"str","qualname":"::str","value":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","parent":null,"children":[{"krate":0,"index":4402},{"krate":0,"index":4403},{"krate":0,"index":4404},{"krate":0,"index":4405},{"krate":0,"index":4406},{"krate":0,"index":4407},{"krate":0,"index":4408},{"krate":0,"index":4424},{"krate":0,"index":4426},{"krate":0,"index":4441},{"krate":0,"index":4442},{"krate":0,"index":4456},{"krate":0,"index":6040},{"krate":0,"index":6046},{"krate":0,"index":6043},{"krate":0,"index":4471},{"krate":0,"index":4474},{"krate":0,"index":4479},{"krate":0,"index":6049},{"krate":0,"index":6055},{"krate":0,"index":6052},{"krate":0,"index":4485},{"krate":0,"index":4489},{"krate":0,"index":4494},{"krate":0,"index":6058},{"krate":0,"index":6064},{"krate":0,"index":6061},{"krate":0,"index":4501},{"krate":0,"index":4504},{"krate":0,"index":4509},{"krate":0,"index":6067},{"krate":0,"index":6073},{"krate":0,"index":6070},{"krate":0,"index":4515},{"krate":0,"index":4518},{"krate":0,"index":4523},{"krate":0,"index":6076},{"krate":0,"index":6085},{"krate":0,"index":6081},{"krate":0,"index":4529},{"krate":0,"index":4533},{"krate":0,"index":4539},{"krate":0,"index":6089},{"krate":0,"index":6098},{"krate":0,"index":6094},{"krate":0,"index":4549},{"krate":0,"index":4555},{"krate":0,"index":4559},{"krate":0,"index":4564},{"krate":0,"index":4570},{"krate":0,"index":6102},{"krate":0,"index":6109},{"krate":0,"index":6106},{"krate":0,"index":4579},{"krate":0,"index":6112},{"krate":0,"index":6119},{"krate":0,"index":6116},{"krate":0,"index":4585},{"krate":0,"index":6122},{"krate":0,"index":6131},{"krate":0,"index":6127},{"krate":0,"index":4591},{"krate":0,"index":4597},{"krate":0,"index":4603},{"krate":0,"index":6135},{"krate":0,"index":6144},{"krate":0,"index":6140},{"krate":0,"index":4611},{"krate":0,"index":4618},{"krate":0,"index":4624}],"decl_id":null,"docs":" Parallel iterator types for [strings][std::str]","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4408},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":470322,"byte_end":470336,"line_start":59,"line_end":59,"column_start":11,"column_end":25},"name":"ParallelString","qualname":"::str::ParallelString","value":"ParallelString","parent":null,"children":[{"krate":0,"index":4409},{"krate":0,"index":4410},{"krate":0,"index":4411},{"krate":0,"index":4412},{"krate":0,"index":4413},{"krate":0,"index":4414},{"krate":0,"index":4416},{"krate":0,"index":4418},{"krate":0,"index":4419},{"krate":0,"index":4420},{"krate":0,"index":4422}],"decl_id":null,"docs":" Parallel extensions for strings.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4409},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":470453,"byte_end":470471,"line_start":62,"line_end":62,"column_start":8,"column_end":26},"name":"as_parallel_string","qualname":"::str::ParallelString::as_parallel_string","value":"fn (&self) -> &str","parent":{"krate":0,"index":4408},"children":[],"decl_id":null,"docs":" Returns a plain string slice, which is used to implement the rest of\n the parallel methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4410},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":470756,"byte_end":470765,"line_start":73,"line_end":73,"column_start":8,"column_end":17},"name":"par_chars","qualname":"::str::ParallelString::par_chars","value":"fn (&self) -> Chars<'_>","parent":{"krate":0,"index":4408},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the characters of a string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4411},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":471174,"byte_end":471190,"line_start":88,"line_end":88,"column_start":8,"column_end":24},"name":"par_char_indices","qualname":"::str::ParallelString::par_char_indices","value":"fn (&self) -> CharIndices<'_>","parent":{"krate":0,"index":4408},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the characters of a string, with their positions.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4412},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":471850,"byte_end":471859,"line_start":108,"line_end":108,"column_start":8,"column_end":17},"name":"par_bytes","qualname":"::str::ParallelString::par_bytes","value":"fn (&self) -> Bytes<'_>","parent":{"krate":0,"index":4408},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the bytes of a string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4413},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":472580,"byte_end":472596,"line_start":132,"line_end":132,"column_start":8,"column_end":24},"name":"par_encode_utf16","qualname":"::str::ParallelString::par_encode_utf16","value":"fn (&self) -> EncodeUtf16<'_>","parent":{"krate":0,"index":4408},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over a string encoded as UTF-16.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4414},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":473284,"byte_end":473293,"line_start":154,"line_end":154,"column_start":8,"column_end":17},"name":"par_split","qualname":"::str::ParallelString::par_split","value":"fn <P> (&self, separator: P) -> Split<'_, P>","parent":{"krate":0,"index":4408},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over substrings separated by a\n given character or predicate, similar to `str::split`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4416},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":474122,"byte_end":474142,"line_start":175,"line_end":175,"column_start":8,"column_end":28},"name":"par_split_terminator","qualname":"::str::ParallelString::par_split_terminator","value":"fn <P> (&self, terminator: P) -> SplitTerminator<'_, P>","parent":{"krate":0,"index":4408},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over substrings terminated by a\n given character or predicate, similar to `str::split_terminator`.\n It's equivalent to `par_split`, except it doesn't produce an empty\n substring after a trailing terminator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4418},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":474813,"byte_end":474822,"line_start":194,"line_end":194,"column_start":8,"column_end":17},"name":"par_lines","qualname":"::str::ParallelString::par_lines","value":"fn (&self) -> Lines<'_>","parent":{"krate":0,"index":4408},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the lines of a string, ending with an\n optional carriage return and with a newline (`\\r\\n` or just `\\n`).\n The final line ending is optional, and line endings are not included in\n the output strings.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4419},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":475447,"byte_end":475467,"line_start":213,"line_end":213,"column_start":8,"column_end":28},"name":"par_split_whitespace","qualname":"::str::ParallelString::par_split_whitespace","value":"fn (&self) -> SplitWhitespace<'_>","parent":{"krate":0,"index":4408},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the sub-slices of a string that are\n separated by any amount of whitespace.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4420},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":476144,"byte_end":476155,"line_start":233,"line_end":233,"column_start":8,"column_end":19},"name":"par_matches","qualname":"::str::ParallelString::par_matches","value":"fn <P> (&self, pattern: P) -> Matches<'_, P>","parent":{"krate":0,"index":4408},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over substrings that match a\n given character or predicate, similar to `str::matches`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4422},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":476933,"byte_end":476950,"line_start":255,"line_end":255,"column_start":8,"column_end":25},"name":"par_match_indices","qualname":"::str::ParallelString::par_match_indices","value":"fn <P> (&self, pattern: P) -> MatchIndices<'_, P>","parent":{"krate":0,"index":4408},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over substrings that match a given character\n or predicate, with their positions, similar to `str::match_indices`.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4428},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":477840,"byte_end":477847,"line_start":283,"line_end":283,"column_start":15,"column_end":22},"name":"Pattern","qualname":"::str::private::Pattern","value":"Pattern: Sized + Sync + Send","parent":null,"children":[{"krate":0,"index":6037},{"krate":0,"index":4429},{"krate":0,"index":4430},{"krate":0,"index":4431},{"krate":0,"index":4432},{"krate":0,"index":4435},{"krate":0,"index":4438}],"decl_id":null,"docs":" Pattern-matching trait for `ParallelString`, somewhat like a mix of\n `std::str::pattern::{Pattern, Searcher}`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4429},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":477907,"byte_end":477914,"line_start":285,"line_end":285,"column_start":12,"column_end":19},"name":"find_in","qualname":"::str::private::Pattern::find_in","value":"fn (&self, haystack: &str) -> Option<usize>","parent":{"krate":0,"index":4428},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4430},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":477967,"byte_end":477975,"line_start":286,"line_end":286,"column_start":12,"column_end":20},"name":"rfind_in","qualname":"::str::private::Pattern::rfind_in","value":"fn (&self, haystack: &str) -> Option<usize>","parent":{"krate":0,"index":4428},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4431},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":478028,"byte_end":478040,"line_start":287,"line_end":287,"column_start":12,"column_end":24},"name":"is_suffix_of","qualname":"::str::private::Pattern::is_suffix_of","value":"fn (&self, haystack: &str) -> bool","parent":{"krate":0,"index":4428},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4432},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":478084,"byte_end":478095,"line_start":288,"line_end":288,"column_start":12,"column_end":23},"name":"fold_splits","qualname":"::str::private::Pattern::fold_splits","value":"fn <'ch, F> (&self, haystack: &'ch str, folder: F, skip_last: bool) -> F","parent":{"krate":0,"index":4428},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4435},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":478222,"byte_end":478234,"line_start":291,"line_end":291,"column_start":12,"column_end":24},"name":"fold_matches","qualname":"::str::private::Pattern::fold_matches","value":"fn <'ch, F> (&self, haystack: &'ch str, folder: F) -> F","parent":{"krate":0,"index":4428},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4438},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":478344,"byte_end":478362,"line_start":294,"line_end":294,"column_start":12,"column_end":30},"name":"fold_match_indices","qualname":"::str::private::Pattern::fold_match_indices","value":"fn <'ch, F> (&self, haystack: &'ch str, folder: F, base: usize) -> F","parent":{"krate":0,"index":4428},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6040},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":480753,"byte_end":480758,"line_start":390,"line_end":390,"column_start":12,"column_end":17},"name":"Chars","qualname":"::str::Chars","value":"Chars {  }","parent":null,"children":[{"krate":0,"index":6042}],"decl_id":null,"docs":" Parallel iterator over the characters of a string\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6049},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":481800,"byte_end":481811,"line_start":434,"line_end":434,"column_start":12,"column_end":23},"name":"CharIndices","qualname":"::str::CharIndices","value":"CharIndices {  }","parent":null,"children":[{"krate":0,"index":6051}],"decl_id":null,"docs":" Parallel iterator over the characters of a string, with their positions\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6058},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":483198,"byte_end":483203,"line_start":490,"line_end":490,"column_start":12,"column_end":17},"name":"Bytes","qualname":"::str::Bytes","value":"Bytes {  }","parent":null,"children":[{"krate":0,"index":6060}],"decl_id":null,"docs":" Parallel iterator over the bytes of a string\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6067},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":484219,"byte_end":484230,"line_start":534,"line_end":534,"column_start":12,"column_end":23},"name":"EncodeUtf16","qualname":"::str::EncodeUtf16","value":"EncodeUtf16 {  }","parent":null,"children":[{"krate":0,"index":6069}],"decl_id":null,"docs":" Parallel iterator over a string encoded as UTF-16\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6076},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":485298,"byte_end":485303,"line_start":578,"line_end":578,"column_start":12,"column_end":17},"name":"Split","qualname":"::str::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":6079},{"krate":0,"index":6080}],"decl_id":null,"docs":" Parallel iterator over substrings separated by a pattern\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6089},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":486972,"byte_end":486987,"line_start":639,"line_end":639,"column_start":12,"column_end":27},"name":"SplitTerminator","qualname":"::str::SplitTerminator","value":"SplitTerminator {  }","parent":null,"children":[{"krate":0,"index":6092},{"krate":0,"index":6093}],"decl_id":null,"docs":" Parallel iterator over substrings separated by a terminator pattern\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6102},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":488852,"byte_end":488857,"line_start":705,"line_end":705,"column_start":12,"column_end":17},"name":"Lines","qualname":"::str::Lines","value":"","parent":null,"children":[],"decl_id":null,"docs":" Parallel iterator over lines in a string\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6112},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":489535,"byte_end":489550,"line_start":731,"line_end":731,"column_start":12,"column_end":27},"name":"SplitWhitespace","qualname":"::str::SplitWhitespace","value":"","parent":null,"children":[],"decl_id":null,"docs":" Parallel iterator over substrings separated by whitespace\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6122},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":490093,"byte_end":490100,"line_start":751,"line_end":751,"column_start":12,"column_end":19},"name":"Matches","qualname":"::str::Matches","value":"Matches {  }","parent":null,"children":[{"krate":0,"index":6125},{"krate":0,"index":6126}],"decl_id":null,"docs":" Parallel iterator over substrings that match a pattern\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6135},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":491508,"byte_end":491520,"line_start":807,"line_end":807,"column_start":12,"column_end":24},"name":"MatchIndices","qualname":"::str::MatchIndices","value":"MatchIndices {  }","parent":null,"children":[{"krate":0,"index":6138},{"krate":0,"index":6139}],"decl_id":null,"docs":" Parallel iterator over substrings that match a pattern, with their positions\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4632},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vec","qualname":"::vec","value":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","parent":null,"children":[{"krate":0,"index":4633},{"krate":0,"index":4634},{"krate":0,"index":4635},{"krate":0,"index":6148},{"krate":0,"index":6154},{"krate":0,"index":6151},{"krate":0,"index":4636},{"krate":0,"index":4641},{"krate":0,"index":4647},{"krate":0,"index":4654},{"krate":0,"index":4658},{"krate":0,"index":4665},{"krate":0,"index":4669},{"krate":0,"index":4673},{"krate":0,"index":4679},{"krate":0,"index":4683},{"krate":0,"index":4687}],"decl_id":null,"docs":" Parallel iterator types for [vectors][std::vec] (`Vec<T>`)","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6148},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":493284,"byte_end":493292,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::vec::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":6150}],"decl_id":null,"docs":" Parallel iterator that moves out of a vector.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\split_producer.rs","byte_start":8434,"byte_end":8447,"line_start":29,"line_end":29,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\split_producer.rs","byte_start":9915,"byte_end":9928,"line_start":77,"line_end":77,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\binary_heap.rs","byte_start":13045,"byte_end":13055,"line_start":18,"line_end":18,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\binary_heap.rs","byte_start":13517,"byte_end":13521,"line_start":40,"line_end":40,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\btree_map.rs","byte_start":14710,"byte_end":14714,"line_start":34,"line_end":34,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\btree_set.rs","byte_start":16219,"byte_end":16223,"line_start":34,"line_end":34,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\hash_map.rs","byte_start":17476,"byte_end":17480,"line_start":35,"line_end":35,"column_start":50,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\hash_set.rs","byte_start":19120,"byte_end":19124,"line_start":35,"line_end":35,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\linked_list.rs","byte_start":20214,"byte_end":20218,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\vec_deque.rs","byte_start":21609,"byte_end":21613,"line_start":35,"line_end":35,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":114835,"byte_end":114836,"line_start":51,"line_end":51,"column_start":45,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":115346,"byte_end":115356,"line_start":71,"line_end":71,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":116325,"byte_end":116345,"line_start":106,"line_end":106,"column_start":41,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":116637,"byte_end":116657,"line_start":117,"line_end":117,"column_start":60,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":120561,"byte_end":120566,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":120794,"byte_end":120799,"line_start":34,"line_end":34,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":121902,"byte_end":121907,"line_start":67,"line_end":67,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":240},{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":122842,"byte_end":122851,"line_start":103,"line_end":103,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":123529,"byte_end":123538,"line_start":128,"line_end":128,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":124207,"byte_end":124220,"line_start":158,"line_end":158,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":124403,"byte_end":124416,"line_start":168,"line_end":168,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":126028,"byte_end":126036,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":126250,"byte_end":126258,"line_start":237,"line_end":237,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":126554,"byte_end":126562,"line_start":253,"line_end":253,"column_start":34,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":126683,"byte_end":126691,"line_start":260,"line_end":260,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\find.rs","byte_start":127315,"byte_end":127327,"line_start":20,"line_end":20,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\find.rs","byte_start":127481,"byte_end":127493,"line_start":26,"line_end":26,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\find.rs","byte_start":128078,"byte_end":128090,"line_start":52,"line_end":52,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\find.rs","byte_start":128454,"byte_end":128464,"line_start":72,"line_end":72,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":359},{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\find.rs","byte_start":129350,"byte_end":129361,"line_start":112,"line_end":112,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\find_first_last\\mod.rs","byte_start":131887,"byte_end":131899,"line_start":69,"line_end":69,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\find_first_last\\mod.rs","byte_start":132449,"byte_end":132461,"line_start":88,"line_end":88,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\find_first_last\\mod.rs","byte_start":133527,"byte_end":133539,"line_start":129,"line_end":129,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\find_first_last\\mod.rs","byte_start":135101,"byte_end":135111,"line_start":174,"line_end":174,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\find_first_last\\mod.rs","byte_start":136819,"byte_end":136830,"line_start":231,"line_end":231,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":137653,"byte_end":137659,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":137858,"byte_end":137864,"line_start":33,"line_end":33,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":138197,"byte_end":138203,"line_start":51,"line_end":51,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":448},{"krate":0,"index":450},{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":138901,"byte_end":138909,"line_start":83,"line_end":83,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":139482,"byte_end":139495,"line_start":112,"line_end":112,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":140614,"byte_end":140622,"line_start":159,"line_end":159,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":141300,"byte_end":141308,"line_start":185,"line_end":185,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":141469,"byte_end":141477,"line_start":195,"line_end":195,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\collect\\consumer.rs","byte_start":148736,"byte_end":148751,"line_start":30,"line_end":30,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\collect\\consumer.rs","byte_start":149044,"byte_end":149059,"line_start":38,"line_end":38,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\collect\\consumer.rs","byte_start":150086,"byte_end":150099,"line_start":72,"line_end":72,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\collect\\consumer.rs","byte_start":151110,"byte_end":151125,"line_start":106,"line_end":106,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\collect\\mod.rs","byte_start":144484,"byte_end":144491,"line_start":77,"line_end":77,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\collect\\mod.rs","byte_start":146157,"byte_end":146160,"line_start":122,"line_end":122,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\enumerate.rs","byte_start":159602,"byte_end":159611,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\enumerate.rs","byte_start":159804,"byte_end":159813,"line_start":28,"line_end":28,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\enumerate.rs","byte_start":160157,"byte_end":160166,"line_start":46,"line_end":46,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":597},{"krate":0,"index":599},{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\enumerate.rs","byte_start":160672,"byte_end":160680,"line_start":68,"line_end":68,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\enumerate.rs","byte_start":161264,"byte_end":161281,"line_start":92,"line_end":92,"column_start":22,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter.rs","byte_start":163087,"byte_end":163093,"line_start":18,"line_end":18,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter.rs","byte_start":163253,"byte_end":163259,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter.rs","byte_start":163470,"byte_end":163476,"line_start":34,"line_end":34,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":641},{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter.rs","byte_start":164024,"byte_end":164038,"line_start":58,"line_end":58,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter.rs","byte_start":164189,"byte_end":164203,"line_start":64,"line_end":64,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter.rs","byte_start":164947,"byte_end":164961,"line_start":94,"line_end":94,"column_start":48,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":671},{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter.rs","byte_start":165348,"byte_end":165360,"line_start":113,"line_end":113,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter_map.rs","byte_start":166636,"byte_end":166645,"line_start":18,"line_end":18,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter_map.rs","byte_start":166852,"byte_end":166861,"line_start":26,"line_end":26,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter_map.rs","byte_start":167050,"byte_end":167059,"line_start":33,"line_end":33,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":707},{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter_map.rs","byte_start":167626,"byte_end":167643,"line_start":58,"line_end":58,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter_map.rs","byte_start":167796,"byte_end":167813,"line_start":64,"line_end":64,"column_start":38,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter_map.rs","byte_start":168599,"byte_end":168616,"line_start":95,"line_end":95,"column_start":47,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":739},{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter_map.rs","byte_start":169021,"byte_end":169036,"line_start":114,"line_end":114,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flat_map.rs","byte_start":170338,"byte_end":170345,"line_start":18,"line_end":18,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":767}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flat_map.rs","byte_start":170524,"byte_end":170531,"line_start":24,"line_end":24,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flat_map.rs","byte_start":170711,"byte_end":170718,"line_start":31,"line_end":31,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":776},{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flat_map.rs","byte_start":171333,"byte_end":171348,"line_start":59,"line_end":59,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":789}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flat_map.rs","byte_start":171493,"byte_end":171508,"line_start":65,"line_end":65,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flat_map.rs","byte_start":172300,"byte_end":172315,"line_start":97,"line_end":97,"column_start":47,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":808},{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flat_map.rs","byte_start":172759,"byte_end":172772,"line_start":118,"line_end":118,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flatten.rs","byte_start":174344,"byte_end":174351,"line_start":16,"line_end":16,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flatten.rs","byte_start":174585,"byte_end":174592,"line_start":27,"line_end":27,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":839},{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":174976,"byte_end":174980,"line_start":6,"line_end":6,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":175777,"byte_end":175781,"line_start":35,"line_end":35,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":175971,"byte_end":175975,"line_start":41,"line_end":41,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":866},{"krate":0,"index":867}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":176592,"byte_end":176604,"line_start":69,"line_end":69,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":177460,"byte_end":177472,"line_start":105,"line_end":105,"column_start":51,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":897},{"krate":0,"index":898}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":177945,"byte_end":177955,"line_start":130,"line_end":130,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":918},{"krate":0,"index":919}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":178952,"byte_end":178960,"line_start":175,"line_end":175,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":924}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":179749,"byte_end":179757,"line_start":203,"line_end":203,"column_start":58,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":929}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":180011,"byte_end":180019,"line_start":212,"line_end":212,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":934},{"krate":0,"index":935}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":180591,"byte_end":180607,"line_start":239,"line_end":239,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":181525,"byte_end":181541,"line_start":278,"line_end":278,"column_start":47,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":963},{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\for_each.rs","byte_start":182274,"byte_end":182289,"line_start":19,"line_end":19,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\for_each.rs","byte_start":182685,"byte_end":182700,"line_start":40,"line_end":40,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":996},{"krate":0,"index":997}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\for_each.rs","byte_start":183142,"byte_end":183157,"line_start":66,"line_end":66,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1002},{"krate":0,"index":1003}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":184009,"byte_end":184012,"line_start":21,"line_end":21,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1028}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":184281,"byte_end":184289,"line_start":34,"line_end":34,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1032}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":184645,"byte_end":184655,"line_start":48,"line_end":48,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1036}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":184964,"byte_end":184974,"line_start":62,"line_end":62,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1040}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":185437,"byte_end":185444,"line_start":78,"line_end":78,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":185978,"byte_end":185986,"line_start":96,"line_end":96,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":186285,"byte_end":186292,"line_start":110,"line_end":110,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1056}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":186614,"byte_end":186622,"line_start":124,"line_end":124,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":186900,"byte_end":186906,"line_start":137,"line_end":137,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1063}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":187167,"byte_end":187173,"line_start":147,"line_end":147,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1067}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":187440,"byte_end":187446,"line_start":157,"line_end":157,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1071}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":187709,"byte_end":187715,"line_start":167,"line_end":167,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1074}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":187985,"byte_end":187991,"line_start":177,"line_end":177,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1078}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":188434,"byte_end":188437,"line_start":191,"line_end":191,"column_start":52,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1084}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":200552,"byte_end":200560,"line_start":263,"line_end":263,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1138},{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":201679,"byte_end":201693,"line_start":302,"line_end":302,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1141},{"krate":0,"index":1142}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":204051,"byte_end":204059,"line_start":364,"line_end":364,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1153},{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":208322,"byte_end":208329,"line_start":8,"line_end":8,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1188}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":209231,"byte_end":209238,"line_start":39,"line_end":39,"column_start":55,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1194}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":209434,"byte_end":209441,"line_start":45,"line_end":45,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1200},{"krate":0,"index":1201}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":210145,"byte_end":210160,"line_start":75,"line_end":75,"column_start":42,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1220},{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1224},{"krate":0,"index":1225}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":211051,"byte_end":211066,"line_start":111,"line_end":111,"column_start":51,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1233},{"krate":0,"index":1234}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":211588,"byte_end":211601,"line_start":136,"line_end":136,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1252},{"krate":0,"index":1253}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":212327,"byte_end":212338,"line_start":165,"line_end":165,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1258}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":213179,"byte_end":213190,"line_start":194,"line_end":194,"column_start":56,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1263}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":213471,"byte_end":213482,"line_start":206,"line_end":206,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1268},{"krate":0,"index":1269}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":214096,"byte_end":214115,"line_start":234,"line_end":234,"column_start":38,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1289},{"krate":0,"index":1290}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":215078,"byte_end":215097,"line_start":274,"line_end":274,"column_start":47,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1297},{"krate":0,"index":1298}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\reduce.rs","byte_start":215994,"byte_end":216008,"line_start":23,"line_end":23,"column_start":26,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\reduce.rs","byte_start":216050,"byte_end":216064,"line_start":25,"line_end":25,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1324}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\reduce.rs","byte_start":216166,"byte_end":216180,"line_start":31,"line_end":31,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":1335}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\reduce.rs","byte_start":216707,"byte_end":216721,"line_start":57,"line_end":57,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1341},{"krate":0,"index":1342}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\reduce.rs","byte_start":216970,"byte_end":216984,"line_start":72,"line_end":72,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1348}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\reduce.rs","byte_start":217229,"byte_end":217241,"line_start":86,"line_end":86,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1363},{"krate":0,"index":1364}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\skip.rs","byte_start":218356,"byte_end":218360,"line_start":18,"line_end":18,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1372}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\skip.rs","byte_start":218592,"byte_end":218596,"line_start":29,"line_end":29,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1378}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\skip.rs","byte_start":218931,"byte_end":218935,"line_start":47,"line_end":47,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1384}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\skip.rs","byte_start":219516,"byte_end":219524,"line_start":73,"line_end":73,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1393},{"krate":0,"index":1394}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce.rs","byte_start":220677,"byte_end":220694,"line_start":29,"line_end":29,"column_start":26,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce.rs","byte_start":220736,"byte_end":220753,"line_start":31,"line_end":31,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1423}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce.rs","byte_start":220855,"byte_end":220872,"line_start":37,"line_end":37,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1433},{"krate":0,"index":1434}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce.rs","byte_start":221486,"byte_end":221503,"line_start":64,"line_end":64,"column_start":45,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1440},{"krate":0,"index":1441}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce.rs","byte_start":221770,"byte_end":221787,"line_start":79,"line_end":79,"column_start":35,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1447}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce.rs","byte_start":222267,"byte_end":222282,"line_start":98,"line_end":98,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1459},{"krate":0,"index":1460},{"krate":0,"index":1462},{"krate":0,"index":1463}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce_with.rs","byte_start":223548,"byte_end":223569,"line_start":26,"line_end":26,"column_start":22,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce_with.rs","byte_start":223603,"byte_end":223624,"line_start":28,"line_end":28,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1486}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce_with.rs","byte_start":223718,"byte_end":223739,"line_start":34,"line_end":34,"column_start":32,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1491},{"krate":0,"index":1492},{"krate":0,"index":1493},{"krate":0,"index":1494},{"krate":0,"index":1495},{"krate":0,"index":1496}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce_with.rs","byte_start":224318,"byte_end":224339,"line_start":60,"line_end":60,"column_start":41,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1501},{"krate":0,"index":1502}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce_with.rs","byte_start":224576,"byte_end":224597,"line_start":74,"line_end":74,"column_start":39,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1507}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce_with.rs","byte_start":225256,"byte_end":225275,"line_start":97,"line_end":97,"column_start":30,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1519},{"krate":0,"index":1520},{"krate":0,"index":1521},{"krate":0,"index":1522}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":230591,"byte_end":230596,"line_start":124,"line_end":124,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1536}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":230776,"byte_end":230781,"line_start":130,"line_end":130,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1540},{"krate":0,"index":1541}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":231273,"byte_end":231286,"line_start":154,"line_end":154,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1553},{"krate":0,"index":1554},{"krate":0,"index":1556}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\take.rs","byte_start":232247,"byte_end":232251,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1567}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\take.rs","byte_start":232483,"byte_end":232487,"line_start":28,"line_end":28,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1570},{"krate":0,"index":1571},{"krate":0,"index":1573}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\take.rs","byte_start":232822,"byte_end":232826,"line_start":46,"line_end":46,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1576},{"krate":0,"index":1577},{"krate":0,"index":1579}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\take.rs","byte_start":233389,"byte_end":233397,"line_start":72,"line_end":72,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1588},{"krate":0,"index":1589}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":234335,"byte_end":234338,"line_start":20,"line_end":20,"column_start":48,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1602}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":234495,"byte_end":234498,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1606}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":234700,"byte_end":234703,"line_start":36,"line_end":36,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1611},{"krate":0,"index":1612},{"krate":0,"index":1614}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":235177,"byte_end":235180,"line_start":57,"line_end":57,"column_start":43,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1619},{"krate":0,"index":1621},{"krate":0,"index":1622}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":235922,"byte_end":235930,"line_start":89,"line_end":89,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1634},{"krate":0,"index":1635}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":236613,"byte_end":236624,"line_start":118,"line_end":118,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1648},{"krate":0,"index":1649},{"krate":0,"index":1650},{"krate":0,"index":1651},{"krate":0,"index":1652},{"krate":0,"index":1653},{"krate":0,"index":1654}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":237800,"byte_end":237811,"line_start":172,"line_end":172,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1666}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":237952,"byte_end":237963,"line_start":178,"line_end":178,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1673},{"krate":0,"index":1674},{"krate":0,"index":1675},{"krate":0,"index":1676},{"krate":0,"index":1677},{"krate":0,"index":1678}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":238702,"byte_end":238713,"line_start":209,"line_end":209,"column_start":47,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1685},{"krate":0,"index":1686}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":239108,"byte_end":239117,"line_start":229,"line_end":229,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1701},{"krate":0,"index":1703},{"krate":0,"index":1704}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":240354,"byte_end":240361,"line_start":20,"line_end":20,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1716}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":240593,"byte_end":240600,"line_start":29,"line_end":29,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1721}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":240831,"byte_end":240838,"line_start":39,"line_end":39,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1727},{"krate":0,"index":1728},{"krate":0,"index":1730}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":241354,"byte_end":241361,"line_start":61,"line_end":61,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1736},{"krate":0,"index":1738},{"krate":0,"index":1739}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":242206,"byte_end":242214,"line_start":96,"line_end":96,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1754},{"krate":0,"index":1755}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":243001,"byte_end":243016,"line_start":128,"line_end":128,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1771},{"krate":0,"index":1772},{"krate":0,"index":1773},{"krate":0,"index":1774},{"krate":0,"index":1775},{"krate":0,"index":1776},{"krate":0,"index":1777}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":244353,"byte_end":244364,"line_start":188,"line_end":188,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1793},{"krate":0,"index":1794},{"krate":0,"index":1795}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":244745,"byte_end":244756,"line_start":206,"line_end":206,"column_start":46,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1802}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":245047,"byte_end":245058,"line_start":218,"line_end":218,"column_start":44,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":245376,"byte_end":245391,"line_start":235,"line_end":235,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1822}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":245557,"byte_end":245572,"line_start":241,"line_end":241,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1830},{"krate":0,"index":1831},{"krate":0,"index":1832},{"krate":0,"index":1833},{"krate":0,"index":1834},{"krate":0,"index":1835}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":246416,"byte_end":246431,"line_start":274,"line_end":274,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1843},{"krate":0,"index":1844}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":246895,"byte_end":246908,"line_start":296,"line_end":296,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1860},{"krate":0,"index":1861},{"krate":0,"index":1862},{"krate":0,"index":1865},{"krate":0,"index":1866}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":248306,"byte_end":248313,"line_start":347,"line_end":347,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1871}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":248486,"byte_end":248493,"line_start":353,"line_end":353,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1876}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":248736,"byte_end":248743,"line_start":363,"line_end":363,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1883},{"krate":0,"index":1884},{"krate":0,"index":1886}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":249283,"byte_end":249290,"line_start":385,"line_end":385,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1893},{"krate":0,"index":1895},{"krate":0,"index":1896}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":250165,"byte_end":250173,"line_start":420,"line_end":420,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":1912},{"krate":0,"index":1913}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":250991,"byte_end":251006,"line_start":452,"line_end":452,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1930},{"krate":0,"index":1931},{"krate":0,"index":1932},{"krate":0,"index":1933},{"krate":0,"index":1934},{"krate":0,"index":1935},{"krate":0,"index":1936}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":252464,"byte_end":252479,"line_start":515,"line_end":515,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1951}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":252661,"byte_end":252676,"line_start":521,"line_end":521,"column_start":47,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1960},{"krate":0,"index":1961},{"krate":0,"index":1962},{"krate":0,"index":1963},{"krate":0,"index":1964},{"krate":0,"index":1965}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":253532,"byte_end":253547,"line_start":554,"line_end":554,"column_start":56,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":1974},{"krate":0,"index":1975}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip.rs","byte_start":254462,"byte_end":254465,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1987}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip.rs","byte_start":254687,"byte_end":254690,"line_start":30,"line_end":30,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1991},{"krate":0,"index":1992},{"krate":0,"index":1994}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip.rs","byte_start":255074,"byte_end":255077,"line_start":49,"line_end":49,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1998},{"krate":0,"index":2000},{"krate":0,"index":2001}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip.rs","byte_start":255737,"byte_end":255746,"line_start":79,"line_end":79,"column_start":54,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2012},{"krate":0,"index":2013}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip.rs","byte_start":256367,"byte_end":256376,"line_start":102,"line_end":102,"column_start":54,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2024},{"krate":0,"index":2025}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip.rs","byte_start":257033,"byte_end":257044,"line_start":129,"line_end":129,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2035},{"krate":0,"index":2036},{"krate":0,"index":2037},{"krate":0,"index":2038},{"krate":0,"index":2039},{"krate":0,"index":2040}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip_eq.rs","byte_start":258453,"byte_end":258458,"line_start":18,"line_end":18,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2048}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip_eq.rs","byte_start":258727,"byte_end":258732,"line_start":31,"line_end":31,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2052},{"krate":0,"index":2053},{"krate":0,"index":2055}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip_eq.rs","byte_start":259124,"byte_end":259129,"line_start":50,"line_end":50,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2059},{"krate":0,"index":2061},{"krate":0,"index":2062}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":260246,"byte_end":260256,"line_start":23,"line_end":23,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2073}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":260507,"byte_end":260517,"line_start":34,"line_end":34,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2077},{"krate":0,"index":2078},{"krate":0,"index":2080}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":260894,"byte_end":260904,"line_start":53,"line_end":53,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2084},{"krate":0,"index":2086},{"krate":0,"index":2087}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":261800,"byte_end":261809,"line_start":90,"line_end":90,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2100},{"krate":0,"index":2101}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":262619,"byte_end":262628,"line_start":119,"line_end":119,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2114},{"krate":0,"index":2115}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":263409,"byte_end":263427,"line_start":155,"line_end":155,"column_start":12,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2128}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":263747,"byte_end":263765,"line_start":171,"line_end":171,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2132},{"krate":0,"index":2133},{"krate":0,"index":2134},{"krate":0,"index":2135},{"krate":0,"index":2136},{"krate":0,"index":2137}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":266586,"byte_end":266599,"line_start":264,"line_end":264,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2148},{"krate":0,"index":2149},{"krate":0,"index":2150}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":267732,"byte_end":267745,"line_start":303,"line_end":303,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2154}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":268306,"byte_end":268319,"line_start":324,"line_end":324,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2158}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave_shortest.rs","byte_start":269246,"byte_end":269264,"line_start":23,"line_end":23,"column_start":12,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2166}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave_shortest.rs","byte_start":269905,"byte_end":269923,"line_start":44,"line_end":44,"column_start":33,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2170},{"krate":0,"index":2171},{"krate":0,"index":2173}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave_shortest.rs","byte_start":270300,"byte_end":270318,"line_start":63,"line_end":63,"column_start":40,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2177},{"krate":0,"index":2179},{"krate":0,"index":2180}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":271420,"byte_end":271431,"line_start":23,"line_end":23,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2192}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":271661,"byte_end":271672,"line_start":34,"line_end":34,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2195},{"krate":0,"index":2196},{"krate":0,"index":2198}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":272202,"byte_end":272213,"line_start":57,"line_end":57,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2201},{"krate":0,"index":2203},{"krate":0,"index":2204}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":273120,"byte_end":273128,"line_start":96,"line_end":96,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2215},{"krate":0,"index":2216}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":273695,"byte_end":273714,"line_start":124,"line_end":124,"column_start":9,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2226}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":273955,"byte_end":273974,"line_start":138,"line_end":138,"column_start":22,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2229},{"krate":0,"index":2230},{"krate":0,"index":2231},{"krate":0,"index":2232},{"krate":0,"index":2233},{"krate":0,"index":2234},{"krate":0,"index":2235}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":276149,"byte_end":276164,"line_start":217,"line_end":217,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2245},{"krate":0,"index":2246},{"krate":0,"index":2247}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":276936,"byte_end":276951,"line_start":246,"line_end":246,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2250}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":277599,"byte_end":277614,"line_start":268,"line_end":268,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2253}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":277962,"byte_end":277981,"line_start":285,"line_end":285,"column_start":12,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2263}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":278206,"byte_end":278225,"line_start":298,"line_end":298,"column_start":28,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2267},{"krate":0,"index":2268},{"krate":0,"index":2269},{"krate":0,"index":2270},{"krate":0,"index":2271},{"krate":0,"index":2272}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":279303,"byte_end":279322,"line_start":335,"line_end":335,"column_start":37,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2276},{"krate":0,"index":2277}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":279862,"byte_end":279879,"line_start":361,"line_end":361,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2287},{"krate":0,"index":2288},{"krate":0,"index":2289},{"krate":0,"index":2292},{"krate":0,"index":2293}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":281652,"byte_end":281658,"line_start":20,"line_end":20,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2304}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":281818,"byte_end":281824,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2308}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":282035,"byte_end":282041,"line_start":36,"line_end":36,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2312},{"krate":0,"index":2313},{"krate":0,"index":2315}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":282503,"byte_end":282509,"line_start":56,"line_end":56,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2319},{"krate":0,"index":2321},{"krate":0,"index":2322}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":283250,"byte_end":283258,"line_start":87,"line_end":87,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2333},{"krate":0,"index":2334}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":283939,"byte_end":283953,"line_start":115,"line_end":115,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2346},{"krate":0,"index":2347},{"krate":0,"index":2348},{"krate":0,"index":2349},{"krate":0,"index":2350},{"krate":0,"index":2351},{"krate":0,"index":2352}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":285217,"byte_end":285231,"line_start":171,"line_end":171,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2364}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":285378,"byte_end":285392,"line_start":177,"line_end":177,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2370},{"krate":0,"index":2371},{"krate":0,"index":2372},{"krate":0,"index":2373},{"krate":0,"index":2374},{"krate":0,"index":2375}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":286138,"byte_end":286152,"line_start":207,"line_end":207,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2381},{"krate":0,"index":2382}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":286542,"byte_end":286554,"line_start":226,"line_end":226,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2394},{"krate":0,"index":2395},{"krate":0,"index":2396},{"krate":0,"index":2399},{"krate":0,"index":2400}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":287531,"byte_end":287540,"line_start":271,"line_end":271,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2404},{"krate":0,"index":2405},{"krate":0,"index":2406},{"krate":0,"index":2407},{"krate":0,"index":2411}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":288493,"byte_end":288502,"line_start":314,"line_end":314,"column_start":34,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":288609,"byte_end":288618,"line_start":321,"line_end":321,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2420}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\noop.rs","byte_start":288907,"byte_end":288919,"line_start":5,"line_end":5,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2427}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\noop.rs","byte_start":289010,"byte_end":289022,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2430},{"krate":0,"index":2431},{"krate":0,"index":2432},{"krate":0,"index":2433},{"krate":0,"index":2434},{"krate":0,"index":2435}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\noop.rs","byte_start":289366,"byte_end":289378,"line_start":29,"line_end":29,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2438},{"krate":0,"index":2439},{"krate":0,"index":2440},{"krate":0,"index":2443},{"krate":0,"index":2444}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\noop.rs","byte_start":289739,"byte_end":289751,"line_start":51,"line_end":51,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2447},{"krate":0,"index":2448}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\noop.rs","byte_start":289945,"byte_end":289956,"line_start":63,"line_end":63,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2452}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\rev.rs","byte_start":290510,"byte_end":290513,"line_start":16,"line_end":16,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2459}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\rev.rs","byte_start":290694,"byte_end":290697,"line_start":26,"line_end":26,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2462},{"krate":0,"index":2463},{"krate":0,"index":2465}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\rev.rs","byte_start":291032,"byte_end":291035,"line_start":44,"line_end":44,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2468},{"krate":0,"index":2470},{"krate":0,"index":2471}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\rev.rs","byte_start":291605,"byte_end":291613,"line_start":68,"line_end":68,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2480},{"krate":0,"index":2481}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\rev.rs","byte_start":292128,"byte_end":292139,"line_start":92,"line_end":92,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2489},{"krate":0,"index":2490},{"krate":0,"index":2491},{"krate":0,"index":2492},{"krate":0,"index":2493},{"krate":0,"index":2494}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":293358,"byte_end":293364,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2502}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":293568,"byte_end":293574,"line_start":27,"line_end":27,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2505},{"krate":0,"index":2506},{"krate":0,"index":2508}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":293909,"byte_end":293915,"line_start":45,"line_end":45,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2511},{"krate":0,"index":2513},{"krate":0,"index":2514}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":294493,"byte_end":294501,"line_start":71,"line_end":71,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2523},{"krate":0,"index":2524}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":295136,"byte_end":295150,"line_start":98,"line_end":98,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2532},{"krate":0,"index":2533},{"krate":0,"index":2534},{"krate":0,"index":2535},{"krate":0,"index":2536},{"krate":0,"index":2537},{"krate":0,"index":2538}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":296442,"byte_end":296448,"line_start":151,"line_end":151,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2542}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":296652,"byte_end":296658,"line_start":161,"line_end":161,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2545},{"krate":0,"index":2546},{"krate":0,"index":2548}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":296993,"byte_end":296999,"line_start":179,"line_end":179,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2551},{"krate":0,"index":2553},{"krate":0,"index":2554}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":297577,"byte_end":297585,"line_start":205,"line_end":205,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2563},{"krate":0,"index":2564}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":298220,"byte_end":298234,"line_start":232,"line_end":232,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2572},{"krate":0,"index":2573},{"krate":0,"index":2574},{"krate":0,"index":2575},{"krate":0,"index":2576},{"krate":0,"index":2577},{"krate":0,"index":2578}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":299533,"byte_end":299539,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2589}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":299726,"byte_end":299732,"line_start":28,"line_end":28,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2594},{"krate":0,"index":2595},{"krate":0,"index":2597}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":300180,"byte_end":300186,"line_start":48,"line_end":48,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2602},{"krate":0,"index":2604},{"krate":0,"index":2605}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":300831,"byte_end":300839,"line_start":75,"line_end":75,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2614},{"krate":0,"index":2615}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":301396,"byte_end":301410,"line_start":99,"line_end":99,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2624},{"krate":0,"index":2625},{"krate":0,"index":2626},{"krate":0,"index":2627},{"krate":0,"index":2628},{"krate":0,"index":2629},{"krate":0,"index":2630}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":302306,"byte_end":302320,"line_start":142,"line_end":142,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2637}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":302432,"byte_end":302446,"line_start":148,"line_end":148,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2642},{"krate":0,"index":2643},{"krate":0,"index":2644},{"krate":0,"index":2645},{"krate":0,"index":2646},{"krate":0,"index":2647}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":303094,"byte_end":303108,"line_start":177,"line_end":177,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2652},{"krate":0,"index":2653}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":303428,"byte_end":303440,"line_start":195,"line_end":195,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2661},{"krate":0,"index":2662},{"krate":0,"index":2663},{"krate":0,"index":2665},{"krate":0,"index":2666}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\product.rs","byte_start":304479,"byte_end":304494,"line_start":23,"line_end":23,"column_start":31,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\product.rs","byte_start":304516,"byte_end":304531,"line_start":25,"line_end":25,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2686}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\product.rs","byte_start":304680,"byte_end":304695,"line_start":33,"line_end":33,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2690},{"krate":0,"index":2691},{"krate":0,"index":2692},{"krate":0,"index":2693},{"krate":0,"index":2694},{"krate":0,"index":2695}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\product.rs","byte_start":305245,"byte_end":305260,"line_start":60,"line_end":60,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2699},{"krate":0,"index":2700}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\product.rs","byte_start":305492,"byte_end":305507,"line_start":73,"line_end":73,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2703}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\product.rs","byte_start":305692,"byte_end":305705,"line_start":86,"line_end":86,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2710},{"krate":0,"index":2711},{"krate":0,"index":2712},{"krate":0,"index":2714},{"krate":0,"index":2715}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\sum.rs","byte_start":306693,"byte_end":306704,"line_start":23,"line_end":23,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\sum.rs","byte_start":306726,"byte_end":306737,"line_start":25,"line_end":25,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2735}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\sum.rs","byte_start":306878,"byte_end":306889,"line_start":33,"line_end":33,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2739},{"krate":0,"index":2740},{"krate":0,"index":2741},{"krate":0,"index":2742},{"krate":0,"index":2743},{"krate":0,"index":2744}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\sum.rs","byte_start":307356,"byte_end":307367,"line_start":56,"line_end":56,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2748},{"krate":0,"index":2749}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\sum.rs","byte_start":307583,"byte_end":307594,"line_start":69,"line_end":69,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2752}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\sum.rs","byte_start":307767,"byte_end":307776,"line_start":82,"line_end":82,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2759},{"krate":0,"index":2760},{"krate":0,"index":2761},{"krate":0,"index":2763},{"krate":0,"index":2764}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":308872,"byte_end":308879,"line_start":21,"line_end":21,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2776}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":309040,"byte_end":309047,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2780}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":309262,"byte_end":309269,"line_start":37,"line_end":37,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2784},{"krate":0,"index":2785},{"krate":0,"index":2787}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":309729,"byte_end":309736,"line_start":57,"line_end":57,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2791},{"krate":0,"index":2793},{"krate":0,"index":2794}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":310478,"byte_end":310486,"line_start":88,"line_end":88,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2805},{"krate":0,"index":2806}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":311161,"byte_end":311176,"line_start":116,"line_end":116,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2818},{"krate":0,"index":2819},{"krate":0,"index":2820},{"krate":0,"index":2821},{"krate":0,"index":2822},{"krate":0,"index":2823},{"krate":0,"index":2824}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":312390,"byte_end":312405,"line_start":170,"line_end":170,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2836}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":312555,"byte_end":312570,"line_start":176,"line_end":176,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2842},{"krate":0,"index":2843},{"krate":0,"index":2844},{"krate":0,"index":2845},{"krate":0,"index":2846},{"krate":0,"index":2847}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":313313,"byte_end":313328,"line_start":206,"line_end":206,"column_start":44,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2853},{"krate":0,"index":2854}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":313711,"byte_end":313724,"line_start":225,"line_end":225,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2866},{"krate":0,"index":2867},{"krate":0,"index":2868},{"krate":0,"index":2870},{"krate":0,"index":2871}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":315112,"byte_end":315116,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2882}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":315274,"byte_end":315278,"line_start":32,"line_end":32,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2885}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":315388,"byte_end":315397,"line_start":39,"line_end":39,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2888}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":315591,"byte_end":315600,"line_start":49,"line_end":49,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2891},{"krate":0,"index":2892},{"krate":0,"index":2894}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":316110,"byte_end":316119,"line_start":72,"line_end":72,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2897},{"krate":0,"index":2899},{"krate":0,"index":2900}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":316819,"byte_end":316827,"line_start":102,"line_end":102,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2908},{"krate":0,"index":2909}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":317536,"byte_end":317553,"line_start":131,"line_end":131,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2919},{"krate":0,"index":2920},{"krate":0,"index":2921},{"krate":0,"index":2922},{"krate":0,"index":2923},{"krate":0,"index":2924},{"krate":0,"index":2925}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":318651,"byte_end":318664,"line_start":183,"line_end":183,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2935},{"krate":0,"index":2936},{"krate":0,"index":2937}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":319011,"byte_end":319024,"line_start":202,"line_end":202,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2941}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":319275,"byte_end":319288,"line_start":215,"line_end":215,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2945}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":319599,"byte_end":319616,"line_start":232,"line_end":232,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2955},{"krate":0,"index":2956},{"krate":0,"index":2957},{"krate":0,"index":2958},{"krate":0,"index":2959},{"krate":0,"index":2960}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":320574,"byte_end":320591,"line_start":270,"line_end":270,"column_start":41,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2965},{"krate":0,"index":2966}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":321070,"byte_end":321085,"line_start":294,"line_end":294,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2976},{"krate":0,"index":2977},{"krate":0,"index":2978},{"krate":0,"index":2981},{"krate":0,"index":2982}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":321827,"byte_end":321843,"line_start":331,"line_end":331,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2992}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\while_some.rs","byte_start":322561,"byte_end":322570,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3002}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\while_some.rs","byte_start":322759,"byte_end":322768,"line_start":28,"line_end":28,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3006},{"krate":0,"index":3007}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\while_some.rs","byte_start":323398,"byte_end":323415,"line_start":56,"line_end":56,"column_start":40,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3018},{"krate":0,"index":3019},{"krate":0,"index":3020},{"krate":0,"index":3021},{"krate":0,"index":3022},{"krate":0,"index":3023}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\while_some.rs","byte_start":324215,"byte_end":324232,"line_start":89,"line_end":89,"column_start":49,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":3028},{"krate":0,"index":3029}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\while_some.rs","byte_start":324635,"byte_end":324650,"line_start":111,"line_end":111,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3039},{"krate":0,"index":3040},{"krate":0,"index":3041},{"krate":0,"index":3044},{"krate":0,"index":3045}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":327221,"byte_end":327231,"line_start":55,"line_end":55,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3080}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":327552,"byte_end":327562,"line_start":68,"line_end":68,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3086}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":327898,"byte_end":327906,"line_start":81,"line_end":81,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3092}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":328232,"byte_end":328240,"line_start":95,"line_end":95,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3099}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":328575,"byte_end":328583,"line_start":109,"line_end":109,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3104}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":328876,"byte_end":328884,"line_start":122,"line_end":122,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3110}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":329194,"byte_end":329201,"line_start":135,"line_end":135,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3117}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":329671,"byte_end":329678,"line_start":151,"line_end":151,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3125}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":330075,"byte_end":330082,"line_start":166,"line_end":166,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3131}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":330437,"byte_end":330444,"line_start":180,"line_end":180,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3138}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":330807,"byte_end":330817,"line_start":194,"line_end":194,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3143}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":331425,"byte_end":331435,"line_start":217,"line_end":217,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3150}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":331747,"byte_end":331753,"line_start":230,"line_end":230,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3153}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":332698,"byte_end":332704,"line_start":259,"line_end":259,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3160}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":332988,"byte_end":332994,"line_start":269,"line_end":269,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3164}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":333285,"byte_end":333291,"line_start":279,"line_end":279,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3168}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":333597,"byte_end":333603,"line_start":289,"line_end":289,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3173}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":334552,"byte_end":334560,"line_start":320,"line_end":320,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3181}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":334871,"byte_end":334879,"line_start":333,"line_end":333,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3187}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":335316,"byte_end":335319,"line_start":349,"line_end":349,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3193}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":336356,"byte_end":336362,"line_start":30,"line_end":30,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3204},{"krate":0,"index":3205}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":337211,"byte_end":337217,"line_start":57,"line_end":57,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3209},{"krate":0,"index":3210}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":337667,"byte_end":337681,"line_start":79,"line_end":79,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3217},{"krate":0,"index":3218},{"krate":0,"index":3219}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":338732,"byte_end":338739,"line_start":126,"line_end":126,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3225},{"krate":0,"index":3226},{"krate":0,"index":3228}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":339057,"byte_end":339064,"line_start":144,"line_end":144,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3231},{"krate":0,"index":3233},{"krate":0,"index":3235}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":339676,"byte_end":339691,"line_start":176,"line_end":176,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3242},{"krate":0,"index":3243},{"krate":0,"index":3244},{"krate":0,"index":3245}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":340488,"byte_end":340492,"line_start":210,"line_end":210,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3252},{"krate":0,"index":3253},{"krate":0,"index":3254}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":340870,"byte_end":340874,"line_start":229,"line_end":229,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3257}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":341003,"byte_end":341007,"line_start":236,"line_end":236,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3260}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":344029,"byte_end":344034,"line_start":94,"line_end":94,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3299},{"krate":0,"index":3300},{"krate":0,"index":3301},{"krate":0,"index":3304}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":344915,"byte_end":344924,"line_start":130,"line_end":130,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3316},{"krate":0,"index":3317},{"krate":0,"index":3318}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":345961,"byte_end":345973,"line_start":172,"line_end":172,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3336},{"krate":0,"index":3337},{"krate":0,"index":3338}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":346608,"byte_end":346614,"line_start":200,"line_end":200,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3354},{"krate":0,"index":3355},{"krate":0,"index":3357}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":348015,"byte_end":348021,"line_start":252,"line_end":252,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3372},{"krate":0,"index":3373},{"krate":0,"index":3375}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":348962,"byte_end":348975,"line_start":292,"line_end":292,"column_start":41,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3390},{"krate":0,"index":3391},{"krate":0,"index":3392},{"krate":0,"index":3393},{"krate":0,"index":3394},{"krate":0,"index":3395}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":350238,"byte_end":350251,"line_start":338,"line_end":338,"column_start":50,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3402},{"krate":0,"index":3403}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":350919,"byte_end":350930,"line_start":367,"line_end":367,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3418},{"krate":0,"index":3419},{"krate":0,"index":3420},{"krate":0,"index":3421}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":351671,"byte_end":351683,"line_start":400,"line_end":400,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3432}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":352767,"byte_end":352775,"line_start":446,"line_end":446,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3452},{"krate":0,"index":3453},{"krate":0,"index":3454}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":353901,"byte_end":353906,"line_start":36,"line_end":36,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3476}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":353996,"byte_end":354001,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3479}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":354137,"byte_end":354142,"line_start":48,"line_end":48,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3482},{"krate":0,"index":3483},{"krate":0,"index":3485}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":354428,"byte_end":354433,"line_start":63,"line_end":63,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3488},{"krate":0,"index":3490},{"krate":0,"index":3491}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":354913,"byte_end":354926,"line_start":86,"line_end":86,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3499},{"krate":0,"index":3500},{"krate":0,"index":3501},{"krate":0,"index":3502},{"krate":0,"index":3503}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\once.rs","byte_start":356225,"byte_end":356229,"line_start":34,"line_end":34,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3515},{"krate":0,"index":3516},{"krate":0,"index":3518}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\once.rs","byte_start":356515,"byte_end":356519,"line_start":49,"line_end":49,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3521},{"krate":0,"index":3523},{"krate":0,"index":3524}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":31135,"byte_end":31136,"line_start":255,"line_end":255,"column_start":67,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":3541},{"krate":0,"index":3542},{"krate":0,"index":3543}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":32644,"byte_end":32645,"line_start":302,"line_end":302,"column_start":70,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":3552},{"krate":0,"index":3553},{"krate":0,"index":3554}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":88986,"byte_end":88987,"line_start":1974,"line_end":1974,"column_start":52,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3724},{"krate":0,"index":3725},{"krate":0,"index":3726}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":112430,"byte_end":112436,"line_start":2698,"line_end":2698,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5567},{"krate":0,"index":3801},{"krate":0,"index":3802},{"krate":0,"index":3803},{"krate":0,"index":3804},{"krate":0,"index":3805}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":112761,"byte_end":112767,"line_start":2715,"line_end":2715,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5568},{"krate":0,"index":3809},{"krate":0,"index":3810},{"krate":0,"index":3811},{"krate":0,"index":3812},{"krate":0,"index":3813}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":357898,"byte_end":357904,"line_start":27,"line_end":27,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3823},{"krate":0,"index":3824},{"krate":0,"index":3825}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":358077,"byte_end":358085,"line_start":36,"line_end":36,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3828},{"krate":0,"index":3829},{"krate":0,"index":3831}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":358380,"byte_end":358388,"line_start":51,"line_end":51,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3834},{"krate":0,"index":3836},{"krate":0,"index":3837}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":359550,"byte_end":359554,"line_start":92,"line_end":92,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3842}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":361035,"byte_end":361049,"line_start":151,"line_end":151,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3860},{"krate":0,"index":3861},{"krate":0,"index":3862},{"krate":0,"index":3863}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":361661,"byte_end":361667,"line_start":174,"line_end":174,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3867}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":364277,"byte_end":364282,"line_start":50,"line_end":50,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3889},{"krate":0,"index":3890},{"krate":0,"index":3891}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":364559,"byte_end":364571,"line_start":66,"line_end":66,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3897},{"krate":0,"index":3898},{"krate":0,"index":3899}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":372874,"byte_end":372878,"line_start":49,"line_end":49,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3911}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":373452,"byte_end":373466,"line_start":63,"line_end":63,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3914},{"krate":0,"index":3915},{"krate":0,"index":3916}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\result.rs","byte_start":377883,"byte_end":377889,"line_start":20,"line_end":20,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3928},{"krate":0,"index":3929},{"krate":0,"index":3930}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\result.rs","byte_start":378328,"byte_end":378332,"line_start":42,"line_end":42,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3934}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\result.rs","byte_start":379590,"byte_end":379596,"line_start":93,"line_end":93,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3953}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mergesort.rs","byte_start":409282,"byte_end":409292,"line_start":33,"line_end":33,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3976}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mergesort.rs","byte_start":412242,"byte_end":412248,"line_start":103,"line_end":103,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3985}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mergesort.rs","byte_start":412497,"byte_end":412510,"line_start":115,"line_end":115,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3992}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mergesort.rs","byte_start":416236,"byte_end":416245,"line_start":218,"line_end":218,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4003}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mergesort.rs","byte_start":427687,"byte_end":427692,"line_start":522,"line_end":522,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4027}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\quicksort.rs","byte_start":436879,"byte_end":436890,"line_start":22,"line_end":22,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4050}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\quicksort.rs","byte_start":437120,"byte_end":437126,"line_start":35,"line_end":35,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4056}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\quicksort.rs","byte_start":437333,"byte_end":437343,"line_start":47,"line_end":47,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4063}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":396083,"byte_end":396087,"line_start":450,"line_end":450,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4196}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":396214,"byte_end":396218,"line_start":456,"line_end":456,"column_start":51,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4200},{"krate":0,"index":4201},{"krate":0,"index":4203}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":396544,"byte_end":396548,"line_start":471,"line_end":471,"column_start":58,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4207},{"krate":0,"index":4209},{"krate":0,"index":4210}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":397059,"byte_end":397071,"line_start":495,"line_end":495,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4219},{"krate":0,"index":4220},{"krate":0,"index":4221},{"krate":0,"index":4222}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":397638,"byte_end":397644,"line_start":516,"line_end":516,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4226}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":397773,"byte_end":397779,"line_start":522,"line_end":522,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4230},{"krate":0,"index":4231},{"krate":0,"index":4233}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":398107,"byte_end":398113,"line_start":537,"line_end":537,"column_start":58,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":4237},{"krate":0,"index":4239},{"krate":0,"index":4240}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":398744,"byte_end":398758,"line_start":565,"line_end":565,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4250},{"krate":0,"index":4251},{"krate":0,"index":4252},{"krate":0,"index":4253}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":399615,"byte_end":399622,"line_start":596,"line_end":596,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4257}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":399752,"byte_end":399759,"line_start":602,"line_end":602,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4261},{"krate":0,"index":4262},{"krate":0,"index":4264}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":400087,"byte_end":400094,"line_start":617,"line_end":617,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":4268},{"krate":0,"index":4270},{"krate":0,"index":4271}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":400776,"byte_end":400791,"line_start":646,"line_end":646,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4281},{"krate":0,"index":4282},{"krate":0,"index":4283},{"krate":0,"index":4284}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":401674,"byte_end":401681,"line_start":677,"line_end":677,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4288},{"krate":0,"index":4289},{"krate":0,"index":4291}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":402011,"byte_end":402018,"line_start":692,"line_end":692,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":4295},{"krate":0,"index":4297},{"krate":0,"index":4298}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":402539,"byte_end":402554,"line_start":716,"line_end":716,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4307},{"krate":0,"index":4308},{"krate":0,"index":4309},{"krate":0,"index":4310}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":403201,"byte_end":403210,"line_start":740,"line_end":740,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4314},{"krate":0,"index":4315},{"krate":0,"index":4317}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":403542,"byte_end":403551,"line_start":755,"line_end":755,"column_start":58,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":4321},{"krate":0,"index":4323},{"krate":0,"index":4324}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":404192,"byte_end":404209,"line_start":783,"line_end":783,"column_start":43,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4334},{"krate":0,"index":4335},{"krate":0,"index":4336},{"krate":0,"index":4337}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":405053,"byte_end":405058,"line_start":813,"line_end":813,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4348}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":405241,"byte_end":405246,"line_start":822,"line_end":822,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4353}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":405442,"byte_end":405447,"line_start":828,"line_end":828,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4358},{"krate":0,"index":4359}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":406941,"byte_end":406949,"line_start":889,"line_end":889,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4382}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":407174,"byte_end":407182,"line_start":897,"line_end":897,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4387},{"krate":0,"index":4388}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":479613,"byte_end":479615,"line_start":345,"line_end":345,"column_start":54,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":6039},{"krate":0,"index":4458},{"krate":0,"index":4459},{"krate":0,"index":4460},{"krate":0,"index":4461},{"krate":0,"index":4464},{"krate":0,"index":4467}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":480873,"byte_end":480878,"line_start":398,"line_end":398,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4476},{"krate":0,"index":4477}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":481138,"byte_end":481151,"line_start":409,"line_end":409,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4481},{"krate":0,"index":4482},{"krate":0,"index":4483}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":481950,"byte_end":481961,"line_start":443,"line_end":443,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4491},{"krate":0,"index":4492}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":482312,"byte_end":482331,"line_start":458,"line_end":458,"column_start":33,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4496},{"krate":0,"index":4497},{"krate":0,"index":4498}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":483318,"byte_end":483323,"line_start":498,"line_end":498,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4506},{"krate":0,"index":4507}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":483581,"byte_end":483594,"line_start":509,"line_end":509,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4511},{"krate":0,"index":4512},{"krate":0,"index":4513}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":484351,"byte_end":484362,"line_start":542,"line_end":542,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4520},{"krate":0,"index":4521}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":484627,"byte_end":484646,"line_start":553,"line_end":553,"column_start":33,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4525},{"krate":0,"index":4526},{"krate":0,"index":4527}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":485387,"byte_end":485392,"line_start":583,"line_end":583,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4532}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":485542,"byte_end":485547,"line_start":589,"line_end":589,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4536},{"krate":0,"index":4537}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":487207,"byte_end":487222,"line_start":649,"line_end":649,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4558}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":487376,"byte_end":487399,"line_start":655,"line_end":655,"column_start":36,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":4563}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":487707,"byte_end":487722,"line_start":664,"line_end":664,"column_start":44,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":4567},{"krate":0,"index":4568}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":488070,"byte_end":488093,"line_start":676,"line_end":676,"column_start":58,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":4574},{"krate":0,"index":4575},{"krate":0,"index":4577}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":488906,"byte_end":488911,"line_start":707,"line_end":707,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4581},{"krate":0,"index":4582}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":489599,"byte_end":489614,"line_start":733,"line_end":733,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4587},{"krate":0,"index":4588}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":490304,"byte_end":490311,"line_start":761,"line_end":761,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4600},{"krate":0,"index":4601}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":490688,"byte_end":490703,"line_start":776,"line_end":776,"column_start":51,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":4607},{"krate":0,"index":4608},{"krate":0,"index":4609}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":491747,"byte_end":491759,"line_start":818,"line_end":818,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4621},{"krate":0,"index":4622}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":492172,"byte_end":492192,"line_start":834,"line_end":834,"column_start":51,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":4628},{"krate":0,"index":4629},{"krate":0,"index":4630}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":493363,"byte_end":493366,"line_start":18,"line_end":18,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4638},{"krate":0,"index":4639},{"krate":0,"index":4640}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":493539,"byte_end":493547,"line_start":27,"line_end":27,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4643},{"krate":0,"index":4644},{"krate":0,"index":4646}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":493844,"byte_end":493852,"line_start":42,"line_end":42,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4649},{"krate":0,"index":4651},{"krate":0,"index":4652}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":494975,"byte_end":494986,"line_start":80,"line_end":80,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4661},{"krate":0,"index":4662},{"krate":0,"index":4663},{"krate":0,"index":4664}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":495650,"byte_end":495661,"line_start":100,"line_end":100,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4668}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":496030,"byte_end":496040,"line_start":115,"line_end":115,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4676},{"krate":0,"index":4677},{"krate":0,"index":4678}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":496362,"byte_end":496372,"line_start":129,"line_end":129,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4682}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":496577,"byte_end":496587,"line_start":136,"line_end":136,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4686}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":496693,"byte_end":496703,"line_start":142,"line_end":142,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4690}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\par_either.rs","byte_start":497751,"byte_end":497757,"line_start":6,"line_end":6,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4702},{"krate":0,"index":4703},{"krate":0,"index":4705}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\par_either.rs","byte_start":498277,"byte_end":498283,"line_start":28,"line_end":28,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4709},{"krate":0,"index":4711},{"krate":0,"index":4712}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\par_either.rs","byte_start":499077,"byte_end":499083,"line_start":59,"line_end":59,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4718}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":3935,"byte_end":3946,"line_start":104,"line_end":104,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":60}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\mod.rs","byte_start":12459,"byte_end":12470,"line_start":24,"line_end":24,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":62}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\mod.rs","byte_start":12480,"byte_end":12489,"line_start":25,"line_end":25,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":76}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\mod.rs","byte_start":12499,"byte_end":12508,"line_start":26,"line_end":26,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":86}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\mod.rs","byte_start":12518,"byte_end":12526,"line_start":27,"line_end":27,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":95}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\mod.rs","byte_start":12536,"byte_end":12544,"line_start":28,"line_end":28,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":108}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\mod.rs","byte_start":12554,"byte_end":12565,"line_start":29,"line_end":29,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":120}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\mod.rs","byte_start":12575,"byte_end":12584,"line_start":30,"line_end":30,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":129}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":3956,"byte_end":3960,"line_start":105,"line_end":105,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":151}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27112,"byte_end":27120,"line_start":117,"line_end":117,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1090}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":3970,"byte_end":3976,"line_start":106,"line_end":106,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3814}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":3986,"byte_end":3993,"line_start":107,"line_end":107,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":3870}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4003,"byte_end":4008,"line_start":108,"line_end":108,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3882}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4018,"byte_end":4033,"line_start":109,"line_end":109,"column_start":9,"column_end":24},"ref_id":{"krate":0,"index":3905}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4043,"byte_end":4049,"line_start":110,"line_end":110,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3920}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4059,"byte_end":4064,"line_start":111,"line_end":111,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3956}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4074,"byte_end":4077,"line_start":112,"line_end":112,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":4401}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4087,"byte_end":4090,"line_start":113,"line_end":113,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":4632}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\split_producer.rs","byte_start":8003,"byte_end":8008,"line_start":17,"line_end":17,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1391},"to":{"krate":0,"index":34}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\split_producer.rs","byte_start":8434,"byte_end":8447,"line_start":29,"line_end":29,"column_start":16,"column_end":29},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":27},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\split_producer.rs","byte_start":9915,"byte_end":9928,"line_start":77,"line_end":77,"column_start":38,"column_end":51},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":27},"to":{"krate":0,"index":1132}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\binary_heap.rs","byte_start":13045,"byte_end":13055,"line_start":18,"line_end":18,"column_start":46,"column_end":56},"kind":{"Impl":{"id":2}},"from":{"krate":5,"index":289},"to":{"krate":0,"index":3529}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\binary_heap.rs","byte_start":13517,"byte_end":13521,"line_start":40,"line_end":40,"column_start":35,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":4773},"to":{"krate":2,"index":2002}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\btree_map.rs","byte_start":14710,"byte_end":14714,"line_start":34,"line_end":34,"column_start":44,"column_end":48},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":4825},"to":{"krate":2,"index":2002}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\btree_set.rs","byte_start":16219,"byte_end":16223,"line_start":34,"line_end":34,"column_start":40,"column_end":44},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":4895},"to":{"krate":2,"index":2002}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\hash_map.rs","byte_start":17476,"byte_end":17480,"line_start":35,"line_end":35,"column_start":50,"column_end":54},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":4940},"to":{"krate":2,"index":2002}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\hash_set.rs","byte_start":19120,"byte_end":19124,"line_start":35,"line_end":35,"column_start":41,"column_end":45},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":5013},"to":{"krate":2,"index":2002}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\linked_list.rs","byte_start":20214,"byte_end":20218,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":5057},"to":{"krate":2,"index":2002}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\vec_deque.rs","byte_start":21609,"byte_end":21613,"line_start":35,"line_end":35,"column_start":29,"column_end":33},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":5129},"to":{"krate":2,"index":2002}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":114671,"byte_end":114676,"line_start":46,"line_end":46,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1391},"to":{"krate":0,"index":183}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":114835,"byte_end":114836,"line_start":51,"line_end":51,"column_start":45,"column_end":46},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":186},"to":{"krate":0,"index":183}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":115346,"byte_end":115356,"line_start":71,"line_end":71,"column_start":50,"column_end":60},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":5175},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":116325,"byte_end":116345,"line_start":106,"line_end":106,"column_start":41,"column_end":61},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":193},"to":{"krate":2,"index":2002}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":116637,"byte_end":116657,"line_start":117,"line_end":117,"column_start":60,"column_end":80},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":193},"to":{"krate":0,"index":1132}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":120561,"byte_end":120566,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":5184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":120794,"byte_end":120799,"line_start":34,"line_end":34,"column_start":33,"column_end":38},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":5184},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":121902,"byte_end":121907,"line_start":67,"line_end":67,"column_start":40,"column_end":45},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":5184},"to":{"krate":0,"index":3727}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":122842,"byte_end":122851,"line_start":103,"line_end":103,"column_start":51,"column_end":60},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":243},"to":{"krate":0,"index":1095}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":123529,"byte_end":123538,"line_start":128,"line_end":128,"column_start":51,"column_end":60},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":255},"to":{"krate":0,"index":1095}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":124207,"byte_end":124220,"line_start":158,"line_end":158,"column_start":12,"column_end":25},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":267},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":124403,"byte_end":124416,"line_start":168,"line_end":168,"column_start":25,"column_end":38},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":267},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":126028,"byte_end":126036,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":126250,"byte_end":126258,"line_start":237,"line_end":237,"column_start":25,"column_end":33},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":288},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":126554,"byte_end":126562,"line_start":253,"line_end":253,"column_start":34,"column_end":42},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":288},"to":{"krate":2,"index":3321}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":126683,"byte_end":126691,"line_start":260,"line_end":260,"column_start":36,"column_end":44},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":288},"to":{"krate":2,"index":3301}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\find.rs","byte_start":127315,"byte_end":127327,"line_start":20,"line_end":20,"column_start":13,"column_end":25},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\find.rs","byte_start":127481,"byte_end":127493,"line_start":26,"line_end":26,"column_start":36,"column_end":48},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":318},"to":{"krate":0,"index":1109}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\find.rs","byte_start":128078,"byte_end":128090,"line_start":52,"line_end":52,"column_start":45,"column_end":57},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":318},"to":{"krate":0,"index":1128}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\find.rs","byte_start":128454,"byte_end":128464,"line_start":72,"line_end":72,"column_start":30,"column_end":40},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":343},"to":{"krate":0,"index":1117}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\find.rs","byte_start":129350,"byte_end":129361,"line_start":112,"line_end":112,"column_start":32,"column_end":43},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":361},"to":{"krate":0,"index":1125}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\find_first_last\\mod.rs","byte_start":131887,"byte_end":131899,"line_start":69,"line_end":69,"column_start":13,"column_end":25},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":380},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\find_first_last\\mod.rs","byte_start":132449,"byte_end":132461,"line_start":88,"line_end":88,"column_start":32,"column_end":44},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":380},"to":{"krate":0,"index":1109}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\find_first_last\\mod.rs","byte_start":133527,"byte_end":133539,"line_start":129,"line_end":129,"column_start":41,"column_end":53},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":380},"to":{"krate":0,"index":1128}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\find_first_last\\mod.rs","byte_start":135101,"byte_end":135111,"line_start":174,"line_end":174,"column_start":51,"column_end":61},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":409},"to":{"krate":0,"index":1117}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\find_first_last\\mod.rs","byte_start":136819,"byte_end":136830,"line_start":231,"line_end":231,"column_start":32,"column_end":43},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":426},"to":{"krate":0,"index":1125}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":137653,"byte_end":137659,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":5205},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":137858,"byte_end":137864,"line_start":33,"line_end":33,"column_start":30,"column_end":36},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":5205},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":138197,"byte_end":138203,"line_start":51,"line_end":51,"column_start":37,"column_end":43},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":5205},"to":{"krate":0,"index":3727}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":138901,"byte_end":138909,"line_start":83,"line_end":83,"column_start":45,"column_end":53},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":453},"to":{"krate":0,"index":1095}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":139482,"byte_end":139495,"line_start":112,"line_end":112,"column_start":22,"column_end":35},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":464},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":140614,"byte_end":140622,"line_start":159,"line_end":159,"column_start":22,"column_end":30},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":477},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":141300,"byte_end":141308,"line_start":185,"line_end":185,"column_start":31,"column_end":39},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":477},"to":{"krate":2,"index":3321}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":141469,"byte_end":141477,"line_start":195,"line_end":195,"column_start":33,"column_end":41},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":477},"to":{"krate":2,"index":3301}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\collect\\consumer.rs","byte_start":148736,"byte_end":148751,"line_start":30,"line_end":30,"column_start":24,"column_end":39},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\collect\\consumer.rs","byte_start":149044,"byte_end":149059,"line_start":38,"line_end":38,"column_start":40,"column_end":55},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":513},"to":{"krate":0,"index":1109}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\collect\\consumer.rs","byte_start":150086,"byte_end":150099,"line_start":72,"line_end":72,"column_start":38,"column_end":51},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":518},"to":{"krate":0,"index":1117}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\collect\\consumer.rs","byte_start":151110,"byte_end":151125,"line_start":106,"line_end":106,"column_start":49,"column_end":64},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":513},"to":{"krate":0,"index":1128}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\collect\\mod.rs","byte_start":144484,"byte_end":144491,"line_start":77,"line_end":77,"column_start":24,"column_end":31},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\collect\\mod.rs","byte_start":146157,"byte_end":146160,"line_start":122,"line_end":122,"column_start":31,"column_end":34},"kind":{"Impl":{"id":77}},"from":{"krate":5,"index":3563},"to":{"krate":0,"index":3788}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\enumerate.rs","byte_start":159602,"byte_end":159611,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":5215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\enumerate.rs","byte_start":159804,"byte_end":159813,"line_start":28,"line_end":28,"column_start":30,"column_end":39},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":5215},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\enumerate.rs","byte_start":160157,"byte_end":160166,"line_start":46,"line_end":46,"column_start":37,"column_end":46},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":5215},"to":{"krate":0,"index":3727}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\enumerate.rs","byte_start":160672,"byte_end":160680,"line_start":68,"line_end":68,"column_start":45,"column_end":53},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":602},"to":{"krate":0,"index":1095}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\enumerate.rs","byte_start":161264,"byte_end":161281,"line_start":92,"line_end":92,"column_start":22,"column_end":39},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":611},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter.rs","byte_start":163087,"byte_end":163093,"line_start":18,"line_end":18,"column_start":48,"column_end":54},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":5224},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter.rs","byte_start":163253,"byte_end":163259,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":5224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter.rs","byte_start":163470,"byte_end":163476,"line_start":34,"line_end":34,"column_start":33,"column_end":39},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":5224},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter.rs","byte_start":164024,"byte_end":164038,"line_start":58,"line_end":58,"column_start":16,"column_end":30},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":644},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter.rs","byte_start":164189,"byte_end":164203,"line_start":64,"line_end":64,"column_start":39,"column_end":53},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":644},"to":{"krate":0,"index":1109}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter.rs","byte_start":164947,"byte_end":164961,"line_start":94,"line_end":94,"column_start":48,"column_end":62},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":644},"to":{"krate":0,"index":1128}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter.rs","byte_start":165348,"byte_end":165360,"line_start":113,"line_end":113,"column_start":33,"column_end":45},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":673},"to":{"krate":0,"index":1117}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter_map.rs","byte_start":166636,"byte_end":166645,"line_start":18,"line_end":18,"column_start":48,"column_end":57},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":5233},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter_map.rs","byte_start":166852,"byte_end":166861,"line_start":26,"line_end":26,"column_start":30,"column_end":39},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":5233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter_map.rs","byte_start":167050,"byte_end":167059,"line_start":33,"line_end":33,"column_start":36,"column_end":45},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":5233},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter_map.rs","byte_start":167626,"byte_end":167643,"line_start":58,"line_end":58,"column_start":20,"column_end":37},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter_map.rs","byte_start":167796,"byte_end":167813,"line_start":64,"line_end":64,"column_start":38,"column_end":55},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":710},"to":{"krate":0,"index":1109}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter_map.rs","byte_start":168599,"byte_end":168616,"line_start":95,"line_end":95,"column_start":47,"column_end":64},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":710},"to":{"krate":0,"index":1128}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter_map.rs","byte_start":169021,"byte_end":169036,"line_start":114,"line_end":114,"column_start":36,"column_end":51},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":741},"to":{"krate":0,"index":1117}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flat_map.rs","byte_start":170338,"byte_end":170345,"line_start":18,"line_end":18,"column_start":48,"column_end":55},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":5242},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flat_map.rs","byte_start":170524,"byte_end":170531,"line_start":24,"line_end":24,"column_start":30,"column_end":37},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":5242},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flat_map.rs","byte_start":170711,"byte_end":170718,"line_start":31,"line_end":31,"column_start":37,"column_end":44},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":5242},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flat_map.rs","byte_start":171333,"byte_end":171348,"line_start":59,"line_end":59,"column_start":16,"column_end":31},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":779},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flat_map.rs","byte_start":171493,"byte_end":171508,"line_start":65,"line_end":65,"column_start":38,"column_end":53},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":779},"to":{"krate":0,"index":1109}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flat_map.rs","byte_start":172300,"byte_end":172315,"line_start":97,"line_end":97,"column_start":47,"column_end":62},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":779},"to":{"krate":0,"index":1128}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flat_map.rs","byte_start":172759,"byte_end":172772,"line_start":118,"line_end":118,"column_start":36,"column_end":49},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":810},"to":{"krate":0,"index":1117}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flatten.rs","byte_start":174344,"byte_end":174351,"line_start":16,"line_end":16,"column_start":13,"column_end":20},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":5251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flatten.rs","byte_start":174585,"byte_end":174592,"line_start":27,"line_end":27,"column_start":34,"column_end":41},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":5251},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":174976,"byte_end":174980,"line_start":6,"line_end":6,"column_start":19,"column_end":23},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":5260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":175777,"byte_end":175781,"line_start":35,"line_end":35,"column_start":52,"column_end":56},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":5260},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":175971,"byte_end":175975,"line_start":41,"line_end":41,"column_start":40,"column_end":44},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":5260},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":176592,"byte_end":176604,"line_start":69,"line_end":69,"column_start":42,"column_end":54},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":869},"to":{"krate":0,"index":1109}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":177460,"byte_end":177472,"line_start":105,"line_end":105,"column_start":51,"column_end":63},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":869},"to":{"krate":0,"index":1128}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":177945,"byte_end":177955,"line_start":130,"line_end":130,"column_start":37,"column_end":47},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":899},"to":{"krate":0,"index":1117}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":178952,"byte_end":178960,"line_start":175,"line_end":175,"column_start":15,"column_end":23},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":5272},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":179749,"byte_end":179757,"line_start":203,"line_end":203,"column_start":58,"column_end":66},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":5272},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":180011,"byte_end":180019,"line_start":212,"line_end":212,"column_start":36,"column_end":44},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":5272},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":180591,"byte_end":180607,"line_start":239,"line_end":239,"column_start":38,"column_end":54},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":937},"to":{"krate":0,"index":1109}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":181525,"byte_end":181541,"line_start":278,"line_end":278,"column_start":47,"column_end":63},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":937},"to":{"krate":0,"index":1128}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\for_each.rs","byte_start":182274,"byte_end":182289,"line_start":19,"line_end":19,"column_start":32,"column_end":47},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":973},"to":{"krate":0,"index":1109}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\for_each.rs","byte_start":182685,"byte_end":182700,"line_start":40,"line_end":40,"column_start":30,"column_end":45},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":973},"to":{"krate":0,"index":1117}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\for_each.rs","byte_start":183142,"byte_end":183157,"line_start":66,"line_end":66,"column_start":41,"column_end":56},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":973},"to":{"krate":0,"index":1128}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":184009,"byte_end":184012,"line_start":21,"line_end":21,"column_start":37,"column_end":40},"kind":{"Impl":{"id":120}},"from":{"krate":5,"index":3563},"to":{"krate":0,"index":3784}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":184281,"byte_end":184289,"line_start":34,"line_end":34,"column_start":37,"column_end":45},"kind":{"Impl":{"id":121}},"from":{"krate":5,"index":1992},"to":{"krate":0,"index":3784}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":184645,"byte_end":184655,"line_start":48,"line_end":48,"column_start":37,"column_end":47},"kind":{"Impl":{"id":122}},"from":{"krate":5,"index":289},"to":{"krate":0,"index":3784}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":184964,"byte_end":184974,"line_start":62,"line_end":62,"column_start":37,"column_end":47},"kind":{"Impl":{"id":123}},"from":{"krate":5,"index":1727},"to":{"krate":0,"index":3784}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":185437,"byte_end":185444,"line_start":78,"line_end":78,"column_start":48,"column_end":55},"kind":{"Impl":{"id":124}},"from":{"krate":1,"index":5940},"to":{"krate":0,"index":3784}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":185978,"byte_end":185986,"line_start":96,"line_end":96,"column_start":45,"column_end":53},"kind":{"Impl":{"id":125}},"from":{"krate":5,"index":933},"to":{"krate":0,"index":3784}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":186285,"byte_end":186292,"line_start":110,"line_end":110,"column_start":40,"column_end":47},"kind":{"Impl":{"id":126}},"from":{"krate":1,"index":5966},"to":{"krate":0,"index":3784}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":186614,"byte_end":186622,"line_start":124,"line_end":124,"column_start":37,"column_end":45},"kind":{"Impl":{"id":127}},"from":{"krate":5,"index":3997},"to":{"krate":0,"index":3784}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":186900,"byte_end":186906,"line_start":137,"line_end":137,"column_start":37,"column_end":43},"kind":{"Impl":{"id":128}},"from":{"krate":5,"index":4679},"to":{"krate":0,"index":3784}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":187167,"byte_end":187173,"line_start":147,"line_end":147,"column_start":45,"column_end":51},"kind":{"Impl":{"id":129}},"from":{"krate":5,"index":4679},"to":{"krate":0,"index":3784}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":187440,"byte_end":187446,"line_start":157,"line_end":157,"column_start":44,"column_end":50},"kind":{"Impl":{"id":130}},"from":{"krate":5,"index":4679},"to":{"krate":0,"index":3784}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":187709,"byte_end":187715,"line_start":167,"line_end":167,"column_start":39,"column_end":45},"kind":{"Impl":{"id":131}},"from":{"krate":5,"index":4679},"to":{"krate":0,"index":3784}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":187985,"byte_end":187991,"line_start":177,"line_end":177,"column_start":49,"column_end":55},"kind":{"Impl":{"id":132}},"from":{"krate":5,"index":4679},"to":{"krate":0,"index":3784}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":188434,"byte_end":188437,"line_start":191,"line_end":191,"column_start":52,"column_end":55},"kind":{"Impl":{"id":133}},"from":{"krate":5,"index":2916},"to":{"krate":0,"index":3784}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":192085,"byte_end":192089,"line_start":59,"line_end":59,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":1386},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":192092,"byte_end":192097,"line_start":59,"line_end":59,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":1391},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":195099,"byte_end":195103,"line_start":128,"line_end":128,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1386},"to":{"krate":0,"index":1109}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":195106,"byte_end":195111,"line_start":128,"line_end":128,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":1391},"to":{"krate":0,"index":1109}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":196419,"byte_end":196424,"line_start":159,"line_end":159,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1391},"to":{"krate":0,"index":1117}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":198439,"byte_end":198447,"line_start":213,"line_end":213,"column_start":33,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":1109},"to":{"krate":0,"index":1128}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":199552,"byte_end":199556,"line_start":236,"line_end":236,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1386},"to":{"krate":0,"index":1132}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":199559,"byte_end":199564,"line_start":236,"line_end":236,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":1391},"to":{"krate":0,"index":1132}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":200552,"byte_end":200560,"line_start":263,"line_end":263,"column_start":6,"column_end":14},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":5284},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":201679,"byte_end":201693,"line_start":302,"line_end":302,"column_start":6,"column_end":20},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":5289},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":204051,"byte_end":204059,"line_start":364,"line_end":364,"column_start":40,"column_end":48},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1146},"to":{"krate":0,"index":1095}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":208322,"byte_end":208329,"line_start":8,"line_end":8,"column_start":19,"column_end":26},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":5295},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":209231,"byte_end":209238,"line_start":39,"line_end":39,"column_start":55,"column_end":62},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":5295},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":209434,"byte_end":209441,"line_start":45,"line_end":45,"column_start":40,"column_end":47},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":5295},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":210145,"byte_end":210160,"line_start":75,"line_end":75,"column_start":42,"column_end":57},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1203},"to":{"krate":0,"index":1109}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":211051,"byte_end":211066,"line_start":111,"line_end":111,"column_start":51,"column_end":66},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1203},"to":{"krate":0,"index":1128}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":211588,"byte_end":211601,"line_start":136,"line_end":136,"column_start":36,"column_end":49},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1235},"to":{"krate":0,"index":1117}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":212327,"byte_end":212338,"line_start":165,"line_end":165,"column_start":15,"column_end":26},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":5310},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":213179,"byte_end":213190,"line_start":194,"line_end":194,"column_start":56,"column_end":67},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":5310},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":213471,"byte_end":213482,"line_start":206,"line_end":206,"column_start":36,"column_end":47},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":5310},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":214096,"byte_end":214115,"line_start":234,"line_end":234,"column_start":38,"column_end":57},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1271},"to":{"krate":0,"index":1109}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":215078,"byte_end":215097,"line_start":274,"line_end":274,"column_start":47,"column_end":66},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1271},"to":{"krate":0,"index":1128}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\reduce.rs","byte_start":215994,"byte_end":216008,"line_start":23,"line_end":23,"column_start":26,"column_end":40},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1310},"to":{"krate":2,"index":1394}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\reduce.rs","byte_start":216050,"byte_end":216064,"line_start":25,"line_end":25,"column_start":27,"column_end":41},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1310},"to":{"krate":2,"index":2002}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\reduce.rs","byte_start":216166,"byte_end":216180,"line_start":31,"line_end":31,"column_start":36,"column_end":50},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1310},"to":{"krate":0,"index":1109}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\reduce.rs","byte_start":216707,"byte_end":216721,"line_start":57,"line_end":57,"column_start":45,"column_end":59},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1310},"to":{"krate":0,"index":1128}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\reduce.rs","byte_start":216970,"byte_end":216984,"line_start":72,"line_end":72,"column_start":35,"column_end":49},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1310},"to":{"krate":0,"index":1125}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\reduce.rs","byte_start":217229,"byte_end":217241,"line_start":86,"line_end":86,"column_start":30,"column_end":42},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1349},"to":{"krate":0,"index":1117}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\skip.rs","byte_start":218356,"byte_end":218360,"line_start":18,"line_end":18,"column_start":9,"column_end":13},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":5322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\skip.rs","byte_start":218592,"byte_end":218596,"line_start":29,"line_end":29,"column_start":30,"column_end":34},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":5322},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\skip.rs","byte_start":218931,"byte_end":218935,"line_start":47,"line_end":47,"column_start":37,"column_end":41},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":5322},"to":{"krate":0,"index":3727}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\skip.rs","byte_start":219516,"byte_end":219524,"line_start":73,"line_end":73,"column_start":45,"column_end":53},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1386},"to":{"krate":0,"index":1095}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce.rs","byte_start":220677,"byte_end":220694,"line_start":29,"line_end":29,"column_start":26,"column_end":43},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1408},"to":{"krate":2,"index":1394}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce.rs","byte_start":220736,"byte_end":220753,"line_start":31,"line_end":31,"column_start":27,"column_end":44},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1408},"to":{"krate":2,"index":2002}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce.rs","byte_start":220855,"byte_end":220872,"line_start":37,"line_end":37,"column_start":36,"column_end":53},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1408},"to":{"krate":0,"index":1109}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce.rs","byte_start":221486,"byte_end":221503,"line_start":64,"line_end":64,"column_start":45,"column_end":62},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1408},"to":{"krate":0,"index":1128}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce.rs","byte_start":221770,"byte_end":221787,"line_start":79,"line_end":79,"column_start":35,"column_end":52},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1408},"to":{"krate":0,"index":1125}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce.rs","byte_start":222267,"byte_end":222282,"line_start":98,"line_end":98,"column_start":30,"column_end":45},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1448},"to":{"krate":0,"index":1117}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce_with.rs","byte_start":223548,"byte_end":223569,"line_start":26,"line_end":26,"column_start":22,"column_end":43},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1475},"to":{"krate":2,"index":1394}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce_with.rs","byte_start":223603,"byte_end":223624,"line_start":28,"line_end":28,"column_start":23,"column_end":44},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1475},"to":{"krate":2,"index":2002}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce_with.rs","byte_start":223718,"byte_end":223739,"line_start":34,"line_end":34,"column_start":32,"column_end":53},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1475},"to":{"krate":0,"index":1109}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce_with.rs","byte_start":224318,"byte_end":224339,"line_start":60,"line_end":60,"column_start":41,"column_end":62},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1475},"to":{"krate":0,"index":1128}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce_with.rs","byte_start":224576,"byte_end":224597,"line_start":74,"line_end":74,"column_start":39,"column_end":60},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1475},"to":{"krate":0,"index":1125}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce_with.rs","byte_start":225256,"byte_end":225275,"line_start":97,"line_end":97,"column_start":30,"column_end":49},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":1508},"to":{"krate":0,"index":1117}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":230591,"byte_end":230596,"line_start":124,"line_end":124,"column_start":29,"column_end":34},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":5332},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":230776,"byte_end":230781,"line_start":130,"line_end":130,"column_start":33,"column_end":38},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":5332},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":231273,"byte_end":231286,"line_start":154,"line_end":154,"column_start":38,"column_end":51},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":1543},"to":{"krate":0,"index":1132}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\take.rs","byte_start":232247,"byte_end":232251,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":5341},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\take.rs","byte_start":232483,"byte_end":232487,"line_start":28,"line_end":28,"column_start":30,"column_end":34},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":5341},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\take.rs","byte_start":232822,"byte_end":232826,"line_start":46,"line_end":46,"column_start":37,"column_end":41},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":5341},"to":{"krate":0,"index":3727}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\take.rs","byte_start":233389,"byte_end":233397,"line_start":72,"line_end":72,"column_start":45,"column_end":53},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":1581},"to":{"krate":0,"index":1095}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":234335,"byte_end":234338,"line_start":20,"line_end":20,"column_start":48,"column_end":51},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":5351},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":234495,"byte_end":234498,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":5351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":234700,"byte_end":234703,"line_start":36,"line_end":36,"column_start":36,"column_end":39},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":5351},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":235177,"byte_end":235180,"line_start":57,"line_end":57,"column_start":43,"column_end":46},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":5351},"to":{"krate":0,"index":3727}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":235922,"byte_end":235930,"line_start":89,"line_end":89,"column_start":51,"column_end":59},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":1624},"to":{"krate":0,"index":1095}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":236613,"byte_end":236624,"line_start":118,"line_end":118,"column_start":32,"column_end":43},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":1637},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":237800,"byte_end":237811,"line_start":172,"line_end":172,"column_start":16,"column_end":27},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":1656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":237952,"byte_end":237963,"line_start":178,"line_end":178,"column_start":38,"column_end":49},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":1656},"to":{"krate":0,"index":1109}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":238702,"byte_end":238713,"line_start":209,"line_end":209,"column_start":47,"column_end":58},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":1656},"to":{"krate":0,"index":1128}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":239108,"byte_end":239117,"line_start":229,"line_end":229,"column_start":36,"column_end":45},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":1687},"to":{"krate":0,"index":1117}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":240354,"byte_end":240361,"line_start":20,"line_end":20,"column_start":58,"column_end":65},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":5360},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":240593,"byte_end":240600,"line_start":29,"line_end":29,"column_start":15,"column_end":22},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":5360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":240831,"byte_end":240838,"line_start":39,"line_end":39,"column_start":39,"column_end":46},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":5360},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":241354,"byte_end":241361,"line_start":61,"line_end":61,"column_start":46,"column_end":53},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":5360},"to":{"krate":0,"index":3727}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":242206,"byte_end":242214,"line_start":96,"line_end":96,"column_start":54,"column_end":62},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":1741},"to":{"krate":0,"index":1095}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":243001,"byte_end":243016,"line_start":128,"line_end":128,"column_start":35,"column_end":50},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":1757},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":244353,"byte_end":244364,"line_start":188,"line_end":188,"column_start":35,"column_end":46},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":1779},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":244745,"byte_end":244756,"line_start":206,"line_end":206,"column_start":46,"column_end":57},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":1779},"to":{"krate":2,"index":3301}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":245047,"byte_end":245058,"line_start":218,"line_end":218,"column_start":44,"column_end":55},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":1779},"to":{"krate":2,"index":3321}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":245376,"byte_end":245391,"line_start":235,"line_end":235,"column_start":19,"column_end":34},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":1809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":245557,"byte_end":245572,"line_start":241,"line_end":241,"column_start":41,"column_end":56},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":1809},"to":{"krate":0,"index":1109}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":246416,"byte_end":246431,"line_start":274,"line_end":274,"column_start":50,"column_end":65},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":1809},"to":{"krate":0,"index":1128}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":246895,"byte_end":246908,"line_start":296,"line_end":296,"column_start":39,"column_end":52},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":1845},"to":{"krate":0,"index":1117}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":248306,"byte_end":248313,"line_start":347,"line_end":347,"column_start":54,"column_end":61},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":5372},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":248486,"byte_end":248493,"line_start":353,"line_end":353,"column_start":18,"column_end":25},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":5372},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":248736,"byte_end":248743,"line_start":363,"line_end":363,"column_start":45,"column_end":52},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":5372},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":249283,"byte_end":249290,"line_start":385,"line_end":385,"column_start":52,"column_end":59},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":5372},"to":{"krate":0,"index":3727}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":250165,"byte_end":250173,"line_start":420,"line_end":420,"column_start":60,"column_end":68},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":1898},"to":{"krate":0,"index":1095}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":250991,"byte_end":251006,"line_start":452,"line_end":452,"column_start":41,"column_end":56},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":1915},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":252464,"byte_end":252479,"line_start":515,"line_end":515,"column_start":22,"column_end":37},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":1938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":252661,"byte_end":252676,"line_start":521,"line_end":521,"column_start":47,"column_end":62},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":1938},"to":{"krate":0,"index":1109}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":253532,"byte_end":253547,"line_start":554,"line_end":554,"column_start":56,"column_end":71},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":1938},"to":{"krate":0,"index":1128}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip.rs","byte_start":254462,"byte_end":254465,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":5384},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip.rs","byte_start":254687,"byte_end":254690,"line_start":30,"line_end":30,"column_start":33,"column_end":36},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":5384},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip.rs","byte_start":255074,"byte_end":255077,"line_start":49,"line_end":49,"column_start":40,"column_end":43},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":5384},"to":{"krate":0,"index":3727}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip.rs","byte_start":255737,"byte_end":255746,"line_start":79,"line_end":79,"column_start":54,"column_end":63},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":2003},"to":{"krate":0,"index":1095}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip.rs","byte_start":256367,"byte_end":256376,"line_start":102,"line_end":102,"column_start":54,"column_end":63},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":2015},"to":{"krate":0,"index":1095}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip.rs","byte_start":257033,"byte_end":257044,"line_start":129,"line_end":129,"column_start":45,"column_end":56},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":2027},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip_eq.rs","byte_start":258453,"byte_end":258458,"line_start":18,"line_end":18,"column_start":12,"column_end":17},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":5397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip_eq.rs","byte_start":258727,"byte_end":258732,"line_start":31,"line_end":31,"column_start":33,"column_end":38},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":5397},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip_eq.rs","byte_start":259124,"byte_end":259129,"line_start":50,"line_end":50,"column_start":40,"column_end":45},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":5397},"to":{"krate":0,"index":3727}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":260246,"byte_end":260256,"line_start":23,"line_end":23,"column_start":12,"column_end":22},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":5409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":260507,"byte_end":260517,"line_start":34,"line_end":34,"column_start":33,"column_end":43},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":5409},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":260894,"byte_end":260904,"line_start":53,"line_end":53,"column_start":40,"column_end":50},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":5409},"to":{"krate":0,"index":3727}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":261800,"byte_end":261809,"line_start":90,"line_end":90,"column_start":51,"column_end":60},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":2089},"to":{"krate":0,"index":1095}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":262619,"byte_end":262628,"line_start":119,"line_end":119,"column_start":51,"column_end":60},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":2103},"to":{"krate":0,"index":1095}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":263409,"byte_end":263427,"line_start":155,"line_end":155,"column_start":12,"column_end":30},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":2117},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":263747,"byte_end":263765,"line_start":171,"line_end":171,"column_start":25,"column_end":43},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":2117},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":266586,"byte_end":266599,"line_start":264,"line_end":264,"column_start":25,"column_end":38},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":2139},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":267732,"byte_end":267745,"line_start":303,"line_end":303,"column_start":36,"column_end":49},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":2139},"to":{"krate":2,"index":3301}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":268306,"byte_end":268319,"line_start":324,"line_end":324,"column_start":34,"column_end":47},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":2139},"to":{"krate":2,"index":3321}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave_shortest.rs","byte_start":269246,"byte_end":269264,"line_start":23,"line_end":23,"column_start":12,"column_end":30},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":5422},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave_shortest.rs","byte_start":269905,"byte_end":269923,"line_start":44,"line_end":44,"column_start":33,"column_end":51},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":5422},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave_shortest.rs","byte_start":270300,"byte_end":270318,"line_start":63,"line_end":63,"column_start":40,"column_end":58},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":5422},"to":{"krate":0,"index":3727}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":271420,"byte_end":271431,"line_start":23,"line_end":23,"column_start":9,"column_end":20},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":5434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":271661,"byte_end":271672,"line_start":34,"line_end":34,"column_start":30,"column_end":41},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":5434},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":272202,"byte_end":272213,"line_start":57,"line_end":57,"column_start":37,"column_end":48},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":5434},"to":{"krate":0,"index":3727}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":273120,"byte_end":273128,"line_start":96,"line_end":96,"column_start":45,"column_end":53},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":2206},"to":{"krate":0,"index":1095}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":273695,"byte_end":273714,"line_start":124,"line_end":124,"column_start":9,"column_end":28},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":2218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":273955,"byte_end":273974,"line_start":138,"line_end":138,"column_start":22,"column_end":41},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":2218},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":276149,"byte_end":276164,"line_start":217,"line_end":217,"column_start":22,"column_end":37},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":2237},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":276936,"byte_end":276951,"line_start":246,"line_end":246,"column_start":33,"column_end":48},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":2237},"to":{"krate":2,"index":3301}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":277599,"byte_end":277614,"line_start":268,"line_end":268,"column_start":31,"column_end":46},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":2237},"to":{"krate":2,"index":3321}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":277962,"byte_end":277981,"line_start":285,"line_end":285,"column_start":12,"column_end":31},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":2254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":278206,"byte_end":278225,"line_start":298,"line_end":298,"column_start":28,"column_end":47},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":2254},"to":{"krate":0,"index":1109}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":279303,"byte_end":279322,"line_start":335,"line_end":335,"column_start":37,"column_end":56},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":2254},"to":{"krate":0,"index":1128}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":279862,"byte_end":279879,"line_start":361,"line_end":361,"column_start":26,"column_end":43},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":2278},"to":{"krate":0,"index":1117}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":281652,"byte_end":281658,"line_start":20,"line_end":20,"column_start":48,"column_end":54},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":5444},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":281818,"byte_end":281824,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":5444},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":282035,"byte_end":282041,"line_start":36,"line_end":36,"column_start":33,"column_end":39},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":5444},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":282503,"byte_end":282509,"line_start":56,"line_end":56,"column_start":40,"column_end":46},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":5444},"to":{"krate":0,"index":3727}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":283250,"byte_end":283258,"line_start":87,"line_end":87,"column_start":48,"column_end":56},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":2324},"to":{"krate":0,"index":1095}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":283939,"byte_end":283953,"line_start":115,"line_end":115,"column_start":29,"column_end":43},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":2336},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":285217,"byte_end":285231,"line_start":171,"line_end":171,"column_start":16,"column_end":30},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":2354},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":285378,"byte_end":285392,"line_start":177,"line_end":177,"column_start":35,"column_end":49},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":2354},"to":{"krate":0,"index":1109}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":286138,"byte_end":286152,"line_start":207,"line_end":207,"column_start":44,"column_end":58},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":2354},"to":{"krate":0,"index":1128}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":286542,"byte_end":286554,"line_start":226,"line_end":226,"column_start":33,"column_end":45},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":2383},"to":{"krate":0,"index":1117}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":287531,"byte_end":287540,"line_start":271,"line_end":271,"column_start":25,"column_end":34},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":5453},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":288493,"byte_end":288502,"line_start":314,"line_end":314,"column_start":34,"column_end":43},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":5453},"to":{"krate":2,"index":3321}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":288609,"byte_end":288618,"line_start":321,"line_end":321,"column_start":36,"column_end":45},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":5453},"to":{"krate":2,"index":3301}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\noop.rs","byte_start":288907,"byte_end":288919,"line_start":5,"line_end":5,"column_start":6,"column_end":18},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":2424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\noop.rs","byte_start":289010,"byte_end":289022,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":2424},"to":{"krate":0,"index":1109}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\noop.rs","byte_start":289366,"byte_end":289378,"line_start":29,"line_end":29,"column_start":23,"column_end":35},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":2424},"to":{"krate":0,"index":1117}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\noop.rs","byte_start":289739,"byte_end":289751,"line_start":51,"line_end":51,"column_start":34,"column_end":46},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":2424},"to":{"krate":0,"index":1128}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\noop.rs","byte_start":289945,"byte_end":289956,"line_start":63,"line_end":63,"column_start":22,"column_end":33},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":2449},"to":{"krate":0,"index":1125}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\rev.rs","byte_start":290510,"byte_end":290513,"line_start":16,"line_end":16,"column_start":9,"column_end":12},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":5466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\rev.rs","byte_start":290694,"byte_end":290697,"line_start":26,"line_end":26,"column_start":30,"column_end":33},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":5466},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\rev.rs","byte_start":291032,"byte_end":291035,"line_start":44,"line_end":44,"column_start":37,"column_end":40},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":5466},"to":{"krate":0,"index":3727}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\rev.rs","byte_start":291605,"byte_end":291613,"line_start":68,"line_end":68,"column_start":45,"column_end":53},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":2473},"to":{"krate":0,"index":1095}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\rev.rs","byte_start":292128,"byte_end":292139,"line_start":92,"line_end":92,"column_start":22,"column_end":33},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":2483},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":293358,"byte_end":293364,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":5475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":293568,"byte_end":293574,"line_start":27,"line_end":27,"column_start":30,"column_end":36},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":5475},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":293909,"byte_end":293915,"line_start":45,"line_end":45,"column_start":37,"column_end":43},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":5475},"to":{"krate":0,"index":3727}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":294493,"byte_end":294501,"line_start":71,"line_end":71,"column_start":45,"column_end":53},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":2516},"to":{"krate":0,"index":1095}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":295136,"byte_end":295150,"line_start":98,"line_end":98,"column_start":22,"column_end":36},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":2526},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":296442,"byte_end":296448,"line_start":151,"line_end":151,"column_start":9,"column_end":15},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":5485},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":296652,"byte_end":296658,"line_start":161,"line_end":161,"column_start":30,"column_end":36},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":5485},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":296993,"byte_end":296999,"line_start":179,"line_end":179,"column_start":37,"column_end":43},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":5485},"to":{"krate":0,"index":3727}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":297577,"byte_end":297585,"line_start":205,"line_end":205,"column_start":45,"column_end":53},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":2556},"to":{"krate":0,"index":1095}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":298220,"byte_end":298234,"line_start":232,"line_end":232,"column_start":22,"column_end":36},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":2566},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":299533,"byte_end":299539,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":5495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":299726,"byte_end":299732,"line_start":28,"line_end":28,"column_start":37,"column_end":43},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":5495},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":300180,"byte_end":300186,"line_start":48,"line_end":48,"column_start":44,"column_end":50},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":5495},"to":{"krate":0,"index":3727}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":300831,"byte_end":300839,"line_start":75,"line_end":75,"column_start":53,"column_end":61},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":2607},"to":{"krate":0,"index":1095}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":301396,"byte_end":301410,"line_start":99,"line_end":99,"column_start":29,"column_end":43},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":2617},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":302306,"byte_end":302320,"line_start":142,"line_end":142,"column_start":9,"column_end":23},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":2632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":302432,"byte_end":302446,"line_start":148,"line_end":148,"column_start":36,"column_end":50},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":2632},"to":{"krate":0,"index":1109}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":303094,"byte_end":303108,"line_start":177,"line_end":177,"column_start":45,"column_end":59},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":2632},"to":{"krate":0,"index":1128}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":303428,"byte_end":303440,"line_start":195,"line_end":195,"column_start":34,"column_end":46},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":2654},"to":{"krate":0,"index":1117}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\product.rs","byte_start":304479,"byte_end":304494,"line_start":23,"line_end":23,"column_start":31,"column_end":46},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":2679},"to":{"krate":2,"index":1386}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\product.rs","byte_start":304516,"byte_end":304531,"line_start":25,"line_end":25,"column_start":15,"column_end":30},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":2679},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\product.rs","byte_start":304680,"byte_end":304695,"line_start":33,"line_end":33,"column_start":28,"column_end":43},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":2679},"to":{"krate":0,"index":1109}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\product.rs","byte_start":305245,"byte_end":305260,"line_start":60,"line_end":60,"column_start":37,"column_end":52},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":2679},"to":{"krate":0,"index":1128}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\product.rs","byte_start":305492,"byte_end":305507,"line_start":73,"line_end":73,"column_start":24,"column_end":39},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":2679},"to":{"krate":0,"index":1125}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\product.rs","byte_start":305692,"byte_end":305705,"line_start":86,"line_end":86,"column_start":26,"column_end":39},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":2704},"to":{"krate":0,"index":1117}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\sum.rs","byte_start":306693,"byte_end":306704,"line_start":23,"line_end":23,"column_start":31,"column_end":42},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":2728},"to":{"krate":2,"index":1386}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\sum.rs","byte_start":306726,"byte_end":306737,"line_start":25,"line_end":25,"column_start":15,"column_end":26},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":2728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\sum.rs","byte_start":306878,"byte_end":306889,"line_start":33,"line_end":33,"column_start":28,"column_end":39},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":2728},"to":{"krate":0,"index":1109}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\sum.rs","byte_start":307356,"byte_end":307367,"line_start":56,"line_end":56,"column_start":37,"column_end":48},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":2728},"to":{"krate":0,"index":1128}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\sum.rs","byte_start":307583,"byte_end":307594,"line_start":69,"line_end":69,"column_start":24,"column_end":35},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":2728},"to":{"krate":0,"index":1125}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\sum.rs","byte_start":307767,"byte_end":307776,"line_start":82,"line_end":82,"column_start":26,"column_end":35},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":2753},"to":{"krate":0,"index":1117}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":308872,"byte_end":308879,"line_start":21,"line_end":21,"column_start":48,"column_end":55},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":5504},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":309040,"byte_end":309047,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":5504},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":309262,"byte_end":309269,"line_start":37,"line_end":37,"column_start":33,"column_end":40},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":5504},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":309729,"byte_end":309736,"line_start":57,"line_end":57,"column_start":40,"column_end":47},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":5504},"to":{"krate":0,"index":3727}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":310478,"byte_end":310486,"line_start":88,"line_end":88,"column_start":48,"column_end":56},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":2796},"to":{"krate":0,"index":1095}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":311161,"byte_end":311176,"line_start":116,"line_end":116,"column_start":29,"column_end":44},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":2808},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":312390,"byte_end":312405,"line_start":170,"line_end":170,"column_start":16,"column_end":31},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":2826},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":312555,"byte_end":312570,"line_start":176,"line_end":176,"column_start":35,"column_end":50},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":2826},"to":{"krate":0,"index":1109}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":313313,"byte_end":313328,"line_start":206,"line_end":206,"column_start":44,"column_end":59},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":2826},"to":{"krate":0,"index":1128}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":313711,"byte_end":313724,"line_start":225,"line_end":225,"column_start":33,"column_end":46},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":2855},"to":{"krate":0,"index":1117}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":315112,"byte_end":315116,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":5522},"to":{"krate":2,"index":1572}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":315274,"byte_end":315278,"line_start":32,"line_end":32,"column_start":10,"column_end":14},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":5522},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":315388,"byte_end":315397,"line_start":39,"line_end":39,"column_start":9,"column_end":18},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":5513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":315591,"byte_end":315600,"line_start":49,"line_end":49,"column_start":30,"column_end":39},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":5513},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":316110,"byte_end":316119,"line_start":72,"line_end":72,"column_start":37,"column_end":46},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":5513},"to":{"krate":0,"index":3727}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":316819,"byte_end":316827,"line_start":102,"line_end":102,"column_start":45,"column_end":53},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":2902},"to":{"krate":0,"index":1095}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":317536,"byte_end":317553,"line_start":131,"line_end":131,"column_start":26,"column_end":43},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":2911},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":318651,"byte_end":318664,"line_start":183,"line_end":183,"column_start":26,"column_end":39},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":2927},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":319011,"byte_end":319024,"line_start":202,"line_end":202,"column_start":37,"column_end":50},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":2927},"to":{"krate":2,"index":3301}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":319275,"byte_end":319288,"line_start":215,"line_end":215,"column_start":35,"column_end":48},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":2927},"to":{"krate":2,"index":3321}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":319599,"byte_end":319616,"line_start":232,"line_end":232,"column_start":32,"column_end":49},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":2946},"to":{"krate":0,"index":1109}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":320574,"byte_end":320591,"line_start":270,"line_end":270,"column_start":41,"column_end":58},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":2946},"to":{"krate":0,"index":1128}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":321070,"byte_end":321085,"line_start":294,"line_end":294,"column_start":30,"column_end":45},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":2967},"to":{"krate":0,"index":1117}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":321827,"byte_end":321843,"line_start":331,"line_end":331,"column_start":31,"column_end":47},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":2983},"to":{"krate":0,"index":1125}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\while_some.rs","byte_start":322561,"byte_end":322570,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":5529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\while_some.rs","byte_start":322759,"byte_end":322768,"line_start":28,"line_end":28,"column_start":33,"column_end":42},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":5529},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\while_some.rs","byte_start":323398,"byte_end":323415,"line_start":56,"line_end":56,"column_start":40,"column_end":57},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":3009},"to":{"krate":0,"index":1109}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\while_some.rs","byte_start":324215,"byte_end":324232,"line_start":89,"line_end":89,"column_start":49,"column_end":66},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":3009},"to":{"krate":0,"index":1128}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\while_some.rs","byte_start":324635,"byte_end":324650,"line_start":111,"line_end":111,"column_start":38,"column_end":53},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":3030},"to":{"krate":0,"index":1117}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":327221,"byte_end":327231,"line_start":55,"line_end":55,"column_start":31,"column_end":41},"kind":{"Impl":{"id":327}},"from":{"krate":5,"index":289},"to":{"krate":0,"index":3788}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":327552,"byte_end":327562,"line_start":68,"line_end":68,"column_start":39,"column_end":49},"kind":{"Impl":{"id":328}},"from":{"krate":5,"index":289},"to":{"krate":0,"index":3788}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":327898,"byte_end":327906,"line_start":81,"line_end":81,"column_start":39,"column_end":47},"kind":{"Impl":{"id":329}},"from":{"krate":5,"index":933},"to":{"krate":0,"index":3788}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":328232,"byte_end":328240,"line_start":95,"line_end":95,"column_start":51,"column_end":59},"kind":{"Impl":{"id":330}},"from":{"krate":5,"index":933},"to":{"krate":0,"index":3788}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":328575,"byte_end":328583,"line_start":109,"line_end":109,"column_start":31,"column_end":39},"kind":{"Impl":{"id":331}},"from":{"krate":5,"index":3997},"to":{"krate":0,"index":3788}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":328876,"byte_end":328884,"line_start":122,"line_end":122,"column_start":39,"column_end":47},"kind":{"Impl":{"id":332}},"from":{"krate":5,"index":3997},"to":{"krate":0,"index":3788}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":329194,"byte_end":329201,"line_start":135,"line_end":135,"column_start":42,"column_end":49},"kind":{"Impl":{"id":333}},"from":{"krate":1,"index":5940},"to":{"krate":0,"index":3788}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":329671,"byte_end":329678,"line_start":151,"line_end":151,"column_start":54,"column_end":61},"kind":{"Impl":{"id":334}},"from":{"krate":1,"index":5940},"to":{"krate":0,"index":3788}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":330075,"byte_end":330082,"line_start":166,"line_end":166,"column_start":34,"column_end":41},"kind":{"Impl":{"id":335}},"from":{"krate":1,"index":5966},"to":{"krate":0,"index":3788}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":330437,"byte_end":330444,"line_start":180,"line_end":180,"column_start":42,"column_end":49},"kind":{"Impl":{"id":336}},"from":{"krate":1,"index":5966},"to":{"krate":0,"index":3788}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":330807,"byte_end":330817,"line_start":194,"line_end":194,"column_start":31,"column_end":41},"kind":{"Impl":{"id":337}},"from":{"krate":5,"index":1727},"to":{"krate":0,"index":3788}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":331425,"byte_end":331435,"line_start":217,"line_end":217,"column_start":39,"column_end":49},"kind":{"Impl":{"id":338}},"from":{"krate":5,"index":1727},"to":{"krate":0,"index":3788}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":331747,"byte_end":331753,"line_start":230,"line_end":230,"column_start":31,"column_end":37},"kind":{"Impl":{"id":339}},"from":{"krate":5,"index":4679},"to":{"krate":0,"index":3788}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":332698,"byte_end":332704,"line_start":259,"line_end":259,"column_start":39,"column_end":45},"kind":{"Impl":{"id":340}},"from":{"krate":5,"index":4679},"to":{"krate":0,"index":3788}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":332988,"byte_end":332994,"line_start":269,"line_end":269,"column_start":38,"column_end":44},"kind":{"Impl":{"id":341}},"from":{"krate":5,"index":4679},"to":{"krate":0,"index":3788}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":333285,"byte_end":333291,"line_start":279,"line_end":279,"column_start":33,"column_end":39},"kind":{"Impl":{"id":342}},"from":{"krate":5,"index":4679},"to":{"krate":0,"index":3788}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":333597,"byte_end":333603,"line_start":289,"line_end":289,"column_start":43,"column_end":49},"kind":{"Impl":{"id":343}},"from":{"krate":5,"index":4679},"to":{"krate":0,"index":3788}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":334552,"byte_end":334560,"line_start":320,"line_end":320,"column_start":31,"column_end":39},"kind":{"Impl":{"id":344}},"from":{"krate":5,"index":1992},"to":{"krate":0,"index":3788}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":334871,"byte_end":334879,"line_start":333,"line_end":333,"column_start":39,"column_end":47},"kind":{"Impl":{"id":345}},"from":{"krate":5,"index":1992},"to":{"krate":0,"index":3788}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":335316,"byte_end":335319,"line_start":349,"line_end":349,"column_start":39,"column_end":42},"kind":{"Impl":{"id":346}},"from":{"krate":5,"index":3563},"to":{"krate":0,"index":3788}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":336356,"byte_end":336362,"line_start":30,"line_end":30,"column_start":9,"column_end":15},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":5538},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":337211,"byte_end":337217,"line_start":57,"line_end":57,"column_start":30,"column_end":36},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":5538},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":337667,"byte_end":337681,"line_start":79,"line_end":79,"column_start":45,"column_end":59},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":3212},"to":{"krate":0,"index":1132}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":338732,"byte_end":338739,"line_start":126,"line_end":126,"column_start":30,"column_end":37},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":5547},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":339057,"byte_end":339064,"line_start":144,"line_end":144,"column_start":37,"column_end":44},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":5547},"to":{"krate":0,"index":3727}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":339676,"byte_end":339691,"line_start":176,"line_end":176,"column_start":36,"column_end":51},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":3236},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":340488,"byte_end":340492,"line_start":210,"line_end":210,"column_start":29,"column_end":33},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":3246},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":340870,"byte_end":340874,"line_start":229,"line_end":229,"column_start":40,"column_end":44},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":3246},"to":{"krate":2,"index":3301}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":341003,"byte_end":341007,"line_start":236,"line_end":236,"column_start":38,"column_end":42},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":3246},"to":{"krate":2,"index":3321}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":341346,"byte_end":341350,"line_start":7,"line_end":7,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":1395},"to":{"krate":0,"index":3264}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":341353,"byte_end":341357,"line_start":7,"line_end":7,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1386},"to":{"krate":0,"index":3264}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":344029,"byte_end":344034,"line_start":94,"line_end":94,"column_start":44,"column_end":49},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":3294},"to":{"krate":0,"index":3264}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":344915,"byte_end":344924,"line_start":130,"line_end":130,"column_start":27,"column_end":36},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":3310},"to":{"krate":0,"index":3264}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":345961,"byte_end":345973,"line_start":172,"line_end":172,"column_start":33,"column_end":45},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":3328},"to":{"krate":0,"index":3264}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":346608,"byte_end":346614,"line_start":200,"line_end":200,"column_start":45,"column_end":51},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":3341},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":348015,"byte_end":348021,"line_start":252,"line_end":252,"column_start":42,"column_end":48},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":3358},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":348962,"byte_end":348975,"line_start":292,"line_end":292,"column_start":41,"column_end":54},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":3376},"to":{"krate":0,"index":1109}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":350238,"byte_end":350251,"line_start":338,"line_end":338,"column_start":50,"column_end":63},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":3376},"to":{"krate":0,"index":1128}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":350919,"byte_end":350930,"line_start":367,"line_end":367,"column_start":39,"column_end":50},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":3404},"to":{"krate":0,"index":1117}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":351671,"byte_end":351683,"line_start":400,"line_end":400,"column_start":40,"column_end":52},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":3422},"to":{"krate":0,"index":1125}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":352767,"byte_end":352775,"line_start":446,"line_end":446,"column_start":38,"column_end":46},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":3447},"to":{"krate":0,"index":3264}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":353901,"byte_end":353906,"line_start":36,"line_end":36,"column_start":25,"column_end":30},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":3471},"to":{"krate":2,"index":2002}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":353996,"byte_end":354001,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":3471},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":354137,"byte_end":354142,"line_start":48,"line_end":48,"column_start":36,"column_end":41},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":3471},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":354428,"byte_end":354433,"line_start":63,"line_end":63,"column_start":43,"column_end":48},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":3471},"to":{"krate":0,"index":3727}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":354913,"byte_end":354926,"line_start":86,"line_end":86,"column_start":28,"column_end":41},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":3493},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\once.rs","byte_start":356225,"byte_end":356229,"line_start":34,"line_end":34,"column_start":36,"column_end":40},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":5557},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\once.rs","byte_start":356515,"byte_end":356519,"line_start":49,"line_end":49,"column_start":43,"column_end":47},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":5557},"to":{"krate":0,"index":3727}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":31135,"byte_end":31136,"line_start":255,"line_end":255,"column_start":67,"column_end":68},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":3540},"to":{"krate":0,"index":3533}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":32644,"byte_end":32645,"line_start":302,"line_end":302,"column_start":70,"column_end":71},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":3551},"to":{"krate":0,"index":3544}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":33534,"byte_end":33539,"line_start":328,"line_end":328,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1391},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":33542,"byte_end":33546,"line_start":328,"line_end":328,"column_start":37,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":1386},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":88986,"byte_end":88987,"line_start":1974,"line_end":1974,"column_start":52,"column_end":53},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":3723},"to":{"krate":0,"index":3529}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":89354,"byte_end":89370,"line_start":1988,"line_end":1988,"column_start":36,"column_end":52},"kind":"SuperTrait","from":{"krate":0,"index":3555},"to":{"krate":0,"index":3727}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":112430,"byte_end":112436,"line_start":2698,"line_end":2698,"column_start":21,"column_end":27},"kind":{"Impl":{"id":376}},"from":{"krate":2,"index":32716},"to":{"krate":0,"index":3793}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":112761,"byte_end":112767,"line_start":2715,"line_end":2715,"column_start":24,"column_end":30},"kind":{"Impl":{"id":377}},"from":{"krate":2,"index":32810},"to":{"krate":0,"index":3793}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":357898,"byte_end":357904,"line_start":27,"line_end":27,"column_start":40,"column_end":46},"kind":{"Impl":{"id":378}},"from":{"krate":2,"index":32716},"to":{"krate":0,"index":3529}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":358077,"byte_end":358085,"line_start":36,"line_end":36,"column_start":36,"column_end":44},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":5569},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":358380,"byte_end":358388,"line_start":51,"line_end":51,"column_start":43,"column_end":51},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":5569},"to":{"krate":0,"index":3727}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":359550,"byte_end":359554,"line_start":92,"line_end":92,"column_start":29,"column_end":33},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":5578},"to":{"krate":2,"index":2002}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":361035,"byte_end":361049,"line_start":151,"line_end":151,"column_start":28,"column_end":42},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":3855},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":361661,"byte_end":361667,"line_start":174,"line_end":174,"column_start":48,"column_end":54},"kind":{"Impl":{"id":387}},"from":{"krate":2,"index":32716},"to":{"krate":0,"index":3784}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":364277,"byte_end":364282,"line_start":50,"line_end":50,"column_start":34,"column_end":39},"kind":{"Impl":{"id":388}},"from":{"krate":2,"index":25948},"to":{"krate":0,"index":3529}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":364559,"byte_end":364571,"line_start":66,"line_end":66,"column_start":26,"column_end":38},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":3892},"to":{"krate":2,"index":3333}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":372874,"byte_end":372878,"line_start":49,"line_end":49,"column_start":9,"column_end":13},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":5813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":373452,"byte_end":373466,"line_start":63,"line_end":63,"column_start":34,"column_end":48},"kind":{"Impl":{"id":391}},"from":{"krate":2,"index":26002},"to":{"krate":0,"index":3529}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\result.rs","byte_start":377883,"byte_end":377889,"line_start":20,"line_end":20,"column_start":43,"column_end":49},"kind":{"Impl":{"id":392}},"from":{"krate":2,"index":32810},"to":{"krate":0,"index":3529}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\result.rs","byte_start":378328,"byte_end":378332,"line_start":42,"line_end":42,"column_start":29,"column_end":33},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":5928},"to":{"krate":2,"index":2002}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\result.rs","byte_start":379590,"byte_end":379596,"line_start":93,"line_end":93,"column_start":54,"column_end":60},"kind":{"Impl":{"id":400}},"from":{"krate":2,"index":32810},"to":{"krate":0,"index":3784}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mergesort.rs","byte_start":409282,"byte_end":409292,"line_start":33,"line_end":33,"column_start":18,"column_end":28},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":3969},"to":{"krate":2,"index":1572}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mergesort.rs","byte_start":412242,"byte_end":412248,"line_start":103,"line_end":103,"column_start":22,"column_end":28},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":3980},"to":{"krate":2,"index":1572}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mergesort.rs","byte_start":412497,"byte_end":412510,"line_start":115,"line_end":115,"column_start":22,"column_end":35},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":3986},"to":{"krate":2,"index":1572}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mergesort.rs","byte_start":416236,"byte_end":416245,"line_start":218,"line_end":218,"column_start":22,"column_end":31},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":3996},"to":{"krate":2,"index":1572}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mergesort.rs","byte_start":427687,"byte_end":427692,"line_start":522,"line_end":522,"column_start":22,"column_end":27},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":4018},"to":{"krate":2,"index":1572}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\quicksort.rs","byte_start":436879,"byte_end":436890,"line_start":22,"line_end":22,"column_start":18,"column_end":29},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":4044},"to":{"krate":2,"index":1572}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\quicksort.rs","byte_start":437120,"byte_end":437126,"line_start":35,"line_end":35,"column_start":18,"column_end":24},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":4051},"to":{"krate":2,"index":1572}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\quicksort.rs","byte_start":437333,"byte_end":437343,"line_start":47,"line_end":47,"column_start":18,"column_end":28},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":4057},"to":{"krate":2,"index":1572}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":396083,"byte_end":396087,"line_start":450,"line_end":450,"column_start":32,"column_end":36},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":5994},"to":{"krate":2,"index":2002}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":396214,"byte_end":396218,"line_start":456,"line_end":456,"column_start":51,"column_end":55},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":5994},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":396544,"byte_end":396548,"line_start":471,"line_end":471,"column_start":58,"column_end":62},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":5994},"to":{"krate":0,"index":3727}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":397059,"byte_end":397071,"line_start":495,"line_end":495,"column_start":43,"column_end":55},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":4212},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":397638,"byte_end":397644,"line_start":516,"line_end":516,"column_start":32,"column_end":38},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":6002},"to":{"krate":2,"index":2002}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":397773,"byte_end":397779,"line_start":522,"line_end":522,"column_start":51,"column_end":57},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":6002},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":398107,"byte_end":398113,"line_start":537,"line_end":537,"column_start":58,"column_end":64},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":6002},"to":{"krate":0,"index":3727}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":398744,"byte_end":398758,"line_start":565,"line_end":565,"column_start":43,"column_end":57},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":4242},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":399615,"byte_end":399622,"line_start":596,"line_end":596,"column_start":32,"column_end":39},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":6011},"to":{"krate":2,"index":2002}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":399752,"byte_end":399759,"line_start":602,"line_end":602,"column_start":51,"column_end":58},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":6011},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":400087,"byte_end":400094,"line_start":617,"line_end":617,"column_start":58,"column_end":65},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":6011},"to":{"krate":0,"index":3727}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":400776,"byte_end":400791,"line_start":646,"line_end":646,"column_start":43,"column_end":58},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":4273},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":401674,"byte_end":401681,"line_start":677,"line_end":677,"column_start":51,"column_end":58},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":6020},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":402011,"byte_end":402018,"line_start":692,"line_end":692,"column_start":58,"column_end":65},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":6020},"to":{"krate":0,"index":3727}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":402539,"byte_end":402554,"line_start":716,"line_end":716,"column_start":43,"column_end":58},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":4300},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":403201,"byte_end":403210,"line_start":740,"line_end":740,"column_start":51,"column_end":60},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":6028},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":403542,"byte_end":403551,"line_start":755,"line_end":755,"column_start":58,"column_end":67},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":6028},"to":{"krate":0,"index":3727}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":404192,"byte_end":404209,"line_start":783,"line_end":783,"column_start":43,"column_end":60},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":4326},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":405053,"byte_end":405058,"line_start":813,"line_end":813,"column_start":36,"column_end":41},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":4338},"to":{"krate":2,"index":2002}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":405241,"byte_end":405246,"line_start":822,"line_end":822,"column_start":36,"column_end":41},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":4338},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":405442,"byte_end":405447,"line_start":828,"line_end":828,"column_start":40,"column_end":45},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":4338},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":406941,"byte_end":406949,"line_start":889,"line_end":889,"column_start":36,"column_end":44},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":4372},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":407174,"byte_end":407182,"line_start":897,"line_end":897,"column_start":40,"column_end":48},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":4372},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":477849,"byte_end":477854,"line_start":283,"line_end":283,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":1391},"to":{"krate":0,"index":4428}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":477857,"byte_end":477861,"line_start":283,"line_end":283,"column_start":32,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":1395},"to":{"krate":0,"index":4428}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":477864,"byte_end":477868,"line_start":283,"line_end":283,"column_start":39,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":1386},"to":{"krate":0,"index":4428}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":479613,"byte_end":479615,"line_start":345,"line_end":345,"column_start":54,"column_end":56},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":4457},"to":{"krate":0,"index":4428}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":480873,"byte_end":480878,"line_start":398,"line_end":398,"column_start":32,"column_end":37},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":6040},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":481138,"byte_end":481151,"line_start":409,"line_end":409,"column_start":33,"column_end":46},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":4471},"to":{"krate":0,"index":1132}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":481950,"byte_end":481961,"line_start":443,"line_end":443,"column_start":32,"column_end":43},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":6049},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":482312,"byte_end":482331,"line_start":458,"line_end":458,"column_start":33,"column_end":52},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":4485},"to":{"krate":0,"index":1132}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":483318,"byte_end":483323,"line_start":498,"line_end":498,"column_start":32,"column_end":37},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":6058},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":483581,"byte_end":483594,"line_start":509,"line_end":509,"column_start":33,"column_end":46},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":4501},"to":{"krate":0,"index":1132}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":484351,"byte_end":484362,"line_start":542,"line_end":542,"column_start":32,"column_end":43},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":6067},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":484627,"byte_end":484646,"line_start":553,"line_end":553,"column_start":33,"column_end":52},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":4515},"to":{"krate":0,"index":1132}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":485387,"byte_end":485392,"line_start":583,"line_end":583,"column_start":23,"column_end":28},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":6076},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":485542,"byte_end":485547,"line_start":589,"line_end":589,"column_start":44,"column_end":49},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":6076},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":487207,"byte_end":487222,"line_start":649,"line_end":649,"column_start":23,"column_end":38},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":6089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":487376,"byte_end":487399,"line_start":655,"line_end":655,"column_start":36,"column_end":59},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":4549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":487707,"byte_end":487722,"line_start":664,"line_end":664,"column_start":44,"column_end":59},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":6089},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":488070,"byte_end":488093,"line_start":676,"line_end":676,"column_start":58,"column_end":81},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":4549},"to":{"krate":0,"index":1132}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":488906,"byte_end":488911,"line_start":707,"line_end":707,"column_start":32,"column_end":37},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":6102},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":489599,"byte_end":489614,"line_start":733,"line_end":733,"column_start":32,"column_end":47},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":6112},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":490304,"byte_end":490311,"line_start":761,"line_end":761,"column_start":44,"column_end":51},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":6122},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":490688,"byte_end":490703,"line_start":776,"line_end":776,"column_start":51,"column_end":66},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":4591},"to":{"krate":0,"index":1132}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":491747,"byte_end":491759,"line_start":818,"line_end":818,"column_start":44,"column_end":56},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":6135},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":492172,"byte_end":492192,"line_start":834,"line_end":834,"column_start":51,"column_end":71},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":4611},"to":{"krate":0,"index":1132}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":493363,"byte_end":493366,"line_start":18,"line_end":18,"column_start":40,"column_end":43},"kind":{"Impl":{"id":455}},"from":{"krate":5,"index":3563},"to":{"krate":0,"index":3529}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":493539,"byte_end":493547,"line_start":27,"line_end":27,"column_start":36,"column_end":44},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":6148},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":493844,"byte_end":493852,"line_start":42,"line_end":42,"column_start":43,"column_end":51},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":6148},"to":{"krate":0,"index":3727}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":494975,"byte_end":494986,"line_start":80,"line_end":80,"column_start":43,"column_end":54},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":4654},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":495650,"byte_end":495661,"line_start":100,"line_end":100,"column_start":39,"column_end":50},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":4654},"to":{"krate":2,"index":1572}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":496030,"byte_end":496040,"line_start":115,"line_end":115,"column_start":36,"column_end":46},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":4669},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":496362,"byte_end":496372,"line_start":129,"line_end":129,"column_start":47,"column_end":57},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":4669},"to":{"krate":2,"index":3301}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":496577,"byte_end":496587,"line_start":136,"line_end":136,"column_start":45,"column_end":55},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":4669},"to":{"krate":2,"index":3321}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":496693,"byte_end":496703,"line_start":142,"line_end":142,"column_start":32,"column_end":42},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":4669},"to":{"krate":2,"index":1572}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\par_either.rs","byte_start":497751,"byte_end":497757,"line_start":6,"line_end":6,"column_start":33,"column_end":39},"kind":{"Impl":{"id":464}},"from":{"krate":21,"index":167},"to":{"krate":0,"index":3555}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\par_either.rs","byte_start":498277,"byte_end":498283,"line_start":28,"line_end":28,"column_start":40,"column_end":46},"kind":{"Impl":{"id":465}},"from":{"krate":21,"index":167},"to":{"krate":0,"index":3727}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\par_either.rs","byte_start":499077,"byte_end":499083,"line_start":59,"line_end":59,"column_start":37,"column_end":43},"kind":{"Impl":{"id":466}},"from":{"krate":21,"index":167},"to":{"krate":0,"index":3788}}]}