{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7","program":"C:\\Users\\Zimmerle\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--edition=2018","--crate-name","rusttype","C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=e5182d6a2b4d2e3e","-C","extra-filename=-e5182d6a2b4d2e3e","--out-dir","e:\\SIMON\\Dokumente\\Programieren\\rust\\games\\pistontetris\\pistontetris\\pistontetris\\target\\rls\\debug\\deps","-L","dependency=e:\\SIMON\\Dokumente\\Programieren\\rust\\games\\pistontetris\\pistontetris\\pistontetris\\target\\rls\\debug\\deps","--extern","approx=e:\\SIMON\\Dokumente\\Programieren\\rust\\games\\pistontetris\\pistontetris\\pistontetris\\target\\rls\\debug\\deps\\libapprox-c2e6a1a8a69f1526.rmeta","--extern","arrayvec=e:\\SIMON\\Dokumente\\Programieren\\rust\\games\\pistontetris\\pistontetris\\pistontetris\\target\\rls\\debug\\deps\\libarrayvec-a21d491c6d12957c.rmeta","--extern","ordered_float=e:\\SIMON\\Dokumente\\Programieren\\rust\\games\\pistontetris\\pistontetris\\pistontetris\\target\\rls\\debug\\deps\\libordered_float-19ebd98fb960a468.rmeta","--extern","stb_truetype=e:\\SIMON\\Dokumente\\Programieren\\rust\\games\\pistontetris\\pistontetris\\pistontetris\\target\\rls\\debug\\deps\\libstb_truetype-a58902aaa8a6dc54.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Zimmerle\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"e:\\SIMON\\Dokumente\\Programieren\\rust\\games\\pistontetris\\pistontetris\\pistontetris\\target\\rls\\debug\\deps\\librusttype-e5182d6a2b4d2e3e.rmeta"},"prelude":{"crate_id":{"name":"rusttype","disambiguator":[6473419305214365996,17919126288278161494]},"crate_root":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src","external_crates":[{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13454279496936976369,256594374343364064]}},{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[10635428080862470944,4053010167158610789]}},{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2397070696586021034,1787692942867494326]}},{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13215350897914660053,4762041400992555299]}},{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8309206586370028958,10530789326598529563]}},{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12844497061290288730,1165546255938205329]}},{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17370511097861102976,8088456066398622915]}},{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","num":8,"id":{"name":"hashbrown","disambiguator":[1985867887572050615,3717448080532913995]}},{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","num":9,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10045986561377339069,14963295625130836827]}},{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14681916437073319406,9740076823699971540]}},{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","num":11,"id":{"name":"panic_unwind","disambiguator":[4514194809136982995,14217700833302823945]}},{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\rasterizer.rs","num":12,"id":{"name":"approx","disambiguator":[8531694396499639391,6839484270214360560]}},{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\rasterizer.rs","num":13,"id":{"name":"num_traits","disambiguator":[250909729605178667,7471714309434053556]}},{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\rasterizer.rs","num":14,"id":{"name":"ordered_float","disambiguator":[18313005805898793520,16359581452256411855]}},{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\rasterizer.rs","num":15,"id":{"name":"arrayvec","disambiguator":[9742200224502025928,1665981593285059283]}},{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\rasterizer.rs","num":16,"id":{"name":"nodrop","disambiguator":[3731771727497719198,13489708442398182793]}},{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","num":17,"id":{"name":"stb_truetype","disambiguator":[13974158262404749449,14818857598402116895]}},{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","num":18,"id":{"name":"byteorder","disambiguator":[1668327077863490874,9058268309931896717]}}],"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":0,"byte_end":42344,"line_start":1,"line_end":1103,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":5245,"byte_end":5250,"line_start":108,"line_end":108,"column_start":27,"column_end":32},"alias_span":null,"name":"point","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":16},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":5252,"byte_end":5258,"line_start":108,"line_end":108,"column_start":34,"column_end":40},"alias_span":null,"name":"vector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":390},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":5260,"byte_end":5265,"line_start":108,"line_end":108,"column_start":42,"column_end":47},"alias_span":null,"name":"Curve","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":372},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":5267,"byte_end":5271,"line_start":108,"line_end":108,"column_start":49,"column_end":53},"alias_span":null,"name":"Line","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":298},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":5273,"byte_end":5278,"line_start":108,"line_end":108,"column_start":55,"column_end":60},"alias_span":null,"name":"Point","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":408},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":5280,"byte_end":5284,"line_start":108,"line_end":108,"column_start":62,"column_end":66},"alias_span":null,"name":"Rect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":335},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":5286,"byte_end":5292,"line_start":108,"line_end":108,"column_start":68,"column_end":74},"alias_span":null,"name":"Vector","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":0,"byte_end":42344,"line_start":1,"line_end":1103,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":96},{"krate":0,"index":147},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":479},{"krate":0,"index":486},{"krate":0,"index":483},{"krate":0,"index":489},{"krate":0,"index":492},{"krate":0,"index":159},{"krate":0,"index":495},{"krate":0,"index":506},{"krate":0,"index":503},{"krate":0,"index":161},{"krate":0,"index":165},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":509},{"krate":0,"index":532},{"krate":0,"index":530},{"krate":0,"index":528},{"krate":0,"index":525},{"krate":0,"index":523},{"krate":0,"index":520},{"krate":0,"index":514},{"krate":0,"index":512},{"krate":0,"index":533},{"krate":0,"index":556},{"krate":0,"index":554},{"krate":0,"index":552},{"krate":0,"index":549},{"krate":0,"index":547},{"krate":0,"index":544},{"krate":0,"index":538},{"krate":0,"index":536},{"krate":0,"index":557},{"krate":0,"index":560},{"krate":0,"index":178},{"krate":0,"index":563},{"krate":0,"index":572},{"krate":0,"index":575},{"krate":0,"index":581},{"krate":0,"index":583},{"krate":0,"index":603},{"krate":0,"index":601},{"krate":0,"index":599},{"krate":0,"index":596},{"krate":0,"index":586},{"krate":0,"index":604},{"krate":0,"index":629},{"krate":0,"index":627},{"krate":0,"index":625},{"krate":0,"index":622},{"krate":0,"index":608},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":630},{"krate":0,"index":635},{"krate":0,"index":185},{"krate":0,"index":638},{"krate":0,"index":643},{"krate":0,"index":187},{"krate":0,"index":646},{"krate":0,"index":666},{"krate":0,"index":664},{"krate":0,"index":661},{"krate":0,"index":651},{"krate":0,"index":649},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":195},{"krate":0,"index":197},{"krate":0,"index":199},{"krate":0,"index":206},{"krate":0,"index":210},{"krate":0,"index":214},{"krate":0,"index":667},{"krate":0,"index":673},{"krate":0,"index":233},{"krate":0,"index":678},{"krate":0,"index":687},{"krate":0,"index":240},{"krate":0,"index":246},{"krate":0,"index":691},{"krate":0,"index":702},{"krate":0,"index":700},{"krate":0,"index":698},{"krate":0,"index":703},{"krate":0,"index":707},{"krate":0,"index":705},{"krate":0,"index":255},{"krate":0,"index":276},{"krate":0,"index":709},{"krate":0,"index":718},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":296}],"decl_id":null,"docs":" RustType is a pure Rust alternative to libraries like FreeType.","sig":null,"attributes":[{"value":"warn(clippy::all)","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":4888,"byte_end":4909,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"allow(clippy::cognitive_complexity,\n        clippy::doc_markdown,\n        clippy::cast_lossless,\n        clippy::many_single_char_names)","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":4910,"byte_end":5044,"line_start":92,"line_end":97,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":298},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":43041,"byte_end":43046,"line_start":18,"line_end":18,"column_start":12,"column_end":17},"name":"Point","qualname":"::geometry::Point","value":"Point { x, y }","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301}],"decl_id":null,"docs":" A point in 2-dimensional space, with each dimension of type `N`.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":43030,"byte_end":43081,"line_start":18,"line_end":21,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":43030,"byte_end":43081,"line_start":18,"line_end":21,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":43060,"byte_end":43061,"line_start":19,"line_end":19,"column_start":9,"column_end":10},"name":"x","qualname":"::geometry::Point::x","value":"N","parent":{"krate":0,"index":298},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":301},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":43074,"byte_end":43075,"line_start":20,"line_end":20,"column_start":9,"column_end":10},"name":"y","qualname":"::geometry::Point::y","value":"N","parent":{"krate":0,"index":298},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":335},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":43398,"byte_end":43404,"line_start":29,"line_end":29,"column_start":12,"column_end":18},"name":"Vector","qualname":"::geometry::Vector","value":"Vector { x, y }","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338}],"decl_id":null,"docs":" A vector in 2-dimensional space, with each dimension of type `N`.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":43387,"byte_end":43439,"line_start":29,"line_end":32,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":43387,"byte_end":43439,"line_start":29,"line_end":32,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":337},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":43418,"byte_end":43419,"line_start":30,"line_end":30,"column_start":9,"column_end":10},"name":"x","qualname":"::geometry::Vector::x","value":"N","parent":{"krate":0,"index":335},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":338},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":43432,"byte_end":43433,"line_start":31,"line_end":31,"column_start":9,"column_end":10},"name":"y","qualname":"::geometry::Vector::y","value":"N","parent":{"krate":0,"index":335},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":43509,"byte_end":43514,"line_start":35,"line_end":35,"column_start":8,"column_end":13},"name":"point","qualname":"::geometry::point","value":"fn <N> (x: N, y: N) -> Point<N>","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for generating `Point`s.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":43492,"byte_end":43501,"line_start":34,"line_end":34,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":16},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":43635,"byte_end":43641,"line_start":40,"line_end":40,"column_start":8,"column_end":14},"name":"vector","qualname":"::geometry::vector","value":"fn <N> (x: N, y: N) -> Vector<N>","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for generating `Vector`s.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":43618,"byte_end":43627,"line_start":39,"line_end":39,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":372},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":46307,"byte_end":46311,"line_start":144,"line_end":144,"column_start":12,"column_end":16},"name":"Line","qualname":"::geometry::Line","value":"Line { p }","parent":null,"children":[{"krate":0,"index":373}],"decl_id":null,"docs":" A straight line between two points, `p[0]` and `p[1]`\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":46296,"byte_end":46343,"line_start":144,"line_end":146,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":373},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":46322,"byte_end":46323,"line_start":145,"line_end":145,"column_start":9,"column_end":10},"name":"p","qualname":"::geometry::Line::p","value":"[geometry::Point<f32>; _]","parent":{"krate":0,"index":372},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":390},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":46507,"byte_end":46512,"line_start":150,"line_end":150,"column_start":12,"column_end":17},"name":"Curve","qualname":"::geometry::Curve","value":"Curve { p }","parent":null,"children":[{"krate":0,"index":391}],"decl_id":null,"docs":" A quadratic Bezier curve, starting at `p[0]`, ending at `p[2]`, with control\n point `p[1]`.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":46496,"byte_end":46544,"line_start":150,"line_end":152,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":391},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":46523,"byte_end":46524,"line_start":151,"line_end":151,"column_start":9,"column_end":10},"name":"p","qualname":"::geometry::Curve::p","value":"[geometry::Point<f32>; _]","parent":{"krate":0,"index":390},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":408},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":46710,"byte_end":46714,"line_start":156,"line_end":156,"column_start":12,"column_end":16},"name":"Rect","qualname":"::geometry::Rect","value":"Rect { min, max }","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411}],"decl_id":null,"docs":" A rectangle, with top-left corner at `min`, and bottom-right corner at\n `max`.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":46699,"byte_end":46767,"line_start":156,"line_end":159,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":46699,"byte_end":46767,"line_start":156,"line_end":159,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":410},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":46728,"byte_end":46731,"line_start":157,"line_end":157,"column_start":9,"column_end":12},"name":"min","qualname":"::geometry::Rect::min","value":"geometry::Point<N>","parent":{"krate":0,"index":408},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":411},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":46751,"byte_end":46754,"line_start":158,"line_end":158,"column_start":9,"column_end":12},"name":"max","qualname":"::geometry::Rect::max","value":"geometry::Point<N>","parent":{"krate":0,"index":408},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":46826,"byte_end":46831,"line_start":161,"line_end":161,"column_start":12,"column_end":17},"name":"width","qualname":"<Rect<N>>::width","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":46895,"byte_end":46901,"line_start":164,"line_end":164,"column_start":12,"column_end":18},"name":"height","qualname":"<Rect<N>>::height","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\rasterizer.rs","byte_start":52214,"byte_end":52222,"line_start":6,"line_end":6,"column_start":10,"column_end":18},"name":"PerSlice","qualname":"::rasterizer::SliceUp::PerSlice","value":"type PerSlice: Iterator<Item = Self>;","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\rasterizer.rs","byte_start":52256,"byte_end":52259,"line_start":7,"line_end":7,"column_start":10,"column_end":13},"name":"Out","qualname":"::rasterizer::SliceUp::Out","value":"type Out: Iterator<Item = Self::PerSlice>;","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":479},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":5783,"byte_end":5797,"line_start":123,"line_end":123,"column_start":12,"column_end":26},"name":"FontCollection","qualname":"::FontCollection","value":"","parent":null,"children":[],"decl_id":null,"docs":" A collection of fonts read straight from a font file's data. The data in the\n collection is not validated. This structure may or may not own the font\n data.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":489},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":6511,"byte_end":6515,"line_start":145,"line_end":145,"column_start":12,"column_end":16},"name":"Font","qualname":"::Font","value":"Font {  }","parent":null,"children":[{"krate":0,"index":491}],"decl_id":null,"docs":" A single font. This may or may not own the font data.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":497},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":7233,"byte_end":7238,"line_start":166,"line_end":166,"column_start":5,"column_end":10},"name":"ByRef","qualname":"::SharedBytes::ByRef","value":"SharedBytes::ByRef(&'a [u8])","parent":{"krate":0,"index":495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":500},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":7254,"byte_end":7259,"line_start":167,"line_end":167,"column_start":5,"column_end":10},"name":"ByArc","qualname":"::SharedBytes::ByArc","value":"SharedBytes::ByArc(Arc<[u8]>)","parent":{"krate":0,"index":495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":495},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":7211,"byte_end":7222,"line_start":165,"line_end":165,"column_start":10,"column_end":21},"name":"SharedBytes","qualname":"::SharedBytes","value":"SharedBytes::{ByRef, ByArc}","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":500}],"decl_id":null,"docs":" `SharedBytes` handles the lifetime of font data used in RustType. The data\n is either a shared reference to externally owned data, or managed by\n reference counting. `SharedBytes` can be conveniently used with `From` and\n `Into`, and dereferences to the contained bytes.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":9551,"byte_end":9560,"line_start":247,"line_end":247,"column_start":12,"column_end":21},"name":"Codepoint","qualname":"::Codepoint","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a Unicode code point.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":9540,"byte_end":9570,"line_start":247,"line_end":247,"column_start":1,"column_end":31}},{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":9540,"byte_end":9570,"line_start":247,"line_end":247,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":533},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":9840,"byte_end":9847,"line_start":252,"line_end":252,"column_start":12,"column_end":19},"name":"GlyphId","qualname":"::GlyphId","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a glyph identifier for a particular font. This identifier will\n not necessarily correspond to the correct glyph in a font other than the\n one that it was obtained from.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":9829,"byte_end":9857,"line_start":252,"line_end":252,"column_start":1,"column_end":29}},{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":9829,"byte_end":9857,"line_start":252,"line_end":252,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":557},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":10262,"byte_end":10267,"line_start":261,"line_end":261,"column_start":12,"column_end":17},"name":"Glyph","qualname":"::Glyph","value":"Glyph {  }","parent":null,"children":[{"krate":0,"index":559}],"decl_id":null,"docs":" A single glyph of a font. this may either be a thin wrapper referring to the\n font and the glyph id, or it may be a standalone glyph that owns the data\n needed by it.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":575},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":10605,"byte_end":10620,"line_start":278,"line_end":278,"column_start":12,"column_end":27},"name":"SharedGlyphData","qualname":"::SharedGlyphData","value":"SharedGlyphData { id, extents, scale_for_1_pixel, unit_h_metrics, shape }","parent":null,"children":[{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":576},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":10631,"byte_end":10633,"line_start":279,"line_end":279,"column_start":9,"column_end":11},"name":"id","qualname":"::SharedGlyphData::id","value":"u32","parent":{"krate":0,"index":575},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":577},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":10648,"byte_end":10655,"line_start":280,"line_end":280,"column_start":9,"column_end":16},"name":"extents","qualname":"::SharedGlyphData::extents","value":"std::option::Option<geometry::Rect<i32>>","parent":{"krate":0,"index":575},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":578},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":10684,"byte_end":10701,"line_start":281,"line_end":281,"column_start":9,"column_end":26},"name":"scale_for_1_pixel","qualname":"::SharedGlyphData::scale_for_1_pixel","value":"f32","parent":{"krate":0,"index":575},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":579},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":10716,"byte_end":10730,"line_start":282,"line_end":282,"column_start":9,"column_end":23},"name":"unit_h_metrics","qualname":"::SharedGlyphData::unit_h_metrics","value":"HMetrics","parent":{"krate":0,"index":575},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":580},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":10750,"byte_end":10755,"line_start":283,"line_end":283,"column_start":9,"column_end":14},"name":"shape","qualname":"::SharedGlyphData::shape","value":"std::option::Option<std::vec::Vec<stb_truetype::Vertex>>","parent":{"krate":0,"index":575},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":583},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":11034,"byte_end":11042,"line_start":289,"line_end":289,"column_start":12,"column_end":20},"name":"HMetrics","qualname":"::HMetrics","value":"HMetrics { advance_width, left_side_bearing }","parent":null,"children":[{"krate":0,"index":584},{"krate":0,"index":585}],"decl_id":null,"docs":" The \"horizontal metrics\" of a glyph. This is useful for calculating the\n horizontal offset of a glyph from the previous one in a string when laying a\n string out horizontally.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":11023,"byte_end":11332,"line_start":289,"line_end":296,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":584},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":11166,"byte_end":11179,"line_start":292,"line_end":292,"column_start":9,"column_end":22},"name":"advance_width","qualname":"::HMetrics::advance_width","value":"f32","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" The horizontal offset that the origin of the next glyph should be from\n the origin of this glyph.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":585},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":11307,"byte_end":11324,"line_start":295,"line_end":295,"column_start":9,"column_end":26},"name":"left_side_bearing","qualname":"::HMetrics::left_side_bearing","value":"f32","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" The horizontal offset between the origin of this glyph and the leftmost\n edge/point of the glyph.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":604},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":11613,"byte_end":11621,"line_start":301,"line_end":301,"column_start":12,"column_end":20},"name":"VMetrics","qualname":"::VMetrics","value":"VMetrics { ascent, descent, line_gap }","parent":null,"children":[{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607}],"decl_id":null,"docs":" The \"vertical metrics\" of a font at a particular scale. This is useful for\n calculating the amount of vertical space to give a line of text, and for\n computing the vertical offset between successive lines.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":11602,"byte_end":12073,"line_start":301,"line_end":311,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":605},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":11744,"byte_end":11750,"line_start":304,"line_end":304,"column_start":9,"column_end":15},"name":"ascent","qualname":"::VMetrics::ascent","value":"f32","parent":{"krate":0,"index":604},"children":[],"decl_id":null,"docs":" The highest point that any glyph in the font extends to above the\n baseline. Typically positive.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":606},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":11876,"byte_end":11883,"line_start":307,"line_end":307,"column_start":9,"column_end":16},"name":"descent","qualname":"::VMetrics::descent","value":"f32","parent":{"krate":0,"index":604},"children":[],"decl_id":null,"docs":" The lowest point that any glyph in the font extends to below the\n baseline. Typically negative.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":607},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":12057,"byte_end":12065,"line_start":310,"line_end":310,"column_start":9,"column_end":17},"name":"line_gap","qualname":"::VMetrics::line_gap","value":"f32","parent":{"krate":0,"index":604},"children":[],"decl_id":null,"docs":" The gap to leave between the descent of one line and the ascent of the\n next. This is of course only a guideline given by the font's designers.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":630},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":12735,"byte_end":12746,"line_start":338,"line_end":338,"column_start":12,"column_end":23},"name":"ScaledGlyph","qualname":"::ScaledGlyph","value":"ScaledGlyph {  }","parent":null,"children":[{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634}],"decl_id":null,"docs":" A glyph augmented with scaling information. You can query such a glyph for\n information that depends on the scale of the glyph.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":638},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":13270,"byte_end":13285,"line_start":357,"line_end":357,"column_start":12,"column_end":27},"name":"PositionedGlyph","qualname":"::PositionedGlyph","value":"PositionedGlyph {  }","parent":null,"children":[{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642}],"decl_id":null,"docs":" A glyph augmented with positioning and scaling information. You can query\n such a glyph for information that depends on the scale and position of the\n glyph.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":646},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":14159,"byte_end":14164,"line_start":380,"line_end":380,"column_start":12,"column_end":17},"name":"Scale","qualname":"::Scale","value":"Scale { x, y }","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":648}],"decl_id":null,"docs":" Defines the size of a rendered face of a font, in pixels, horizontally and\n vertically. A vertical scale of `y` pixels means that the distance betwen\n the ascent and descent lines (see `VMetrics`) of the face will be `y`\n pixels. If `x` and `y` are equal the scaling is uniform. Non-uniform scaling\n by a factor *f* in the horizontal direction is achieved by setting `x` equal\n to *f* times `y`.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":14148,"byte_end":14272,"line_start":380,"line_end":385,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":647},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":14212,"byte_end":14213,"line_start":382,"line_end":382,"column_start":9,"column_end":10},"name":"x","qualname":"::Scale::x","value":"f32","parent":{"krate":0,"index":646},"children":[],"decl_id":null,"docs":" Horizontal scale, in pixels.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":648},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":14263,"byte_end":14264,"line_start":384,"line_end":384,"column_start":9,"column_end":10},"name":"y","qualname":"::Scale::y","value":"f32","parent":{"krate":0,"index":646},"children":[],"decl_id":null,"docs":" Vertical scale, in pixels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":14375,"byte_end":14382,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"uniform","qualname":"<Scale>::uniform","value":"fn (s: f32) -> Scale","parent":null,"children":[],"decl_id":null,"docs":" Uniform scaling, equivalent to `Scale { x: s, y: s }`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":14354,"byte_end":14363,"line_start":389,"line_end":389,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":191},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":14748,"byte_end":14759,"line_start":400,"line_end":400,"column_start":11,"column_end":22},"name":"IntoGlyphId","qualname":"::IntoGlyphId","value":"IntoGlyphId","parent":null,"children":[{"krate":0,"index":192}],"decl_id":null,"docs":" A trait for types that can be converted into a `GlyphId`, in the context of\n a specific font.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":14867,"byte_end":14880,"line_start":403,"line_end":403,"column_start":8,"column_end":21},"name":"into_glyph_id","qualname":"::IntoGlyphId::into_glyph_id","value":"fn (self, _: &Font<'_>) -> GlyphId","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" Convert `self` into a `GlyphId`, consulting the index map of `font` if\n necessary.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":15858,"byte_end":15868,"line_start":430,"line_end":430,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<FontCollection>::from_bytes","value":"fn <B> (bytes: B) -> Result<FontCollection<'a>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a font collection from an array of bytes, typically loaded\n from a font file, which may be a single font or a TrueType Collection\n holding a number of fonts. This array may be owned (e.g. `Vec<u8>`), or\n borrowed (`&[u8]`). As long as `From<T>` is implemented for `Bytes` for\n some type `T`, `T` can be used as input.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":16910,"byte_end":16919,"line_start":451,"line_end":451,"column_start":12,"column_end":21},"name":"into_font","qualname":"<FontCollection>::into_font","value":"fn (self) -> Result<Font<'a>, Error>","parent":null,"children":[],"decl_id":null,"docs":" If this `FontCollection` holds a single font, or a TrueType Collection\n containing only one font, return that as a `Font`. The `FontCollection`\n is consumed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":17946,"byte_end":17953,"line_start":472,"line_end":472,"column_start":12,"column_end":19},"name":"font_at","qualname":"<FontCollection>::font_at","value":"fn (&self, i: usize) -> Result<Font<'a>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Gets the font at index `i` in the font collection, if it exists and is\n valid. The produced font borrows the font data that is either borrowed\n or owned by this font collection.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":18372,"byte_end":18382,"line_start":480,"line_end":480,"column_start":12,"column_end":22},"name":"into_fonts","qualname":"<FontCollection>::into_fonts","value":"fn (self) -> IntoFontsIter<'a>","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into an `Iterator` yielding each `Font` that exists\n within the collection.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":18522,"byte_end":18535,"line_start":487,"line_end":487,"column_start":12,"column_end":25},"name":"IntoFontsIter","qualname":"::IntoFontsIter","value":"IntoFontsIter {  }","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":19140,"byte_end":19150,"line_start":505,"line_end":505,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<Font>::from_bytes","value":"fn <B> (bytes: B) -> Result<Font<'a>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a font from an array of bytes, this is a shortcut for\n `FontCollection::from_bytes` for collections comprised of a single font.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":19466,"byte_end":19475,"line_start":511,"line_end":511,"column_start":12,"column_end":21},"name":"v_metrics","qualname":"<Font>::v_metrics","value":"fn (&self, scale: Scale) -> VMetrics","parent":null,"children":[],"decl_id":null,"docs":" The \"vertical metrics\" for this font at a given scale. These metrics are\n shared by all of the glyphs in the font. See `VMetrics` for more detail.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":19782,"byte_end":19800,"line_start":519,"line_end":519,"column_start":12,"column_end":30},"name":"v_metrics_unscaled","qualname":"<Font>::v_metrics_unscaled","value":"fn (&self) -> VMetrics","parent":null,"children":[],"decl_id":null,"docs":" Get the unscaled VMetrics for this font, shared by all glyphs.\n See `VMetrics` for more detail.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":19943,"byte_end":19955,"line_start":524,"line_end":524,"column_start":12,"column_end":24},"name":"units_per_em","qualname":"<Font>::units_per_em","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the units per EM square of this font\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":20166,"byte_end":20177,"line_start":530,"line_end":530,"column_start":12,"column_end":23},"name":"glyph_count","qualname":"<Font>::glyph_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of glyphs present in this font. Glyph identifiers for this\n font will always be in the range `0..self.glyph_count()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":20800,"byte_end":20805,"line_start":544,"line_end":544,"column_start":12,"column_end":17},"name":"glyph","qualname":"<Font>::glyph","value":"fn <C> (&self, id: C) -> Glyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding glyph for a Unicode code point or a glyph id\n for this font.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":21352,"byte_end":21362,"line_start":556,"line_end":556,"column_start":12,"column_end":22},"name":"glyphs_for","qualname":"<Font>::glyphs_for","value":"fn <I> (&self, itr: I) -> GlyphIter<'a, '_, I>","parent":null,"children":[],"decl_id":null,"docs":" A convenience function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":21574,"byte_end":21591,"line_start":563,"line_end":563,"column_start":12,"column_end":29},"name":"font_name_strings","qualname":"<Font>::font_name_strings","value":"fn (&self) -> tt::FontNameIter<'_, SharedBytes<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the names for this font.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":23775,"byte_end":23781,"line_start":612,"line_end":612,"column_start":12,"column_end":18},"name":"layout","qualname":"<Font>::layout","value":"fn <'b> (&'b self, s: &'b str, scale: Scale, start: Point<f32>) -> LayoutIter<'a, 'b>","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for laying out glyphs for a string horizontally.\n It does not take control characters like line breaks into account, as\n treatment of these is likely to depend on the application.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":24178,"byte_end":24190,"line_start":624,"line_end":624,"column_start":12,"column_end":24},"name":"pair_kerning","qualname":"<Font>::pair_kerning","value":"fn <A, B> (&self, scale: Scale, first: A, second: B) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns additional kerning to apply as well as that given by HMetrics\n for a particular pair of glyphs.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":667},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":24641,"byte_end":24650,"line_start":637,"line_end":637,"column_start":12,"column_end":21},"name":"GlyphIter","qualname":"::GlyphIter","value":"GlyphIter {  }","parent":null,"children":[{"krate":0,"index":671},{"krate":0,"index":672}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":678},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":24999,"byte_end":25009,"line_start":654,"line_end":654,"column_start":12,"column_end":22},"name":"LayoutIter","qualname":"::LayoutIter","value":"LayoutIter {  }","parent":null,"children":[{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":26133,"byte_end":26137,"line_start":685,"line_end":685,"column_start":12,"column_end":16},"name":"font","qualname":"<Glyph>::font","value":"fn (&self) -> Option<&Font<'a>>","parent":null,"children":[],"decl_id":null,"docs":" The font to which this glyph belongs. If the glyph is a standalone glyph\n that owns its resources, it no longer has a reference to the font which\n it was created from (using `standalone()`). In which case, `None` is\n returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":26362,"byte_end":26364,"line_start":692,"line_end":692,"column_start":12,"column_end":14},"name":"id","qualname":"<Glyph>::id","value":"fn (&self) -> GlyphId","parent":null,"children":[],"decl_id":null,"docs":" The glyph identifier for this glyph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":26680,"byte_end":26686,"line_start":700,"line_end":700,"column_start":12,"column_end":18},"name":"scaled","qualname":"<Glyph>::scaled","value":"fn (self, scale: Scale) -> ScaledGlyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" Augments this glyph with scaling information, making methods that depend\n on the scale of the glyph available.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":27699,"byte_end":27709,"line_start":725,"line_end":725,"column_start":12,"column_end":22},"name":"standalone","qualname":"<Glyph>::standalone","value":"fn (&self) -> Glyph<'static>","parent":null,"children":[],"decl_id":null,"docs":" Turns a `Glyph<'a>` into a `Glyph<'static>`. This produces a glyph that\n owns its resources, extracted from the font. This glyph can outlive the\n font that it comes from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":28896,"byte_end":28904,"line_start":750,"line_end":750,"column_start":12,"column_end":20},"name":"get_data","qualname":"<Glyph>::get_data","value":"fn (&self) -> Option<Arc<SharedGlyphData>>","parent":null,"children":[],"decl_id":null,"docs":" Get the data from this glyph (such as width, extents, vertices, etc.).\n Only possible if the glyph is a shared glyph.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":692},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":29200,"byte_end":29204,"line_start":760,"line_end":760,"column_start":5,"column_end":9},"name":"Line","qualname":"::Segment::Line","value":"Segment::Line(Line)","parent":{"krate":0,"index":691},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":695},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":29216,"byte_end":29221,"line_start":761,"line_end":761,"column_start":5,"column_end":10},"name":"Curve","qualname":"::Segment::Curve","value":"Segment::Curve(Curve)","parent":{"krate":0,"index":691},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":691},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":29186,"byte_end":29193,"line_start":759,"line_end":759,"column_start":10,"column_end":17},"name":"Segment","qualname":"::Segment","value":"Segment::{Line, Curve}","parent":null,"children":[{"krate":0,"index":692},{"krate":0,"index":695}],"decl_id":null,"docs":" Part of a `Contour`, either a `Line` or a `Curve`.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":29177,"byte_end":29231,"line_start":759,"line_end":762,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":703},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":29325,"byte_end":29332,"line_start":765,"line_end":765,"column_start":12,"column_end":19},"name":"Contour","qualname":"::Contour","value":"Contour { segments }","parent":null,"children":[{"krate":0,"index":704}],"decl_id":null,"docs":" A closed loop consisting of a sequence of `Segment`s.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":704},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":29343,"byte_end":29351,"line_start":766,"line_end":766,"column_start":9,"column_end":17},"name":"segments","qualname":"::Contour::segments","value":"std::vec::Vec<Segment>","parent":{"krate":0,"index":703},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":29452,"byte_end":29454,"line_start":770,"line_end":770,"column_start":12,"column_end":14},"name":"id","qualname":"<ScaledGlyph>::id","value":"fn (&self) -> GlyphId","parent":null,"children":[],"decl_id":null,"docs":" The glyph identifier for this glyph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":29768,"byte_end":29772,"line_start":777,"line_end":777,"column_start":12,"column_end":16},"name":"font","qualname":"<ScaledGlyph>::font","value":"fn (&self) -> Option<&Font<'a>>","parent":null,"children":[],"decl_id":null,"docs":" The font to which this glyph belongs. If the glyph is a standalone glyph\n that owns its resources, it no longer has a reference to the font which\n it was created from (using `standalone()`). In which case, `None` is\n returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":29896,"byte_end":29909,"line_start":781,"line_end":781,"column_start":12,"column_end":25},"name":"into_unscaled","qualname":"<ScaledGlyph>::into_unscaled","value":"fn (self) -> Glyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" A reference to this glyph without the scaling\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":30007,"byte_end":30015,"line_start":785,"line_end":785,"column_start":12,"column_end":20},"name":"unscaled","qualname":"<ScaledGlyph>::unscaled","value":"fn (&self) -> &Glyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" Removes the scaling from this glyph\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":30205,"byte_end":30215,"line_start":790,"line_end":790,"column_start":12,"column_end":22},"name":"positioned","qualname":"<ScaledGlyph>::positioned","value":"fn (self, p: Point<f32>) -> PositionedGlyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" Augments this glyph with positioning information, making methods that\n depend on the position of the glyph available.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":30420,"byte_end":30425,"line_start":798,"line_end":798,"column_start":12,"column_end":17},"name":"scale","qualname":"<ScaledGlyph>::scale","value":"fn (&self) -> Scale","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":30582,"byte_end":30591,"line_start":803,"line_end":803,"column_start":12,"column_end":21},"name":"h_metrics","qualname":"<ScaledGlyph>::h_metrics","value":"fn (&self) -> HMetrics","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the \"horizontal metrics\" of this glyph. See `HMetrics` for\n more detail.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":33255,"byte_end":33260,"line_start":866,"line_end":866,"column_start":12,"column_end":17},"name":"shape","qualname":"<ScaledGlyph>::shape","value":"fn (&self) -> Option<Vec<Contour>>","parent":null,"children":[],"decl_id":null,"docs":" Produces a list of the contours that make up the shape of this glyph.\n Each contour consists of a sequence of segments. Each segment is either\n a straight `Line` or a `Curve`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":33572,"byte_end":33590,"line_start":872,"line_end":872,"column_start":12,"column_end":30},"name":"exact_bounding_box","qualname":"<ScaledGlyph>::exact_bounding_box","value":"fn (&self) -> Option<Rect<f32>>","parent":null,"children":[],"decl_id":null,"docs":" The bounding box of the shape of this glyph, not to be confused with\n `pixel_bounding_box`, the conservative pixel-boundary bounding box. The\n coordinates are relative to the glyph's origin.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":34496,"byte_end":34506,"line_start":892,"line_end":892,"column_start":12,"column_end":22},"name":"standalone","qualname":"<ScaledGlyph>::standalone","value":"fn (&self) -> ScaledGlyph<'static>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a glyph that owns its data from this glyph. This is similar\n to `Glyph::standalone`. See that function for more details.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":36059,"byte_end":36061,"line_start":931,"line_end":931,"column_start":12,"column_end":14},"name":"id","qualname":"<PositionedGlyph>::id","value":"fn (&self) -> GlyphId","parent":null,"children":[],"decl_id":null,"docs":" The glyph identifier for this glyph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":36376,"byte_end":36380,"line_start":938,"line_end":938,"column_start":12,"column_end":16},"name":"font","qualname":"<PositionedGlyph>::font","value":"fn (&self) -> Option<&Font<'a>>","parent":null,"children":[],"decl_id":null,"docs":" The font to which this glyph belongs. If the glyph is a standalone glyph\n that owns its resources, it no longer has a reference to the font which\n it was created from (using `standalone()`). In which case, `None` is\n returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":36505,"byte_end":36517,"line_start":942,"line_end":942,"column_start":12,"column_end":24},"name":"unpositioned","qualname":"<PositionedGlyph>::unpositioned","value":"fn (&self) -> &ScaledGlyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" A reference to this glyph without positioning\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":36629,"byte_end":36646,"line_start":946,"line_end":946,"column_start":12,"column_end":29},"name":"into_unpositioned","qualname":"<PositionedGlyph>::into_unpositioned","value":"fn (self) -> ScaledGlyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" Removes the positioning from this glyph\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":37025,"byte_end":37043,"line_start":953,"line_end":953,"column_start":12,"column_end":30},"name":"pixel_bounding_box","qualname":"<PositionedGlyph>::pixel_bounding_box","value":"fn (&self) -> Option<Rect<i32>>","parent":null,"children":[],"decl_id":null,"docs":" The conservative pixel-boundary bounding box for this glyph. This is the\n smallest rectangle aligned to pixel boundaries that encloses the shape\n of this glyph at this position. Note that the origin of the glyph, at\n pixel-space coordinates (0, 0), is at the top left of the bounding box.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":37213,"byte_end":37218,"line_start":958,"line_end":958,"column_start":12,"column_end":17},"name":"shape","qualname":"<PositionedGlyph>::shape","value":"fn (&self) -> Option<Vec<Contour>>","parent":null,"children":[],"decl_id":null,"docs":" Similar to `ScaledGlyph::shape()`, but with the position of the glyph\n taken into account.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":37318,"byte_end":37323,"line_start":961,"line_end":961,"column_start":12,"column_end":17},"name":"scale","qualname":"<PositionedGlyph>::scale","value":"fn (&self) -> Scale","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":37385,"byte_end":37393,"line_start":964,"line_end":964,"column_start":12,"column_end":20},"name":"position","qualname":"<PositionedGlyph>::position","value":"fn (&self) -> Point<f32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":38173,"byte_end":38177,"line_start":987,"line_end":987,"column_start":12,"column_end":16},"name":"draw","qualname":"<PositionedGlyph>::draw","value":"fn <O> (&self, o: O) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Rasterises this glyph. For each pixel in the rect given by\n `pixel_bounding_box()`, `o` is called:","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":39971,"byte_end":39981,"line_start":1034,"line_end":1034,"column_start":12,"column_end":22},"name":"standalone","qualname":"<PositionedGlyph>::standalone","value":"fn (&self) -> PositionedGlyph<'static>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a glyph that owns its data from this glyph. This is similar\n to `Glyph::standalone`. See that function for more details.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":40252,"byte_end":40264,"line_start":1043,"line_end":1043,"column_start":12,"column_end":24},"name":"set_position","qualname":"<PositionedGlyph>::set_position","value":"fn (&mut self, p: Point<f32>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Resets positioning information and recalculates the pixel bounding box\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":710},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":40966,"byte_end":40984,"line_start":1063,"line_end":1063,"column_start":5,"column_end":23},"name":"UnrecognizedFormat","qualname":"::Error::UnrecognizedFormat","value":"Error::UnrecognizedFormat","parent":{"krate":0,"index":709},"children":[],"decl_id":null,"docs":" Font data presented to rusttype is not in a format that the library\n recognizes.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":712},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":41095,"byte_end":41104,"line_start":1067,"line_end":1067,"column_start":5,"column_end":14},"name":"IllFormed","qualname":"::Error::IllFormed","value":"Error::IllFormed","parent":{"krate":0,"index":709},"children":[],"decl_id":null,"docs":" Font data presented to rusttype was ill-formed (lacking necessary\n tables, for example).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":714},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":41247,"byte_end":41273,"line_start":1071,"line_end":1071,"column_start":5,"column_end":31},"name":"CollectionIndexOutOfBounds","qualname":"::Error::CollectionIndexOutOfBounds","value":"Error::CollectionIndexOutOfBounds","parent":{"krate":0,"index":709},"children":[],"decl_id":null,"docs":" The caller tried to access the `i`'th font from a `FontCollection`, but\n the collection doesn't contain that many fonts.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":716},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":41426,"byte_end":41457,"line_start":1075,"line_end":1075,"column_start":5,"column_end":36},"name":"CollectionContainsMultipleFonts","qualname":"::Error::CollectionContainsMultipleFonts","value":"Error::CollectionContainsMultipleFonts","parent":{"krate":0,"index":709},"children":[],"decl_id":null,"docs":" The caller tried to convert a `FontCollection` into a font via\n `into_font`, but the `FontCollection` contains more than one font.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":709},"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":40858,"byte_end":40863,"line_start":1060,"line_end":1060,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"Error::{UnrecognizedFormat, IllFormed, CollectionIndexOutOfBounds, CollectionContainsMultipleFonts}","parent":null,"children":[{"krate":0,"index":710},{"krate":0,"index":712},{"krate":0,"index":714},{"krate":0,"index":716}],"decl_id":null,"docs":" The type for errors returned by rusttype.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":43738,"byte_end":43743,"line_start":44,"line_end":44,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":43924,"byte_end":43930,"line_start":51,"line_end":51,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":44112,"byte_end":44118,"line_start":58,"line_end":58,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":44280,"byte_end":44286,"line_start":65,"line_end":65,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":44616,"byte_end":44622,"line_start":79,"line_end":79,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":37},{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":44952,"byte_end":44958,"line_start":93,"line_end":93,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":45288,"byte_end":45294,"line_start":107,"line_end":107,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":45655,"byte_end":45660,"line_start":121,"line_end":121,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":45850,"byte_end":45855,"line_start":128,"line_end":128,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":46044,"byte_end":46050,"line_start":135,"line_end":135,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":46805,"byte_end":46809,"line_start":160,"line_end":160,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":47320,"byte_end":47324,"line_start":182,"line_end":182,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":47724,"byte_end":47729,"line_start":201,"line_end":201,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":49223,"byte_end":49228,"line_start":247,"line_end":247,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":49689,"byte_end":49693,"line_start":264,"line_end":264,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":50589,"byte_end":50610,"line_start":301,"line_end":301,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\rasterizer.rs","byte_start":52593,"byte_end":52606,"line_start":23,"line_end":23,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\rasterizer.rs","byte_start":53759,"byte_end":53763,"line_start":60,"line_end":60,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\rasterizer.rs","byte_start":54504,"byte_end":54518,"line_start":96,"line_end":96,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\rasterizer.rs","byte_start":57283,"byte_end":57288,"line_start":174,"line_end":174,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":6586,"byte_end":6590,"line_start":149,"line_end":149,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":7306,"byte_end":7317,"line_start":170,"line_end":170,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":7716,"byte_end":7727,"line_start":185,"line_end":185,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":8072,"byte_end":8083,"line_start":197,"line_end":197,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":8408,"byte_end":8419,"line_start":208,"line_end":208,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":8731,"byte_end":8742,"line_start":219,"line_end":219,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":9073,"byte_end":9084,"line_start":230,"line_end":230,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":10324,"byte_end":10329,"line_start":265,"line_end":265,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":12103,"byte_end":12111,"line_start":313,"line_end":313,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":12338,"byte_end":12346,"line_start":323,"line_end":323,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":12840,"byte_end":12851,"line_start":344,"line_end":344,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":13393,"byte_end":13408,"line_start":363,"line_end":363,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":14279,"byte_end":14284,"line_start":387,"line_end":387,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":15086,"byte_end":15095,"line_start":410,"line_end":410,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":15236,"byte_end":15243,"line_start":415,"line_end":415,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":15348,"byte_end":15362,"line_start":421,"line_end":421,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":18625,"byte_end":18638,"line_start":491,"line_end":491,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":18964,"byte_end":18968,"line_start":502,"line_end":502,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":225},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":24783,"byte_end":24792,"line_start":644,"line_end":644,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":25196,"byte_end":25206,"line_start":662,"line_end":662,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":25775,"byte_end":25780,"line_start":677,"line_end":677,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":29378,"byte_end":29389,"line_start":768,"line_end":768,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":35981,"byte_end":35996,"line_start":929,"line_end":929,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":289},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":41484,"byte_end":41489,"line_start":1078,"line_end":1078,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":41673,"byte_end":41678,"line_start":1084,"line_end":1084,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":42231,"byte_end":42236,"line_start":1099,"line_end":1099,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":43738,"byte_end":43743,"line_start":44,"line_end":44,"column_start":44,"column_end":49},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":298},"to":{"krate":2,"index":1447}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":43924,"byte_end":43930,"line_start":51,"line_end":51,"column_start":44,"column_end":50},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":335},"to":{"krate":2,"index":1442}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":44112,"byte_end":44118,"line_start":58,"line_end":58,"column_start":44,"column_end":50},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":335},"to":{"krate":2,"index":1447}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":44280,"byte_end":44286,"line_start":65,"line_end":65,"column_start":24,"column_end":30},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":335},"to":{"krate":2,"index":1452}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":44616,"byte_end":44622,"line_start":79,"line_end":79,"column_start":24,"column_end":30},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":335},"to":{"krate":2,"index":1452}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":44952,"byte_end":44958,"line_start":93,"line_end":93,"column_start":24,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":335},"to":{"krate":2,"index":1457}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":45288,"byte_end":45294,"line_start":107,"line_end":107,"column_start":24,"column_end":30},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":335},"to":{"krate":2,"index":1457}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":45655,"byte_end":45660,"line_start":121,"line_end":121,"column_start":55,"column_end":60},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":298},"to":{"krate":2,"index":1442}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":45850,"byte_end":45855,"line_start":128,"line_end":128,"column_start":55,"column_end":60},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":298},"to":{"krate":2,"index":1447}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":46044,"byte_end":46050,"line_start":135,"line_end":135,"column_start":54,"column_end":60},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":335},"to":{"krate":2,"index":1442}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":46805,"byte_end":46809,"line_start":160,"line_end":160,"column_start":38,"column_end":42},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":408},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":47320,"byte_end":47324,"line_start":182,"line_end":182,"column_start":27,"column_end":31},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":372},"to":{"krate":0,"index":70}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":47724,"byte_end":47729,"line_start":201,"line_end":201,"column_start":27,"column_end":32},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":390},"to":{"krate":0,"index":70}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":49007,"byte_end":49012,"line_start":239,"line_end":239,"column_start":16,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":1391},"to":{"krate":0,"index":81}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":49223,"byte_end":49228,"line_start":247,"line_end":247,"column_start":14,"column_end":19},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":390},"to":{"krate":0,"index":81}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":49689,"byte_end":49693,"line_start":264,"line_end":264,"column_start":14,"column_end":18},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":372},"to":{"krate":0,"index":81}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\geometry.rs","byte_start":50589,"byte_end":50610,"line_start":301,"line_end":301,"column_start":6,"column_end":27},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\rasterizer.rs","byte_start":52197,"byte_end":52202,"line_start":5,"line_end":5,"column_start":16,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":1391},"to":{"krate":0,"index":100}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\rasterizer.rs","byte_start":52593,"byte_end":52606,"line_start":23,"line_end":23,"column_start":19,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":465},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\rasterizer.rs","byte_start":53759,"byte_end":53763,"line_start":60,"line_end":60,"column_start":18,"column_end":22},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":372},"to":{"krate":0,"index":100}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\rasterizer.rs","byte_start":54504,"byte_end":54518,"line_start":96,"line_end":96,"column_start":19,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":116},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\rasterizer.rs","byte_start":57283,"byte_end":57288,"line_start":174,"line_end":174,"column_start":18,"column_end":23},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":390},"to":{"krate":0,"index":100}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":6586,"byte_end":6590,"line_start":149,"line_end":149,"column_start":21,"column_end":25},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":489},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":7306,"byte_end":7317,"line_start":170,"line_end":170,"column_start":32,"column_end":43},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":495},"to":{"krate":2,"index":1550}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":7716,"byte_end":7727,"line_start":185,"line_end":185,"column_start":29,"column_end":40},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":495},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":8072,"byte_end":8083,"line_start":197,"line_end":197,"column_start":26,"column_end":37},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":495},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":8408,"byte_end":8419,"line_start":208,"line_end":208,"column_start":26,"column_end":37},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":495},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":8731,"byte_end":8742,"line_start":219,"line_end":219,"column_start":24,"column_end":35},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":495},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":9073,"byte_end":9084,"line_start":230,"line_end":230,"column_start":42,"column_end":53},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":495},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":10324,"byte_end":10329,"line_start":265,"line_end":265,"column_start":21,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":557},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":12103,"byte_end":12111,"line_start":313,"line_end":313,"column_start":29,"column_end":37},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":604},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":12338,"byte_end":12346,"line_start":323,"line_end":323,"column_start":31,"column_end":39},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":604},"to":{"krate":2,"index":1452}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":12840,"byte_end":12851,"line_start":344,"line_end":344,"column_start":21,"column_end":32},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":630},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":13393,"byte_end":13408,"line_start":363,"line_end":363,"column_start":21,"column_end":36},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":638},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":14279,"byte_end":14284,"line_start":387,"line_end":387,"column_start":6,"column_end":11},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":15086,"byte_end":15095,"line_start":410,"line_end":410,"column_start":22,"column_end":31},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":509},"to":{"krate":0,"index":191}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":15236,"byte_end":15243,"line_start":415,"line_end":415,"column_start":22,"column_end":29},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":533},"to":{"krate":0,"index":191}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":15348,"byte_end":15362,"line_start":421,"line_end":421,"column_start":10,"column_end":24},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":18625,"byte_end":18638,"line_start":491,"line_end":491,"column_start":23,"column_end":36},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":206},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":18964,"byte_end":18968,"line_start":502,"line_end":502,"column_start":10,"column_end":14},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":24783,"byte_end":24792,"line_start":644,"line_end":644,"column_start":40,"column_end":49},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":667},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":25196,"byte_end":25206,"line_start":662,"line_end":662,"column_start":27,"column_end":37},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":678},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":25775,"byte_end":25780,"line_start":677,"line_end":677,"column_start":10,"column_end":15},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":557},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":29378,"byte_end":29389,"line_start":768,"line_end":768,"column_start":10,"column_end":21},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":630},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":35981,"byte_end":35996,"line_start":929,"line_end":929,"column_start":10,"column_end":25},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":638},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":41484,"byte_end":41489,"line_start":1078,"line_end":1078,"column_start":23,"column_end":28},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":709},"to":{"krate":2,"index":6709}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":41673,"byte_end":41678,"line_start":1084,"line_end":1084,"column_start":28,"column_end":33},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":709},"to":{"krate":1,"index":1537}},{"span":{"file_name":"C:\\Users\\Zimmerle\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.7.7\\src\\lib.rs","byte_start":42231,"byte_end":42236,"line_start":1099,"line_end":1099,"column_start":45,"column_end":50},"kind":{"Impl":{"id":50}},"from":{"krate":1,"index":2379},"to":{"krate":2,"index":2042}}]}